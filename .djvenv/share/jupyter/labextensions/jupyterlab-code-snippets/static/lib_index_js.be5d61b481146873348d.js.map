{"version":3,"file":"lib_index_js.be5d61b481146873348d.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AAC8D;AAC9D;AACA;AACA;AACO;AACP;AACA,0BAA0B,uDAAK,GAAG,uBAAuB;AACzD,oCAAoC,iEAAe,GAAG,qBAAqB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,mBAAmB;AACpD,0CAA0C,oEAAoE;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACmF;AACnC;AACS;AACL;AACC;AAC0D;AACrC;AACjC;AACW;AACZ;AACK;AACnB;AAC6B;AACJ;AACC;AACsB;AACd;AACgb;AACzb;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,8DAAO;AACnC;AACA,YAAY,yEAAU;AACtB,CAAC;AACD;AACA;AACA;AACO,iCAAiC,yDAAe;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,0EAA2B;AACnE;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mEAAc;AAChD,0CAA0C,8DAAU;AACpD;AACA;AACA;AACA;AACA,oBAAoB,kEAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,+DAAa;AACpD;AACA;AACA;AACA;AACA,4CAA4C,uDAAQ;AACpD;AACA;AACA;AACA;AACA,iDAAiD,2DAAY;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gEAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,qEAAmB,IAAI,iEAAe;AAChE,aAAa;AACb;AACA;AACA;AACA,mBAAmB,gEAAU;AAC7B;AACA;AACA,0BAA0B,iEAAe;AACzC,aAAa;AACb;AACA;AACA;AACA;AACA,mCAAmC,wBAAwB,EAAE,GAAG;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,wBAAwB,EAAE,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,2DAAmB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,2DAAmB,WAAW,mDAAmD;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,2DAAmB,WAAW,mDAAmD;AAC3H;AACA;AACA,+BAA+B,2DAAmB;AAClD;AACA;AACA;AACA,oBAAoB,2DAAmB,WAAW,wGAAwG;AAC1J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kEAAe;AACvC;AACA,yBAAyB;AACzB;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,oBAAoB,2DAAmB,UAAU,4DAA4D,kBAAkB,EAAE,GAAG;AACpI;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,oBAAoB,kEAAe;AACnC;AACA,qBAAqB;AACrB;AACA,mBAAmB;AACnB,gBAAgB,2DAAmB,UAAU,kEAAkE,wBAAwB,EAAE,GAAG;AAC5I;AACA,uBAAuB;AACvB,gBAAgB,2DAAmB,UAAU;AAC7C,wBAAwB,iEAAW;AACnC;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,qBAAqB;AACrB;AACA,uBAAuB;AACvB,oBAAoB,2DAAmB,UAAU,iDAAiD,YAAY,EAAE,GAAG,GAAG;AACtH,wBAAwB,2DAAmB,UAAU,kDAAkD;AACvG;AACA;AACA,wBAAwB,2DAAmB,UAAU,4DAA4D;AACjH,oCAAoC,2DAAmB,aAAa;AACpE;AACA,mCAAmC;AACnC,gCAAgC,2DAAmB,mBAAmB,uEAAuE;AAC7I,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gEAAU;AACpC;AACA,8BAA8B,2DAAmB;AACjD;AACA,gCAAgC,QAAQ;AACxC;AACA,kCAAkC,iEAAe,GAAG,kBAAkB;AACtE,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,4DAAa,GAAG;AAC1C;AACA;AACA;AACA,yBAAyB,kDAAI;AAC7B,0BAA0B,wDAAQ;AAClC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,YAAY,EAAE,GAAG;AACvE,qDAAqD,kBAAkB,EAAE,GAAG;AAC5E;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2DAAmB,CAAC,uEAAgB,IAAI,6FAA6F;AAC7J;AACA;AACA,wBAAwB,2DAAmB,CAAC,yEAAkB,IAAI,6FAA6F;AAC/J;AACA;AACA,wBAAwB,2DAAmB,CAAC,kEAAc,IAAI,6FAA6F;AAC3J;AACA;AACA,wBAAwB,2DAAmB,CAAC,wEAAiB,IAAI,6FAA6F;AAC9J;AACA;AACA,wBAAwB,2DAAmB,CAAC,mEAAe,IAAI,6FAA6F;AAC5J;AACA;AACA,wBAAwB,2DAAmB,CAAC,oEAAgB,IAAI,6FAA6F;AAC7J;AACA;AACA,wBAAwB,2DAAmB,CAAC,oEAAgB,IAAI,6FAA6F;AAC7J;AACA;AACA,wBAAwB,2DAAmB,CAAC,wEAAoB,IAAI,6FAA6F;AACjK;AACA;AACA,wBAAwB,2DAAmB,CAAC,mEAAe,IAAI,6FAA6F;AAC5J;AACA;AACA,wBAAwB,2DAAmB,CAAC,oEAAgB,IAAI,6FAA6F;AAC7J;AACA;AACA,wBAAwB,2DAAmB,CAAC,qEAAiB,IAAI,6FAA6F;AAC9J;AACA;AACA,wBAAwB,2DAAmB,CAAC,qEAAiB,IAAI,6FAA6F;AAC9J;AACA;AACA,wBAAwB,2DAAmB,CAAC,kEAAc,IAAI,6FAA6F;AAC3J;AACA;AACA,wBAAwB,2DAAmB,CAAC,wEAAoB,IAAI,6FAA6F;AACjK;AACA;AACA,wBAAwB,2DAAmB,CAAC,wEAAoB,IAAI,6FAA6F;AACjK;AACA;AACA,wBAAwB,2DAAmB,CAAC,0EAAsB,IAAI,6FAA6F;AACnK;AACA;AACA,wBAAwB,2DAAmB,CAAC,wEAAoB,IAAI,6FAA6F;AACjK;AACA;AACA,wBAAwB,2DAAmB,CAAC,oEAAgB,IAAI,6FAA6F;AAC7J;AACA;AACA,wBAAwB,2DAAmB,CAAC,oEAAgB,IAAI,6FAA6F;AAC7J;AACA;AACA,wBAAwB,2DAAmB,CAAC,gEAAY,IAAI,6FAA6F;AACzJ;AACA;AACA,wBAAwB,2DAAmB,CAAC,oEAAgB,IAAI,6FAA6F;AAC7J;AACA;AACA,wBAAwB,2DAAmB,CAAC,mEAAe,IAAI,6FAA6F;AAC5J;AACA;AACA,wBAAwB,2DAAmB,CAAC,mEAAe,IAAI,6FAA6F;AAC5J;AACA;AACA,wBAAwB,2DAAmB,CAAC,kEAAc,IAAI,6FAA6F;AAC3J;AACA;AACA,wBAAwB,2DAAmB,CAAC,iEAAa,IAAI,6FAA6F;AAC1J;AACA;AACA,wBAAwB,2DAAmB,CAAC,qEAAiB,IAAI,6FAA6F;AAC9J;AACA;AACA,wBAAwB,2DAAmB,CAAC,iEAAa,IAAI,6FAA6F;AAC1J;AACA;AACA,wBAAwB,2DAAmB,CAAC,wEAAoB,IAAI,6FAA6F;AACjK;AACA;AACA,wBAAwB,2DAAmB,CAAC,iEAAa,IAAI,6FAA6F;AAC1J;AACA;AACA,wBAAwB,2DAAmB,CAAC,oEAAgB,IAAI,6FAA6F;AAC7J;AACA;AACA,wBAAwB,2DAAmB,CAAC,kEAAc,IAAI,6FAA6F;AAC3J;AACA;AACA,wBAAwB,2DAAmB,CAAC,+DAAW,IAAI,6FAA6F;AACxJ;AACA;AACA,wBAAwB,2DAAmB,CAAC,oEAAgB,IAAI,6FAA6F;AAC7J;AACA;AACA,wBAAwB,2DAAmB,CAAC,oEAAgB,IAAI,6FAA6F;AAC7J;AACA;AACA,wBAAwB,2DAAmB,CAAC,qEAAiB,IAAI,6FAA6F;AAC9J;AACA;AACA,wBAAwB,2DAAmB,CAAC,mEAAe,IAAI,6FAA6F;AAC5J;AACA;AACA,wBAAwB,2DAAmB,CAAC,iEAAa,IAAI,6FAA6F;AAC1J;AACA;AACA,wBAAwB,2DAAmB,CAAC,iEAAa,IAAI,6FAA6F;AAC1J;AACA;AACA,wBAAwB,2DAAmB,CAAC,kEAAc,IAAI,6FAA6F;AAC3J;AACA;AACA,wBAAwB,2DAAmB,CAAC,oEAAgB,IAAI,6FAA6F;AAC7J;AACA;AACA,wBAAwB,2DAAmB,CAAC,yEAAkB,IAAI,6FAA6F;AAC/J;AACA;AACA,wBAAwB,2DAAmB,CAAC,wEAAoB,IAAI,6FAA6F;AACjK;AACA;AACA,wBAAwB,2DAAmB,CAAC,qEAAc,IAAI,6FAA6F;AAC3J;AACA;AACA;AACA;AACA;AACA,oBAAoB,2DAAmB,UAAU,iDAAiD;AAClG,gBAAgB,2DAAmB,QAAQ,mBAAmB,KAAK,wBAAwB;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gEAAU;AAClB;AACA;AACA;AACA,gBAAgB,qEAAmB;AACnC,gBAAgB,mEAAiB;AACjC;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA,oCAAoC,oBAAoB,GAAG,eAAe;AAC1E,+BAA+B,uDAAI;AACnC;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,QAAQ,qEAAmB;AAC3B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mDAAmD,gGAAsC;AACzF;AACA,gCAAgC,iBAAiB;AACjD;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,iEAAW;AAC3B;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wEAAsB;AAClC,YAAY,iEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB,uCAAuC;AACvD,gBAAgB,2DAAmB;AACnC,YAAY,2DAAmB,aAAa,uCAAuC;AACnF,gBAAgB,2DAAmB,WAAW,+BAA+B;AAC7E,gBAAgB,2DAAmB,aAAa;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,uBAAuB;AACvB,oBAAoB,2DAAmB,CAAC,oEAAa,IAAI,uCAAuC;AAChG,YAAY,2DAAmB,CAAC,iEAAW,IAAI,yJAAyJ;AACxM,YAAY,2DAAmB,UAAU,oCAAoC;AAC7E,gBAAgB,2DAAmB;AACnC;AACA;AACA,6BAA6B,mDAAM;AACnC;AACA,gBAAgB,8CAA8C;AAC9D;AACA;AACA,6BAA6B,mDAAM;AACnC;AACA,gBAAgB,mCAAmC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACn7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACoD;AACoB;AACrB;AACzB;AACgC;AACG;AACG;AACb;AACwB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,gCAAgC,6DAAW;AAClD;AACA;AACA;AACA,+BAA+B,yFAAwC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,oBAAoB,GAAG,oCAAoC,GAAG,+BAA+B;AAClJ,4DAA4D,oBAAoB,GAAG,oCAAoC,GAAG,+BAA+B;AACzJ,kDAAkD,oBAAoB,GAAG,oCAAoC,QAAQ,mCAAmC;AACxJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,oEAAgB;AAC3C;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,gDAAgD,mBAAmB;AACnE;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gEAAU;AACtB;AACA,uBAAuB,0DAAmB;AAC1C;AACA,wBAAwB,qCAAqC;AAC7D;AACA;AACA,oBAAoB,qEAAmB;AACvC,oBAAoB,mEAAiB,GAAG,kBAAkB;AAC1D,oBAAoB,iEAAe,GAAG,eAAe;AACrD;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,oBAAoB,GAAG,oCAAoC,GAAG,+BAA+B;AAC7J,uEAAuE,oBAAoB,GAAG,oCAAoC,GAAG,+BAA+B;AACpK,oEAAoE,oBAAoB,GAAG,oCAAoC,GAAG,+BAA+B;AACjK,yCAAyC,qEAAc;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,oBAAoB,GAAG,oCAAoC,QAAQ,mCAAmC;AACxJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,oBAAoB,GAAG,oCAAoC,GAAG,+BAA+B;AAC7I,uDAAuD,oBAAoB,GAAG,oCAAoC,GAAG,+BAA+B;AACpJ,oDAAoD,oBAAoB,GAAG,oCAAoC,GAAG,+BAA+B;AACjJ,yBAAyB,qEAAc;AACvC;AACA;AACA;AACA;AACA;AACA,gDAAgD,oBAAoB,GAAG,oCAAoC,GAAG,+BAA+B;AAC7I,uDAAuD,oBAAoB,GAAG,oCAAoC,GAAG,+BAA+B;AACpJ,oDAAoD,oBAAoB,GAAG,oCAAoC,GAAG,+BAA+B;AACjJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,wEAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,gEAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,wEAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gEAAgE,mBAAmB;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0DAAmB,cAAc,uFAAuF;AACxI,YAAY,0DAAmB,UAAU,oGAAoG;AAC7I;AACA;AACA,QAAQ,2EAAwB;AAChC,gBAAgB,0DAAmB;AACnC,YAAY,0DAAmB,YAAY,+LAA+L;AAC1O,YAAY,0DAAmB,eAAe,iBAAiB,EAAE,0EAAuB;AACxF;AACA;AACA,eAAe,0DAAmB,aAAa,4BAA4B;AAC3E;AACA;AACA;AACA,gBAAgB,0DAAmB,UAAU;AAC7C;AACA,eAAe;AACf,YAAY,0DAAmB,WAAW,sCAAsC;AAChF,YAAY,0DAAmB,cAAc,yCAAyC;AACtF,gBAAgB,0DAAmB,YAAY,sCAAsC;AACrF,gBAAgB,0DAAmB,YAAY;AAC/C;AACA,qBAAqB,6BAA6B;AAClD,gBAAgB,0DAAmB,YAAY,sCAAsC;AACrF,gBAAgB,0DAAmB,YAAY;AAC/C;AACA,qBAAqB,6BAA6B;AAClD,gBAAgB,0DAAmB,YAAY,sCAAsC;AACrF;AACA,gBAAgB,0DAAmB,YAAY,sCAAsC;AACrF,gBAAgB,0DAAmB,CAAC,yEAAqB,IAAI;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,2HAA2H;AAC3H,YAAY,0DAAmB,WAAW,sCAAsC;AAChF;AACA,YAAY,0DAAmB,CAAC,6DAAM,IAAI,gDAAgD;AAC1F;AACA;;;;;;;;;;;;;;;;;;;AC1YA;AACA;AAC+D;AACrC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACO,oCAAoC,wDAAe;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sHAAsH,UAAU,uBAAuB;AACvJ,SAAS;AACT;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA,gEAAgE,0DAAmB,SAAS,cAAc,yBAAyB,2CAA2C;AAC9K,YAAY,0DAAmB,YAAY,gKAAgK,OAAO,0DAAmB,SAAS,cAAc,yBAAyB,oBAAoB;AACzS,YAAY,0DAAmB,aAAa,+BAA+B,uBAAuB,GAAG;AACrG,YAAY,0DAAmB,CAAC,oEAAa,IAAI,wIAAwI;AACzL,gBAAgB,0DAAmB,SAAS,yCAAyC;AACrF;AACA;AACA;AACA,gCAAgC,0DAAmB,SAAS,cAAc,yBAAyB,+GAA+G;AAClN,4BAA4B,0DAAmB,aAAa,2BAA2B;AACvF;AACA;AACA,gCAAgC,0DAAmB,SAAS,cAAc,yBAAyB,6GAA6G;AAChN,4BAA4B,0DAAmB,aAAa,2BAA2B;AACvF,4BAA4B,0DAAmB,CAAC,sEAAe,IAAI,+GAA+G;AAClL;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,eAAe,0DAAmB;AAClC;AACA;;;;;;;;;;;;;;;;;;;AC5GA;AACA;AACkE;AACxC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,0BAA0B,wDAAe;AAChD;AACA;AACA;AACA,4BAA4B,iCAAiC;AAC7D;AACA,uBAAuB,kDAAkD;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uDAAuD,gBAAgB;AACvE,wDAAwD,cAAc;AACtE;AACA;AACA;AACA;AACA;AACA,gBAAgB,0DAAmB,UAAU,wBAAwB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB,0DAAmB,UAAU,cAAc,YAAY,mGAAmG;AAC1K,YAAY,0DAAmB,aAAa,2BAA2B;AACvE,YAAY,0DAAmB,CAAC,sEAAe,IAAI,wIAAwI;AAC3L;AACA;AACA,gBAAgB,0DAAmB,UAAU,cAAc,YAAY,qGAAqG;AAC5K,YAAY,0DAAmB,aAAa,2BAA2B;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0DAAmB,UAAU,cAAc,eAAe,OAAO;AACjF,YAAY,0DAAmB,UAAU,yBAAyB;AAClE,gBAAgB,0DAAmB;AACnC;AACA,YAAY,0DAAmB,UAAU,yBAAyB;AAClE,gBAAgB,0DAAmB;AACnC;AACA;AACA;AACA,gBAAgB,0DAAmB,UAAU,yBAAyB;AACtE,YAAY,0DAAmB,UAAU,6BAA6B;AACtE,gBAAgB,0DAAmB,CAAC,iEAAU,IAAI,8KAA8K;AAChO,YAAY,0DAAmB,UAAU,yBAAyB;AAClE,gBAAgB,0DAAmB,aAAa,yDAAyD;AACzG,gBAAgB,0DAAmB,UAAU,cAAc,iBAAiB,OAAO;AACnF;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5IA;AACA;AAC8C;AACiB;AACtB;AACiB;AACP;AACU;AACc;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,wDAAM;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,+BAA+B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,+BAA+B,yFAAwC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,kBAAkB,qEAAmB,IAAI,iEAAe,GAAG,eAAe;AAC1E,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,qEAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wEAAiB;AACrC;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI,gEAAW;AACf;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,mDAAM;AACjC;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,gBAAgB,gEAAgE;AAChF;AACA;AACA;AACA;AACA,gDAAgD,+BAA+B,sCAAsC,+BAA+B,sCAAsC,+BAA+B;AACzN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAwB;AAChC,wCAAwC,sEAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,wBAAwB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wBAAwB;AAC1D;AACA;AACA;AACA;AACA,yBAAyB,sEAAe;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,wBAAwB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wEAAiB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,sEAAe;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wEAAiB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzXA;AACA;AACoD;AACa;AACR;AACY;AACA;AACU;AAClB;AACM;AACA;AACF;AACI;AACF;AACR;AACQ;AACE;AACN;AACY;AACV;AACE;AACJ;AACY;AACd;AACM;AACA;AACF;AACF;AACF;AACc;AACR;AACQ;AACR;AACJ;AACA;AACF;AACA;AACI;AACE;AACQ;AACJ;AACI;AAC3E;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,sBAAsB,8DAAO;AACpC;AACA,YAAY,4EAAW;AACvB,CAAC;AACM,qBAAqB,8DAAO;AACnC;AACA,YAAY,2EAAU;AACtB,CAAC;AACM,sBAAsB,8DAAO;AACpC;AACA,YAAY,4EAAW;AACvB,CAAC;AACM,uBAAuB,8DAAO;AACrC;AACA,YAAY,6EAAY;AACxB,CAAC;AACM,uBAAuB,8DAAO;AACrC;AACA,YAAY,6EAAY;AACxB,CAAC;AACM,2BAA2B,8DAAO;AACzC;AACA,YAAY,iFAAgB;AAC5B,CAAC;AACM,sBAAsB,8DAAO;AACpC;AACA,YAAY,4EAAW;AACvB,CAAC;AACM,uBAAuB,8DAAO;AACrC;AACA,YAAY,6EAAY;AACxB,CAAC;AACM,wBAAwB,8DAAO;AACtC;AACA,YAAY,8EAAa;AACzB,CAAC;AACM,wBAAwB,8DAAO;AACtC;AACA,YAAY,+EAAa;AACzB,CAAC;AACM,qBAAqB,8DAAO;AACnC;AACA,YAAY,4EAAU;AACtB,CAAC;AACM,2BAA2B,8DAAO;AACzC;AACA,YAAY,kFAAgB;AAC5B,CAAC;AACM,2BAA2B,8DAAO;AACzC;AACA,YAAY,kFAAgB;AAC5B,CAAC;AACM,6BAA6B,8DAAO;AAC3C;AACA,YAAY,oFAAkB;AAC9B,CAAC;AACM,2BAA2B,8DAAO;AACzC;AACA,YAAY,kFAAgB;AAC5B,CAAC;AACM,uBAAuB,8DAAO;AACrC;AACA,YAAY,8EAAY;AACxB,CAAC;AACM,uBAAuB,8DAAO;AACrC;AACA,YAAY,8EAAY;AACxB,CAAC;AACM,mBAAmB,8DAAO;AACjC;AACA,YAAY,0EAAQ;AACpB,CAAC;AACM,uBAAuB,8DAAO;AACrC;AACA,YAAY,8EAAY;AACxB,CAAC;AACM,sBAAsB,8DAAO;AACpC;AACA,YAAY,6EAAW;AACvB,CAAC;AACM,sBAAsB,8DAAO;AACpC;AACA,YAAY,6EAAW;AACvB,CAAC;AACM,qBAAqB,8DAAO;AACnC;AACA,YAAY,4EAAU;AACtB,CAAC;AACM,oBAAoB,8DAAO;AAClC;AACA,YAAY,2EAAS;AACrB,CAAC;AACM,wBAAwB,8DAAO;AACtC;AACA,YAAY,+EAAa;AACzB,CAAC;AACM,oBAAoB,8DAAO;AAClC;AACA,YAAY,2EAAS;AACrB,CAAC;AACM,2BAA2B,8DAAO;AACzC;AACA,YAAY,kFAAgB;AAC5B,CAAC;AACM,oBAAoB,8DAAO;AAClC;AACA,YAAY,2EAAS;AACrB,CAAC;AACM,uBAAuB,8DAAO;AACrC;AACA,YAAY,8EAAY;AACxB,CAAC;AACM,qBAAqB,8DAAO;AACnC;AACA,YAAY,4EAAU;AACtB,CAAC;AACM,kBAAkB,8DAAO;AAChC;AACA,YAAY,yEAAO;AACnB,CAAC;AACM,uBAAuB,8DAAO;AACrC;AACA,YAAY,8EAAY;AACxB,CAAC;AACM,uBAAuB,8DAAO;AACrC;AACA,YAAY,8EAAY;AACxB,CAAC;AACM,oBAAoB,8DAAO;AAClC;AACA,YAAY,2EAAS;AACrB,CAAC;AACM,wBAAwB,8DAAO;AACtC;AACA,YAAY,+EAAa;AACzB,CAAC;AACM,oBAAoB,8DAAO;AAClC;AACA,YAAY,2EAAS;AACrB,CAAC;AACM,qBAAqB,8DAAO;AACnC;AACA,YAAY,4EAAU;AACtB,CAAC;AACM,uBAAuB,8DAAO;AACrC;AACA,YAAY,8EAAY;AACxB,CAAC;AACM,yBAAyB,8DAAO;AACvC;AACA,YAAY,gFAAc;AAC1B,CAAC;AACM,2BAA2B,8DAAO;AACzC;AACA,YAAY,kFAAgB;AAC5B,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;AC9QD;AACA;AACkE;AACL;AACb;AACI;AACP;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,qCAAqC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACO,6BAA6B,mDAAM;AAC1C,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,0CAA0C,wDAAW;AACrD,4BAA4B,kDAAK;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,8DAAe;AAC5D;AACA;AACA;AACA,YAAY,0DAAa;AACzB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,qEAAsB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qEAAsB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,mDAAM,GAAG,sCAAsC;AAC1E;AACA;AACA,sCAAsC,mDAAM;AAC5C;AACA;AACA;AACA,uBAAuB,oEAAkB;AACzC;AACA;AACA,gBAAgB,sEAAuB,OAAO,qEAAwB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,+DAAa;AAC9C;AACA,KAAK;AACL,CAAC,wCAAwC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0BAA0B;;;;;;;;;;;;;;;;;;;;;AC5M3B;AACA;AACA,YAAY,6BAA6B;AACK;AACL;AACqB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACO,iCAAiC,wDAAM;AAC9C,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mDAAM;AACnC;AACA,gBAAgB,uCAAuC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,yEAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0BAA0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrG3B;AACA;AACkE;AACd;AACS;AACb;AACI;AACP;AACa;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,iCAAiC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,sBAAsB,mDAAM;AACnC,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,yFAAwC;AAC1E;AACA,0CAA0C,wDAAW;AACrD,4BAA4B,kDAAK;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,8DAAe;AAC5D;AACA;AACA;AACA,YAAY,0DAAa;AACzB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,qEAAsB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qEAAsB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,2CAA2C;AACrE,2BAA2B,oEAAgB;AAC3C;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,mDAAM,GAAG,sCAAsC;AAC1E;AACA;AACA,sCAAsC,mDAAM;AAC5C;AACA;AACA;AACA,uBAAuB,oEAAkB;AACzC;AACA;AACA,gBAAgB,sEAAuB,OAAO,qEAAwB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,+DAAa;AACvC;AACA,KAAK;AACL,CAAC,0BAA0B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0BAA0B;;;;;;;;;;;;;;;;;;AC3MiB;AACY;AACjD;AACP;AACA;AACA;AACA;AACA;AACA,iBAAiB,gEAAiB;AAClC;AACA;AACA;AACA;AACA,2CAA2C,iEAAiB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;;;;;ACnL0D;AACG;AAC7D;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,+EAA4B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B,kBAAkB,qEAAmB,IAAI,mEAAiB,GAAG,oBAAoB;AACjF;AACA,WAAW,gEAAU;AACrB;AACA,KAAK;AACL;;;;;;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC8D;AACnB;AACe;AACA;AACQ;AACxC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,oBAAoB;AACrD;AACA;AACA;AACA;AACO,gCAAgC,6DAAW;AAClD;AACA;AACA;AACA;AACA;AACA,4CAA4C,qDAAM;AAClD,kCAAkC,yFAAwmEAAkB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,+EAAsB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,0DAAmB,CAAC,2DAAS,IAAI,wDAAwD,wBAAwB,0DAAmB;AACpJ,YAAY,0DAAmB,CAAC,mEAAkB,IAAI,gRAAgR;AACtU;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC2D;AACW;AACP;AACN;AACL;AACX;AACkC;AACD;AACR;AACV;AACC;AACC;AACL;AACI;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8DAAO;AAC9B;AACA,YAAY,iFAAgB;AAC5B,CAAC;AACD;AACA;AACA;AACA,4BAA4B,8DAAO;AACnC;AACA,YAAY,2EAAqB;AACjC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iEAAe,EAAE,oEAAe,EAAE,mEAAe;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kEAAiB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA;AACA;AACA,kDAAkD,QAAQ;AAC1D;AACA,2BAA2B,uDAAI;AAC/B;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,sCAAsC,kEAAiB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,+DAAa;AAChE;AACA;AACA;AACA,wDAAwD,mEAAc;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iBAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA,gBAAgB,gFAAsB;AACtC;AACA;AACA,gBAAgB,gFAAsB;AACtC;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,wBAAwB,+DAAa;AACrC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,yEAAgB;AAC/B;AACA;AACA;AACA;AACA,YAAY,yEAAuB;AACnC;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,qDAAqD,EAAC;;;;;;;;;;;;;;;AC3PrE,iEAAe,oSAAoS;;;;;;;;;;;;;;ACAnT,iEAAe,saAAsa;;;;;;;;;;;;;;ACArb,iEAAe,wcAAwc;;;;;;;;;;;;;;ACAvd,iEAAe,sVAAsV;;;;;;;;;;;;;;ACArW,iEAAe,syCAAsyC;;;;;;;;;;;;;;ACArzC,iEAAe,kgBAAkgB;;;;;;;;;;;;;;ACAjhB,iEAAe,wiEAAwiE;;;;;;;;;;;;;;ACAvjE,iEAAe,ygDAAygD,iCAAiC;;;;;;;;;;;;;;ACAzjD,iEAAe,0OAA0O;;;;;;;;;;;;;;ACAzP,iEAAe,mkBAAmkB;;;;;;;;;;;;;;ACAllB,iEAAe,8qBAA8qB;;;;;;;;;;;;;;ACA7rB,iEAAe,yvBAAyvB;;;;;;;;;;;;;;ACAxwB,iEAAe,4sCAA4sC;;;;;;;;;;;;;;ACA3tC,iEAAe,68BAA68B,oCAAoC;;;;;;;;;;;;;;ACAhgC,iEAAe,odAAod;;;;;;;;;;;;;;ACAne,iEAAe,4IAA4I,cAAc,SAAS,cAAc,SAAS,cAAc,SAAS,cAAc,SAAS,cAAc,SAAS,cAAc,i+DAAi+D;;;;;;;;;;;;;;ACA7vE,iEAAe,w3DAAw3D;;;;;;;;;;;;;;ACAv4D,iEAAe,4jBAA4jB;;;;;;;;;;;;;;ACA3kB,iEAAe,0OAA0O;;;;;;;;;;;;;;ACAzP,iEAAe,8lBAA8lB;;;;;;;;;;;;;;ACA7mB,iEAAe,wYAAwY;;;;;;;;;;;;;;ACAvZ,iEAAe,iiCAAiiC;;;;;;;;;;;;;;ACAhjC,iEAAe,o0GAAo0G;;;;;;;;;;;;;;ACAn1G,iEAAe,s3CAAs3C;;;;;;;;;;;;;;ACAr4C,iEAAe,+qBAA+qB;;;;;;;;;;;;;;ACA9rB,iEAAe,4LAA4L;;;;;;;;;;;;;;ACA3M,iEAAe,shCAAshC;;;;;;;;;;;;;;ACAriC,iEAAe,0oCAA0oC;;;;;;;;;;;;;;ACAzpC,iEAAe,ksFAAksF;;;;;;;;;;;;;;ACAjtF,iEAAe,8kBAA8kB;;;;;;;;;;;;;;ACA7lB,iEAAe,g9CAAg9C;;;;;;;;;;;;;;ACA/9C,iEAAe,slBAAslB,8BAA8B;;;;;;;;;;;;;;ACAnoB,iEAAe,4IAA4I,aAAa,cAAc,SAAS,cAAc,SAAS,cAAc,oxBAAoxB;;;;;;;;;;;;;;ACAx/B,iEAAe,iwCAAiwC,gCAAgC;;;;;;;;;;;;;;ACAhzC,iEAAe,4rCAA4rC;;;;;;;;;;;;;;ACA3sC,iEAAe,q3BAAq3B,iTAAiT;;;;;;;;;;;;;;ACArrC,iEAAe,qmBAAqmB,gCAAgC;;;;;;;;;;;;;;ACAppB,iEAAe,iyIAAiyI;;;;;;;;;;;;;;ACAhzI,iEAAe,qsDAAqsD,eAAe,kBAAkB,k0IAAk0I,eAAe,kBAAkB,2DAA2D;;;;;;;;;;;;;;ACAnpM,iEAAe,q0BAAq0B;;;;;;;;;;;;;;ACAp1B,iEAAe,q8BAAq8B;;;;;;;;;;;;;;ACAp9B,iEAAe,+TAA+T,gCAAgC;;;;;;;;;;;;;;ACA9W,iEAAe,4mEAA4mE","sources":["webpack://jupyterlab-code-snippets/./lib/CodeSnippetContentsService.js","webpack://jupyterlab-code-snippets/./lib/CodeSnippetDisplay.js","webpack://jupyterlab-code-snippets/./lib/CodeSnippetEditor.js","webpack://jupyterlab-code-snippets/./lib/CodeSnippetEditorTags.js","webpack://jupyterlab-code-snippets/./lib/CodeSnippetFilterTools.js","webpack://jupyterlab-code-snippets/./lib/CodeSnippetInputDialog.js","webpack://jupyterlab-code-snippets/./lib/CodeSnippetLanguages.js","webpack://jupyterlab-code-snippets/./lib/CodeSnippetMenu.js","webpack://jupyterlab-code-snippets/./lib/CodeSnippetMessage.js","webpack://jupyterlab-code-snippets/./lib/CodeSnippetPreview.js","webpack://jupyterlab-code-snippets/./lib/CodeSnippetService.js","webpack://jupyterlab-code-snippets/./lib/CodeSnippetUtilities.js","webpack://jupyterlab-code-snippets/./lib/CodeSnippetWidget.js","webpack://jupyterlab-code-snippets/./lib/index.js","webpack://jupyterlab-code-snippets/./style/icon/jupyter_checkmark.svg","webpack://jupyterlab-code-snippets/./style/icon/jupyter_moreicon.svg","webpack://jupyterlab-code-snippets/./style/icon/jupyter_snippeteditoricon.svg","webpack://jupyterlab-code-snippets/./style/icon/jupyter_snippeticon.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/babel.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/c.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/clojure.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/coconut.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/coffeescript.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/cpp.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/csharp.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/erlang.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/forth.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/fortran.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/fsharp.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/go.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/groovy.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/haskell.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/java.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/javascript.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/julia.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/kotlin.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/lisp.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/livescript.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/lua.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/markdown.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/matlab.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/nodejs.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/ocaml.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/perl.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/php.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/powershell.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/processing.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/prolog.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/purescript.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/qsharp.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/ruby.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/rust.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/sas.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/sbt.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/scala.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/scheme.svg","webpack://jupyterlab-code-snippets/./style/icon/language_icons/typescript.svg"],"sourcesContent":["// Copyright (c) 2020, jupytercalpoly\n// Distributed under the terms of the BSD-3 Clause License.\nimport { ContentsManager, Drive } from '@jupyterlab/services';\n/**\n * Singleton contentsService class\n */\nexport class CodeSnippetContentsService {\n    constructor() {\n        const drive = new Drive({ name: 'snippetDrive ' });\n        const contentsManager = new ContentsManager({ defaultDrive: drive });\n        this.drive = drive;\n        this.contentsManager = contentsManager;\n    }\n    static getInstance() {\n        if (!this.instance) {\n            this.instance = new CodeSnippetContentsService();\n        }\n        return this.instance;\n    }\n    /**\n     * Create a file/directory if it does not exist. Otherwise, save the change in a file/directory in the given path\n     * @param path path to a file/directory\n     * @param options options that specify if it's a file or directory and additial information\n     * Usage: save('snippets', { type: 'directory' }) to create/save a directory\n     *        save('snippets/test.json', {type: 'file', format: 'text', content: 'Lorem ipsum dolor sit amet'})\n     */\n    async save(path, options) {\n        try {\n            const changedModel = await this.contentsManager.save(path, options);\n            return changedModel;\n        }\n        catch (error) {\n            return error;\n        }\n    }\n}\n","// Copyright (c) 2020, jupytercalpoly\n// Distributed under the terms of the BSD-3 Clause License.\n// Some lines of code are from Elyra Code Snippet.\n/*\n * Copyright 2018-2020 IBM Corporation\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions a* limitations under the License.\n */\nimport { Clipboard, Dialog, InputDialog, showDialog, } from '@jupyterlab/apputils';\nimport { PathExt } from '@jupyterlab/coreutils';\nimport { DocumentWidget } from '@jupyterlab/docregistry';\nimport { FileEditor } from '@jupyterlab/fileeditor';\nimport { NotebookPanel } from '@jupyterlab/notebook';\nimport { LabIcon, addIcon, pythonIcon, fileIcon, rKernelIcon, markdownIcon, } from '@jupyterlab/ui-components';\nimport { CodeCellModel, MarkdownCell, CodeCell } from '@jupyterlab/cells';\nimport { Widget } from '@lumino/widgets';\nimport { find, StringExt } from '@lumino/algorithm';\nimport { Drag } from '@lumino/dragdrop';\nimport { MimeData } from '@lumino/coreutils';\nimport React from 'react';\nimport { FilterTools } from './CodeSnippetFilterTools';\nimport { showPreview } from './CodeSnippetPreview';\nimport { showMoreOptions } from './CodeSnippetMenu';\nimport { CodeSnippetContentsService } from './CodeSnippetContentsService';\nimport moreSVGstr from '../style/icon/jupyter_moreicon.svg';\nimport { babelIcon, javaIcon, juliaIcon, matlabIcon, schemeIcon, processingIcon, scalaIcon, groovyIcon, forthIcon, haskellIcon, rubyIcon, typescriptIcon, javascriptIcon, coffeescriptIcon, livescriptIcon, csharpIcon, fsharpIcon, goIcon, erlangIcon, ocamlIcon, fortranIcon, perlIcon, phpIcon, clojureIcon, luaIcon, purescriptIcon, cppIcon, prologIcon, lispIcon, cIcon, kotlinIcon, nodejsIcon, coconutIcon, sbtIcon, rustIcon, qsharpIcon, sasIcon, powershellIcon, } from './CodeSnippetLanguages';\nimport { showMessage } from './CodeSnippetMessage';\n/**\n * The CSS class added to code snippet widget.\n */\nconst CODE_SNIPPETS_HEADER_CLASS = 'jp-codeSnippetsHeader';\nconst CODE_SNIPPET_TITLE = 'jp-codeSnippet-title';\nconst CODE_SNIPPETS_CONTAINER = 'jp-codeSnippetsContainer';\nconst DISPLAY_NAME_CLASS = 'jp-codeSnippetsContainer-name';\nconst BUTTON_CLASS = 'jp-codeSnippetsContainer-button';\nconst TITLE_CLASS = 'jp-codeSnippetsContainer-title';\nconst ACTION_BUTTONS_WRAPPER_CLASS = 'jp-codeSnippetsContainer-action-buttons';\nconst ACTION_BUTTON_CLASS = 'jp-codeSnippetsContainer-actionButton';\nconst SEARCH_BOLD = 'jp-codeSnippet-search-bolding';\nconst SNIPPET_DRAG_IMAGE = 'jp-codeSnippet-drag-image';\nconst CODE_SNIPPET_DRAG_HOVER = 'jp-codeSnippet-drag-hover';\nconst CODE_SNIPPET_DRAG_HOVER_SELECTED = 'jp-codeSnippet-drag-hover-selected';\nconst CODE_SNIPPET_METADATA = 'jp-codeSnippet-metadata';\nconst CODE_SNIPPET_DESC = 'jp-codeSnippet-description';\nconst CODE_SNIPPET_EDITOR = 'jp-codeSnippet-editor';\nconst CODE_SNIPPET_MORE_OPTIONS = 'jp-codeSnippet-options';\nconst CODE_SNIPPET_MORE_OTPIONS_CONTENT = 'jp-codeSnippet-more-options-content';\nconst CODE_SNIPPET_MORE_OTPIONS_COPY = 'jp-codeSnippet-more-options-copy';\nconst CODE_SNIPPET_MORE_OTPIONS_INSERT = 'jp-codeSnippet-more-options-insert';\nconst CODE_SNIPPET_MORE_OTPIONS_EDIT = 'jp-codeSnippet-more-options-edit';\nconst CODE_SNIPPET_MORE_OTPIONS_DELETE = 'jp-codeSnippet-more-options-delete';\nconst CODE_SNIPPET_MORE_OTPIONS_EXPORT = 'jp-codeSnippet-more-options-export';\nconst CODE_SNIPPET_CREATE_NEW_BTN = 'jp-createSnippetBtn';\nconst CODE_SNIPPET_NAME = 'jp-codeSnippet-name';\nconst OPTIONS_BODY = 'jp-codeSnippet-options-body';\n/**\n * The threshold in pixels to start a drag event.\n */\nconst DRAG_THRESHOLD = 3;\n/**\n * A class used to indicate a snippet item.\n */\nconst CODE_SNIPPET_ITEM = 'jp-codeSnippet-item';\n/**\n * The mimetype used for Jupyter cell data.\n */\nconst JUPYTER_CELL_MIME = 'application/vnd.jupyter.cells';\n/**\n * Icon for more options\n */\nconst moreOptionsIcon = new LabIcon({\n    name: 'custom-ui-components:moreOptions',\n    svgstr: moreSVGstr,\n});\n/**\n * A React Component for code-snippets display list.\n */\nexport class CodeSnippetDisplay extends React.Component {\n    constructor(props) {\n        super(props);\n        this.filterSnippets = (codeSnippets, searchValue, filterTags, selectedLangTags) => {\n            // filter with search\n            let filteredSnippets = codeSnippets.slice();\n            const matchedIndices = {};\n            if (searchValue !== '') {\n                const matchResults = [];\n                const filteredSnippetsScore = [];\n                // language, title, code\n                filteredSnippets.forEach((snippet) => {\n                    const matchResult = StringExt.matchSumOfSquares((snippet.language + snippet.name + snippet.code).toLowerCase(), searchValue.replace(' ', '').toLowerCase());\n                    if (matchResult) {\n                        matchResults.push(matchResult);\n                        filteredSnippetsScore.push({\n                            score: matchResult.score,\n                            snippet: snippet,\n                        });\n                    }\n                });\n                // sort snippets by its score\n                filteredSnippetsScore.sort((a, b) => a.score - b.score);\n                const newFilteredSnippets = [];\n                filteredSnippetsScore.forEach((snippetScore) => newFilteredSnippets.push(snippetScore.snippet));\n                filteredSnippets = newFilteredSnippets;\n                // sort the matchResults by its score\n                matchResults.sort((a, b) => a.score - b.score);\n                matchResults.forEach((res, id) => {\n                    matchedIndices[filteredSnippets[id].id] = res.indices;\n                });\n            }\n            // filter with tags\n            if (filterTags.length !== 0) {\n                filteredSnippets = filteredSnippets.filter((codeSnippet) => {\n                    return filterTags.some((filterTag) => {\n                        if (codeSnippet.tags) {\n                            if (selectedLangTags.length !== 0) {\n                                // lang tags selected\n                                if (codeSnippet.tags.includes(filterTag) &&\n                                    selectedLangTags.includes(codeSnippet.language)) {\n                                    return true;\n                                }\n                                //if only language tags are selected\n                                else if (filterTags.length === selectedLangTags.length &&\n                                    filterTags.every((value) => selectedLangTags.includes(value))) {\n                                    if (selectedLangTags.includes(codeSnippet.language)) {\n                                        return true;\n                                    }\n                                }\n                            }\n                            else {\n                                // no lang tags selected\n                                if (codeSnippet.tags.includes(filterTag)) {\n                                    return true;\n                                }\n                            }\n                        }\n                        return false;\n                    });\n                });\n            }\n            // find id's that are not in filteredSnippets\n            const willBeRemovedIds = [];\n            for (const key in matchedIndices) {\n                let hasKey = false;\n                for (const codeSnippet of filteredSnippets) {\n                    if (codeSnippet.id === parseInt(key)) {\n                        hasKey = true;\n                    }\n                }\n                if (hasKey === false) {\n                    willBeRemovedIds.push(parseInt(key));\n                }\n            }\n            // if the snippet does not have the tag, remove its mathed index\n            willBeRemovedIds.forEach((id) => delete matchedIndices[id]);\n            return {\n                filteredCodeSnippets: filteredSnippets,\n                matchedIndices: matchedIndices,\n            };\n        };\n        // Handle code snippet insert into a notebook or document\n        this.insertCodeSnippet = async (snippet) => {\n            var _a, _b;\n            const widget = this.props.getCurrentWidget();\n            if (widget instanceof DocumentWidget &&\n                widget.content instanceof FileEditor) {\n                const documentWidget = widget;\n                // code editor\n                const fileEditor = documentWidget.content.editor;\n                const markdownRegex = /^\\.(md|mkdn?|mdown|markdown)$/;\n                if (PathExt.extname(documentWidget.context.path).match(markdownRegex) !==\n                    null) {\n                    // Wrap snippet into a code block when inserting it into a markdown file\n                    fileEditor.replaceSelection('```' + snippet.language + '\\n' + snippet.code + '\\n```');\n                }\n                else if (documentWidget.constructor.name === 'PythonFileEditor') {\n                    this.verifyLanguageAndInsert(snippet, 'python', fileEditor);\n                }\n                else {\n                    fileEditor.replaceSelection(snippet.code);\n                }\n            }\n            else if (widget instanceof NotebookPanel) {\n                const notebookWidget = widget;\n                const notebookCell = notebookWidget.content.activeCell;\n                // editor\n                const notebookCellEditor = notebookCell.editor;\n                if (notebookCell instanceof CodeCell) {\n                    const kernelInfo = await ((_b = (_a = notebookWidget.sessionContext.session) === null || _a === void 0 ? void 0 : _a.kernel) === null || _b === void 0 ? void 0 : _b.info);\n                    const kernelLanguage = (kernelInfo === null || kernelInfo === void 0 ? void 0 : kernelInfo.language_info.name) || '';\n                    this.verifyLanguageAndInsert(snippet, kernelLanguage, notebookCellEditor);\n                }\n                else if (notebookCell instanceof MarkdownCell) {\n                    // Wrap snippet into a code block when inserting it into a markdown cell\n                    notebookCellEditor.replaceSelection('```' + snippet.language + '\\n' + snippet.code + '\\n```');\n                }\n                else {\n                    notebookCellEditor.replaceSelection(snippet.code);\n                }\n            }\n            else {\n                this.showErrDialog('Code snippet insert failed: Unsupported widget');\n            }\n        };\n        // Handle language compatibility between code snippet and editor\n        this.verifyLanguageAndInsert = async (snippet, editorLanguage, editor) => {\n            if (editorLanguage &&\n                snippet.language.toLowerCase() !== editorLanguage.toLowerCase()) {\n                const result = await this.showWarnDialog(editorLanguage, snippet.name);\n                if (result.button.accept) {\n                    editor.replaceSelection(snippet.code);\n                }\n            }\n            else {\n                // Language match or editorLanguage is unavailable\n                editor.replaceSelection(snippet.code);\n            }\n        };\n        // Display warning dialog when inserting a code snippet incompatible with editor's language\n        this.showWarnDialog = async (editorLanguage, snippetName) => {\n            return showDialog({\n                title: 'Warning',\n                body: 'Code snippet \"' +\n                    snippetName +\n                    '\" is incompatible with ' +\n                    editorLanguage +\n                    '. Continue?',\n                buttons: [Dialog.cancelButton(), Dialog.okButton()],\n            });\n        };\n        // Display error dialog when inserting a code snippet into unsupported widget (i.e. not an editor)\n        this.showErrDialog = (errMsg) => {\n            return showDialog({\n                title: 'Error',\n                body: errMsg,\n                buttons: [Dialog.okButton()],\n            });\n        };\n        // Create 6 dots drag/drop image on hover\n        this.dragHoverStyle = (id) => {\n            document\n                .querySelector(`#${CODE_SNIPPET_DRAG_HOVER}${id}`)\n                .classList // .getElementsByClassName(CODE_SNIPPET_DRAG_HOVER)\n                // [id].classList.\n                .add(CODE_SNIPPET_DRAG_HOVER_SELECTED);\n        };\n        // Remove 6 dots off hover\n        this.dragHoverStyleRemove = (id) => {\n            if (document.getElementsByClassName(CODE_SNIPPET_DRAG_HOVER_SELECTED)) {\n                document\n                    .querySelector(`#${CODE_SNIPPET_DRAG_HOVER}${id}`)\n                    .classList.remove(CODE_SNIPPET_DRAG_HOVER_SELECTED);\n            }\n        };\n        // Bold text in snippet name based on search\n        this.boldNameOnSearch = (id, language, name, matchedIndices) => {\n            const displayName = language + name;\n            // check if the searchValue is not ''\n            if (this.state.searchValue !== '') {\n                const elements = [];\n                if (matchedIndices) {\n                    // get first match index in the name\n                    let i = 0;\n                    while (i < matchedIndices.length) {\n                        if (matchedIndices[i] >= language.length) {\n                            elements.push(displayName.substring(language.length, matchedIndices[i]));\n                            break;\n                        }\n                        i++;\n                    }\n                    // when there is no match in name but language\n                    if (i >= matchedIndices.length) {\n                        return React.createElement(\"span\", null, name);\n                    }\n                    else {\n                        // current and next indices are bold indices\n                        let currIndex = matchedIndices[i];\n                        let nextIndex;\n                        // check if the match is the end of the name\n                        if (i < matchedIndices.length - 1) {\n                            i++;\n                            nextIndex = matchedIndices[i];\n                        }\n                        else {\n                            nextIndex = null;\n                        }\n                        while (nextIndex !== null) {\n                            // make the current index bold\n                            elements.push(React.createElement(\"mark\", { key: id + '_' + currIndex, className: SEARCH_BOLD }, displayName.substring(currIndex, currIndex + 1)));\n                            // add the regular string until we reach the next bold index\n                            elements.push(displayName.substring(currIndex + 1, nextIndex));\n                            currIndex = nextIndex;\n                            if (i < matchedIndices.length - 1) {\n                                i++;\n                                nextIndex = matchedIndices[i];\n                            }\n                            else {\n                                nextIndex = null;\n                            }\n                        }\n                        if (nextIndex === null) {\n                            elements.push(React.createElement(\"mark\", { key: id + '_' + currIndex, className: SEARCH_BOLD }, displayName.substring(currIndex, currIndex + 1)));\n                            elements.push(displayName.substring(currIndex + 1, displayName.length));\n                        }\n                        return React.createElement(\"span\", null, elements);\n                    }\n                }\n            }\n            return (React.createElement(\"span\", { title: 'Double click to rename', className: CODE_SNIPPET_NAME, onDoubleClick: this.handleRenameSnippet }, name));\n        };\n        // Render display of code snippet list\n        this.renderCodeSnippet = (codeSnippet, matchedIndices) => {\n            const id = codeSnippet.id;\n            const buttonClasses = BUTTON_CLASS;\n            const displayName = '[' + codeSnippet.language + '] ' + codeSnippet.name;\n            const name = codeSnippet.name;\n            const language = codeSnippet.language;\n            const actionButtons = [\n                {\n                    title: 'Insert, copy, edit, and delete',\n                    icon: moreOptionsIcon,\n                    onClick: (event) => {\n                        showMoreOptions({\n                            body: new OptionsHandler(this, codeSnippet),\n                        });\n                        this._setOptionsPosition(event);\n                    },\n                },\n            ];\n            return (React.createElement(\"div\", { key: codeSnippet.name, className: CODE_SNIPPET_ITEM, id: `${CODE_SNIPPET_ITEM}${id}`, title: 'Right click for more options', onMouseOver: () => {\n                    this.dragHoverStyle(id);\n                }, onMouseOut: () => {\n                    this.dragHoverStyleRemove(id);\n                }, onContextMenu: (event) => {\n                    event.preventDefault();\n                    showMoreOptions({\n                        body: new OptionsHandler(this, codeSnippet),\n                    });\n                    this._setOptionsPosition(event);\n                } },\n                React.createElement(\"div\", { className: CODE_SNIPPET_DRAG_HOVER, title: \"Drag to move\", id: `${CODE_SNIPPET_DRAG_HOVER}${id}`, onMouseDown: (event) => {\n                        this.handleDragSnippet(event);\n                    } }),\n                React.createElement(\"div\", { className: CODE_SNIPPET_METADATA, onMouseEnter: () => {\n                        showPreview({\n                            id: id,\n                            title: displayName,\n                            body: new PreviewHandler(),\n                            codeSnippet: codeSnippet,\n                        }, this.props.editorServices);\n                        this._setPreviewPosition(id);\n                    }, onMouseLeave: () => {\n                        this._evtMouseLeave();\n                    } },\n                    React.createElement(\"div\", { key: displayName, className: TITLE_CLASS, id: `${TITLE_CLASS}${id}` },\n                        React.createElement(\"div\", { id: id.toString(), className: DISPLAY_NAME_CLASS },\n                            this.renderLanguageIcon(language),\n                            this.boldNameOnSearch(id, language, name, matchedIndices)),\n                        React.createElement(\"div\", { className: ACTION_BUTTONS_WRAPPER_CLASS, id: id.toString() }, actionButtons.map((btn) => {\n                            return (React.createElement(\"button\", { key: btn.title, title: btn.title, className: buttonClasses + ' ' + ACTION_BUTTON_CLASS, onClick: (event) => {\n                                    btn.onClick(event);\n                                } },\n                                React.createElement(btn.icon.react, { tag: \"span\", elementPosition: \"center\", width: \"16px\", height: \"16px\" })));\n                        }))),\n                    this.renderDescription(codeSnippet, id))));\n        };\n        this.handleFilter = (searchValue, filterTags, selectedLangTags) => {\n            this.setState({\n                searchValue: searchValue,\n                filterTags: filterTags,\n                selectedLangTags: selectedLangTags,\n            });\n        };\n        this.getActiveTagsDictionary = () => {\n            const tagsAndLangs = new Map();\n            for (const codeSnippet of this.props.codeSnippets) {\n                if (codeSnippet.tags) {\n                    // check if tag is in dict, if it is add lang to value (if not already present)\n                    // if tag not in dict add tag as key and lang as first val\n                    for (const tag of codeSnippet.tags) {\n                        if (tag !== codeSnippet.language) {\n                            if (tagsAndLangs.has(tag)) {\n                                const langs = tagsAndLangs.get(tag);\n                                if (!langs.includes(codeSnippet.language)) {\n                                    langs.push(codeSnippet.language);\n                                }\n                                tagsAndLangs.set(tag, langs);\n                            }\n                            else {\n                                tagsAndLangs.set(tag, [codeSnippet.language]);\n                            }\n                        }\n                    }\n                }\n            }\n            return tagsAndLangs;\n        };\n        this.state = {\n            searchValue: '',\n            filterTags: [],\n            selectedLangTags: [],\n            searchOptions: [],\n        };\n        this._drag = null;\n        this._dragData = null;\n        this.handleDragMove = this.handleDragMove.bind(this);\n        this._evtMouseUp = this._evtMouseUp.bind(this);\n        this.handleRenameSnippet = this.handleRenameSnippet.bind(this);\n        this.setSearchOptions = this.setSearchOptions.bind(this);\n    }\n    // rename snippet on double click\n    async handleRenameSnippet(event) {\n        const target = event.target;\n        const oldName = target.innerHTML;\n        const new_element = document.createElement('input');\n        new_element.setAttribute('type', 'text');\n        new_element.id = 'jp-codeSnippet-rename';\n        new_element.innerHTML = target.innerHTML;\n        target.replaceWith(new_element);\n        new_element.value = target.innerHTML;\n        new_element.focus();\n        new_element.setSelectionRange(0, new_element.value.length);\n        new_element.onblur = async () => {\n            if (target.innerHTML !== new_element.value) {\n                const newName = new_element.value;\n                const isDuplicateName = this.props.codeSnippetManager.duplicateNameExists(newName);\n                if (isDuplicateName) {\n                    await showDialog({\n                        title: 'Duplicate Name of Code Snippet',\n                        body: React.createElement(\"p\", null,\n                            \" \",\n                            `\"${newName}\" already exists.`,\n                            \" \"),\n                        buttons: [Dialog.okButton({ label: 'Dismiss' })],\n                    });\n                }\n                else {\n                    this.props.codeSnippetManager\n                        .renameSnippet(oldName, newName)\n                        .then(async (res) => {\n                        if (res) {\n                            target.innerHTML = new_element.value;\n                        }\n                        else {\n                            console.log('Error in renaming snippet!');\n                        }\n                    });\n                }\n            }\n            new_element.replaceWith(target);\n        };\n        new_element.onkeydown = (event) => {\n            switch (event.code) {\n                case 'Enter': // Enter\n                    event.stopPropagation();\n                    event.preventDefault();\n                    new_element.blur();\n                    break;\n                case 'NumpadEnter': // Enter\n                    event.stopPropagation();\n                    event.preventDefault();\n                    new_element.blur();\n                    break;\n                case 'Escape': // Escape\n                    event.stopPropagation();\n                    event.preventDefault();\n                    new_element.blur();\n                    break;\n                case 'ArrowUp': // Up arrow\n                    event.stopPropagation();\n                    event.preventDefault();\n                    new_element.selectionStart = new_element.selectionEnd = 0;\n                    break;\n                case 'ArrowDown': // Down arrow\n                    event.stopPropagation();\n                    event.preventDefault();\n                    new_element.selectionStart = new_element.selectionEnd =\n                        new_element.value.length;\n                    break;\n                default:\n                    break;\n            }\n        };\n    }\n    handleDragSnippet(event) {\n        const { button } = event;\n        // if button is not the left click\n        if (!(button === 0)) {\n            return;\n        }\n        const target = event.target;\n        this._dragData = {\n            pressX: event.clientX,\n            pressY: event.clientY,\n            dragImage: target.nextSibling.firstChild.cloneNode(true),\n        };\n        const dragImageTextColor = getComputedStyle(document.body).getPropertyValue('--jp-content-font-color3');\n        this._dragData.dragImage.children[0].style.color =\n            dragImageTextColor;\n        // add CSS style\n        this._dragData.dragImage.classList.add(SNIPPET_DRAG_IMAGE);\n        target.addEventListener('mouseup', this._evtMouseUp, true);\n        target.addEventListener('mousemove', this.handleDragMove, true);\n        // since a browser has its own drag'n'drop support for images and some other elements.\n        target.ondragstart = () => false;\n        event.preventDefault();\n    }\n    _evtMouseUp(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        const target = event.target;\n        target.removeEventListener('mousemove', this.handleDragMove, true);\n        target.removeEventListener('mouseup', this._evtMouseUp, true);\n    }\n    handleDragMove(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        const data = this._dragData;\n        if (data &&\n            this.shouldStartDrag(data.pressX, data.pressY, event.clientX, event.clientY)) {\n            const idx = event.target.id.slice(CODE_SNIPPET_DRAG_HOVER.length);\n            const codeSnippet = this.props.codeSnippets.filter((codeSnippet) => codeSnippet.id === parseInt(idx))[0];\n            void this.startDrag(data.dragImage, codeSnippet, event.clientX, event.clientY);\n        }\n    }\n    /**\n     * Detect if a drag event should be started. This is down if the\n     * mouse is moved beyond a certain distance (DRAG_THRESHOLD).\n     *\n     * @param prevX - X Coordinate of the mouse pointer during the mousedown event\n     * @param prevY - Y Coordinate of the mouse pointer during the mousedown event\n     * @param nextX - Current X Coordinate of the mouse pointer\n     * @param nextY - Current Y Coordinate of the mouse pointer\n     */\n    shouldStartDrag(prevX, prevY, nextX, nextY) {\n        const dx = Math.abs(nextX - prevX);\n        const dy = Math.abs(nextY - prevY);\n        return dx >= 0 || dy >= DRAG_THRESHOLD;\n    }\n    async startDrag(dragImage, codeSnippet, clientX, clientY) {\n        const target = event.target;\n        const model = new CodeCellModel({});\n        model.value.text = codeSnippet.code;\n        model.metadata;\n        const selected = [model.toJSON()];\n        this._drag = new Drag({\n            mimeData: new MimeData(),\n            dragImage: dragImage,\n            supportedActions: 'copy-move',\n            proposedAction: 'copy',\n            source: this,\n        });\n        this._drag.mimeData.setData(JUPYTER_CELL_MIME, selected);\n        const textContent = codeSnippet.code;\n        this._drag.mimeData.setData('text/plain', textContent);\n        // Remove mousemove and mouseup listeners and start the drag.\n        target.removeEventListener('mousemove', this.handleDragMove, true);\n        target.removeEventListener('mouseup', this._evtMouseUp, true);\n        return this._drag.start(clientX, clientY).then(() => {\n            this.dragHoverStyleRemove(codeSnippet.id);\n            this._drag = null;\n            this._dragData = null;\n        });\n    }\n    _evtMouseLeave() {\n        const preview = document.querySelector('.jp-codeSnippet-preview');\n        if (preview) {\n            if (!preview.classList.contains('inactive')) {\n                preview.classList.add('inactive');\n            }\n        }\n    }\n    //Set the position of the preview to be next to the snippet title.\n    _setPreviewPosition(id) {\n        const realTarget = document.querySelector(`#${TITLE_CLASS}${id}`);\n        const newTarget = document.querySelector(`#${CODE_SNIPPET_ITEM}${id}`);\n        // (CODE_SNIPPET_ITEM)[id];\n        // distDown is the number of pixels to shift the preview down\n        const distDown = realTarget.getBoundingClientRect().top - 43; //this is bumping it up\n        const elementSnippet = newTarget;\n        const heightSnippet = elementSnippet.clientHeight;\n        const heightPreview = heightSnippet.toString(10) + 'px';\n        document.documentElement.style.setProperty('--preview-max-height', heightPreview);\n        const final = distDown.toString(10) + 'px';\n        document.documentElement.style.setProperty('--preview-distance', final);\n    }\n    //Set the position of the option to be under to the three dots on snippet.\n    _setOptionsPosition(event) {\n        const target = event.target;\n        let top;\n        if (target.tagName === 'path') {\n            top = target.getBoundingClientRect().top + 10;\n        }\n        else {\n            top = target.getBoundingClientRect().top + 18;\n        }\n        if (top > 0.7 * window.screen.height) {\n            top -= 120;\n        }\n        const leftAsString = (target.parentElement.style.left + event.pageX).toString() + 'px';\n        const topAsString = top.toString(10) + 'px';\n        document.documentElement.style.setProperty('--more-options-top', topAsString);\n        document.documentElement.style.setProperty('--more-options-left', leftAsString);\n    }\n    renderLanguageIcon(language) {\n        switch (language) {\n            case 'Python': {\n                return (React.createElement(pythonIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'Gfm': {\n                return (React.createElement(markdownIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'Java': {\n                return (React.createElement(javaIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'R': {\n                return (React.createElement(rKernelIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'Julia': {\n                return (React.createElement(juliaIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'Matlab': {\n                return (React.createElement(matlabIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'Scheme': {\n                return (React.createElement(schemeIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'Processing': {\n                return (React.createElement(processingIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'Scala': {\n                return (React.createElement(scalaIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'Groovy': {\n                return (React.createElement(groovyIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'Fortran': {\n                return (React.createElement(fortranIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'Haskell': {\n                return (React.createElement(haskellIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'Ruby': {\n                return (React.createElement(rubyIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'TypeScript': {\n                return (React.createElement(typescriptIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'JavaScript': {\n                return (React.createElement(javascriptIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'CoffeeScript': {\n                return (React.createElement(coffeescriptIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'LiveScript': {\n                return (React.createElement(livescriptIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'C#': {\n                return (React.createElement(csharpIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'F#': {\n                return (React.createElement(fsharpIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'Go': {\n                return (React.createElement(goIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'Erlang': {\n                return (React.createElement(erlangIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'OCaml': {\n                return (React.createElement(ocamlIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'Forth': {\n                return (React.createElement(forthIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'Perl': {\n                return (React.createElement(perlIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'PHP': {\n                return (React.createElement(phpIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'Clojure': {\n                return (React.createElement(clojureIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'Lua': {\n                return (React.createElement(luaIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'PureScript': {\n                return (React.createElement(purescriptIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'C++': {\n                return (React.createElement(cppIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'Prolog': {\n                return (React.createElement(prologIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'Common Lisp': {\n                return (React.createElement(lispIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'C': {\n                return (React.createElement(cIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'Kotlin': {\n                return (React.createElement(kotlinIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'NodeJS': {\n                return (React.createElement(nodejsIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'Coconut': {\n                return (React.createElement(coconutIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'Babel': {\n                return (React.createElement(babelIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'SAS': {\n                return (React.createElement(sasIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'sbt': {\n                return (React.createElement(sbtIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'Rust': {\n                return (React.createElement(rustIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'Q#': {\n                return (React.createElement(qsharpIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'Markdown': {\n                return (React.createElement(markdownIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            case 'Powershell': {\n                return (React.createElement(powershellIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n            default: {\n                return (React.createElement(fileIcon.react, { tag: \"span\", height: \"16px\", width: \"16px\", right: \"7px\", top: \"5px\", \"margin-right\": \"3px\" }));\n            }\n        }\n    }\n    renderDescription(codeSnippet, id) {\n        if (codeSnippet.description && codeSnippet.description.length !== 0) {\n            return (React.createElement(\"div\", { className: CODE_SNIPPET_DESC, id: id.toString() },\n                React.createElement(\"p\", { id: id.toString() }, `${codeSnippet.description}`)));\n        }\n        else {\n            return null;\n        }\n    }\n    getActiveTags() {\n        let tags = [];\n        const languages = [];\n        for (const codeSnippet of this.props.codeSnippets) {\n            if (codeSnippet.tags) {\n                tags = tags.concat(codeSnippet.tags.filter((tag) => !tags.includes(tag)));\n            }\n            if (!languages.includes(codeSnippet.language)) {\n                languages.push(codeSnippet.language);\n            }\n        }\n        return [tags, languages];\n    }\n    deleteCommand(codeSnippet) {\n        showDialog({\n            title: 'Delete snippet?',\n            body: 'Are you sure you want to delete \"' + codeSnippet.name + '\"? ',\n            buttons: [\n                Dialog.cancelButton(),\n                Dialog.warnButton({\n                    label: 'Delete',\n                }),\n            ],\n        }).then((response) => {\n            if (response.button.accept) {\n                const widgetId = `${CODE_SNIPPET_EDITOR}-${codeSnippet.id}`;\n                const editor = find(this.props.app.shell.widgets('main'), (widget, _) => {\n                    return widget.id === widgetId;\n                });\n                if (editor) {\n                    editor.dispose();\n                }\n                // deleting snippets when there is one snippet active\n                this.props.codeSnippetManager\n                    .deleteSnippet(codeSnippet.id)\n                    .then((result) => {\n                    if (result) {\n                        this.props.updateCodeSnippetWidget();\n                    }\n                    else {\n                        console.log('Error in deleting the snippet');\n                        return;\n                    }\n                });\n            }\n        });\n    }\n    exportCommand(codeSnippet) {\n        // Request a text\n        InputDialog.getText({\n            title: 'Export Snippet?',\n            label: 'Directory to Export: ',\n            placeholder: 'share/snippet',\n            okLabel: 'Export',\n        }).then((value) => {\n            if (value.button.accept) {\n                const dirs = value.value.split('/');\n                const codeSnippetContentsManager = CodeSnippetContentsService.getInstance();\n                let path = '';\n                for (let i = 0; i < dirs.length; i++) {\n                    path += dirs[i] + '/';\n                    codeSnippetContentsManager\n                        .save(path, { type: 'directory' })\n                        .catch((_) => {\n                        alert('Path should be a relative path');\n                    });\n                }\n                path += codeSnippet.name + '.json';\n                codeSnippetContentsManager.save(path, {\n                    type: 'file',\n                    format: 'text',\n                    content: JSON.stringify(codeSnippet),\n                });\n                showMessage('export');\n            }\n        });\n    }\n    // remove dropdown menu\n    removeOptionsNode() {\n        const temp = document.getElementsByClassName(CODE_SNIPPET_MORE_OPTIONS)[0];\n        if (!temp.classList.contains('inactive')) {\n            temp.classList.add('inactive');\n        }\n    }\n    // create dropdown menu\n    createOptionsNode(codeSnippet) {\n        const body = document.createElement('div');\n        body.className = OPTIONS_BODY;\n        const optionsContainer = document.createElement('div');\n        optionsContainer.className = CODE_SNIPPET_MORE_OTPIONS_CONTENT;\n        const insertSnip = document.createElement('div');\n        insertSnip.className = CODE_SNIPPET_MORE_OTPIONS_INSERT;\n        insertSnip.textContent = 'Insert snippet';\n        insertSnip.onclick = () => {\n            this.insertCodeSnippet(codeSnippet);\n            this.removeOptionsNode();\n        };\n        const copySnip = document.createElement('div');\n        copySnip.className = CODE_SNIPPET_MORE_OTPIONS_COPY;\n        copySnip.textContent = 'Copy snippet to clipboard';\n        copySnip.onclick = () => {\n            Clipboard.copyToSystem(codeSnippet.code);\n            showMessage('copy');\n            this.removeOptionsNode();\n        };\n        const editSnip = document.createElement('div');\n        editSnip.className = CODE_SNIPPET_MORE_OTPIONS_EDIT;\n        editSnip.textContent = 'Edit snippet';\n        editSnip.onclick = () => {\n            const allSnippetTags = this.getActiveTags()[0]; // snippet tags only\n            const allLangTags = this.getActiveTags()[1];\n            this.props.openCodeSnippetEditor({\n                name: codeSnippet.name,\n                description: codeSnippet.description,\n                language: codeSnippet.language,\n                code: codeSnippet.code,\n                id: codeSnippet.id,\n                tags: codeSnippet.tags,\n                allSnippetTags: allSnippetTags,\n                allLangTags: allLangTags,\n                fromScratch: false,\n            });\n            this.removeOptionsNode();\n        };\n        const deleteSnip = document.createElement('div');\n        deleteSnip.className = CODE_SNIPPET_MORE_OTPIONS_DELETE;\n        deleteSnip.textContent = 'Delete snippet';\n        deleteSnip.onclick = () => {\n            this.deleteCommand(codeSnippet);\n            this.removeOptionsNode();\n        };\n        const exportSnip = document.createElement('div');\n        exportSnip.className = CODE_SNIPPET_MORE_OTPIONS_EXPORT;\n        exportSnip.textContent = 'Export snippet';\n        exportSnip.onclick = () => {\n            this.exportCommand(codeSnippet);\n            this.removeOptionsNode();\n        };\n        optionsContainer.appendChild(insertSnip);\n        optionsContainer.appendChild(copySnip);\n        optionsContainer.appendChild(editSnip);\n        optionsContainer.appendChild(exportSnip);\n        optionsContainer.appendChild(deleteSnip);\n        body.append(optionsContainer);\n        return body;\n    }\n    setSearchOptions(selectedOptions) {\n        this.setState({\n            searchOptions: selectedOptions,\n        });\n    }\n    render() {\n        const { filteredCodeSnippets, matchedIndices } = this.filterSnippets(this.props.codeSnippets, this.state.searchValue, this.state.filterTags, this.state.selectedLangTags);\n        return (React.createElement(\"div\", null,\n            React.createElement(\"header\", { className: CODE_SNIPPETS_HEADER_CLASS },\n                React.createElement(\"span\", { className: CODE_SNIPPET_TITLE }, 'Snippets'),\n                React.createElement(\"button\", { className: CODE_SNIPPET_CREATE_NEW_BTN, onClick: () => {\n                        this.props.openCodeSnippetEditor({\n                            name: '',\n                            description: '',\n                            language: 'Python',\n                            code: '',\n                            id: this.props.codeSnippets.length,\n                            tags: [],\n                            allSnippetTags: this.getActiveTags()[0],\n                            allLangTags: this.getActiveTags()[1],\n                            fromScratch: true,\n                        });\n                    } },\n                    React.createElement(addIcon.react, { tag: \"span\", right: \"7px\", top: \"5px\" }))),\n            React.createElement(FilterTools, { tagDictionary: this.getActiveTagsDictionary(), languageTags: this.getActiveTags()[1], snippetTags: this.getActiveTags()[0], onFilter: this.handleFilter }),\n            React.createElement(\"div\", { className: CODE_SNIPPETS_CONTAINER },\n                React.createElement(\"div\", null, filteredCodeSnippets.map((codeSnippet) => this.renderCodeSnippet(codeSnippet, matchedIndices[codeSnippet.id]))))));\n    }\n}\nclass OptionsHandler extends Widget {\n    constructor(display, codeSnippet) {\n        super({ node: display.createOptionsNode(codeSnippet) });\n    }\n}\nclass PreviewHandler extends Widget {\n    constructor() {\n        super({ node: Private.createPreviewNode() });\n    }\n}\nclass Private {\n    static createPreviewContent() {\n        const body = document.createElement('div');\n        return body;\n    }\n    /**\n     * Create structure for preview of snippet data.\n     */\n    static createPreviewNode() {\n        return this.createPreviewContent();\n    }\n}\n","// Copyright (c) 2020, jupytercalpoly\n// Distributed under the terms of the BSD-3 Clause License.\n// Some lines of code are from Elyra Code Snippet.\n/*\n * Copyright 2018-2020 IBM Corporation\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions a* limitations under the License.\n */\nimport { CodeEditor } from '@jupyterlab/codeeditor';\nimport { ReactWidget, showDialog, Dialog, } from '@jupyterlab/apputils';\nimport { Button } from '@jupyterlab/ui-components';\nimport React from 'react';\nimport { CodeSnippetService } from './CodeSnippetService';\nimport { SUPPORTED_LANGUAGES } from './CodeSnippetLanguages';\nimport { CodeSnippetEditorTags } from './CodeSnippetEditorTags';\nimport { showMessage } from './CodeSnippetMessage';\nimport { validateInputs, saveOverWriteFile } from './CodeSnippetUtilities';\n/**\n * CSS style classes\n */\nconst CODE_SNIPPET_EDITOR = 'jp-codeSnippet-editor';\nconst CODE_SNIPPET_EDITOR_TITLE = 'jp-codeSnippet-editor-title';\nconst CODE_SNIPPET_EDITOR_METADATA = 'jp-codeSnippet-editor-metadata';\nconst CODE_SNIPPET_EDITOR_INPUT_ACTIVE = 'jp-codeSnippet-editor-active';\nconst CODE_SNIPPET_EDITOR_NAME_INPUT = 'jp-codeSnippet-editor-name';\nconst CODE_SNIPPET_EDITOR_LABEL = 'jp-codeSnippet-editor-label';\nconst CODE_SNIPPET_EDITOR_DESC_INPUT = 'jp-codeSnippet-editor-description';\nconst CODE_SNIPPET_EDITOR_LANG_INPUT = 'jp-codeSnippet-editor-language';\nconst CODE_SNIPPET_EDITOR_MIRROR = 'jp-codeSnippetInput-editor';\nconst CODE_SNIPPET_EDITOR_INPUTAREA = 'jp-codeSnippetInputArea';\nconst CODE_SNIPPET_EDITOR_INPUTAREA_MIRROR = 'jp-codeSnippetInputArea-editor';\nconst EDITOR_DIRTY_CLASS = 'jp-mod-dirty';\nexport class CodeSnippetEditor extends ReactWidget {\n    constructor(editorServices, tracker, codeSnippetWidget, args) {\n        super();\n        this.addClass(CODE_SNIPPET_EDITOR);\n        this.contentsService = CodeSnippetService.getCodeSnippetService();\n        this.editorServices = editorServices;\n        this.tracker = tracker;\n        this._codeSnippetEditorMetaData = args;\n        this.oldCodeSnippetName = args.name;\n        this.saved = true;\n        this._hasRefreshedSinceAttach = false;\n        this.codeSnippetWidget = codeSnippetWidget;\n        this.renderCodeInput = this.renderCodeInput.bind(this);\n        this.handleInputFieldChange = this.handleInputFieldChange.bind(this);\n        this.activateCodeMirror = this.activateCodeMirror.bind(this);\n        this.saveChange = this.saveChange.bind(this);\n        this.updateSnippet = this.updateSnippet.bind(this);\n        this.handleChangeOnTag = this.handleChangeOnTag.bind(this);\n    }\n    get codeSnippetEditorMetadata() {\n        return this._codeSnippetEditorMetaData;\n    }\n    deactivateEditor(event) {\n        let target = event.target;\n        while (target && target.parentElement) {\n            if (target.classList.contains(CODE_SNIPPET_EDITOR_MIRROR) ||\n                target.classList.contains(CODE_SNIPPET_EDITOR_NAME_INPUT) ||\n                target.classList.contains(CODE_SNIPPET_EDITOR_DESC_INPUT)) {\n                break;\n            }\n            target = target.parentElement;\n        }\n        const nameInput = document.querySelector(`.${CODE_SNIPPET_EDITOR}-${this._codeSnippetEditorMetaData.id} .${CODE_SNIPPET_EDITOR_NAME_INPUT}`);\n        const descriptionInput = document.querySelector(`.${CODE_SNIPPET_EDITOR}-${this._codeSnippetEditorMetaData.id} .${CODE_SNIPPET_EDITOR_DESC_INPUT}`);\n        const editor = document.querySelector(`.${CODE_SNIPPET_EDITOR}-${this._codeSnippetEditorMetaData.id} #code-${this._codeSnippetEditorMetaData.id}`);\n        if (target.classList.contains(CODE_SNIPPET_EDITOR_NAME_INPUT)) {\n            this.deactivateDescriptionField(descriptionInput);\n            this.deactivateCodeMirror(editor);\n        }\n        else if (target.classList.contains(CODE_SNIPPET_EDITOR_DESC_INPUT)) {\n            this.deactivateNameField(nameInput);\n            this.deactivateCodeMirror(editor);\n        }\n        else if (target.classList.contains(CODE_SNIPPET_EDITOR_MIRROR)) {\n            this.deactivateNameField(nameInput);\n            this.deactivateDescriptionField(descriptionInput);\n        }\n        else {\n            this.deactivateNameField(nameInput);\n            this.deactivateDescriptionField(descriptionInput);\n            this.deactivateCodeMirror(editor);\n        }\n    }\n    deactivateNameField(nameInput) {\n        if (nameInput.classList.contains(CODE_SNIPPET_EDITOR_INPUT_ACTIVE)) {\n            nameInput.classList.remove(CODE_SNIPPET_EDITOR_INPUT_ACTIVE);\n        }\n    }\n    deactivateDescriptionField(descriptionInput) {\n        if (descriptionInput.classList.contains(CODE_SNIPPET_EDITOR_INPUT_ACTIVE)) {\n            descriptionInput.classList.remove(CODE_SNIPPET_EDITOR_INPUT_ACTIVE);\n        }\n    }\n    activeFieldState(event) {\n        const target = event.target;\n        if (!target.classList.contains(CODE_SNIPPET_EDITOR_INPUT_ACTIVE)) {\n            target.classList.add(CODE_SNIPPET_EDITOR_INPUT_ACTIVE);\n        }\n    }\n    onUpdateRequest(msg) {\n        super.onUpdateRequest(msg);\n        if (!this.editor &&\n            document.getElementById('code-' + this._codeSnippetEditorMetaData.id)) {\n            const editorFactory = this.editorServices.factoryService.newInlineEditor;\n            const getMimeTypeByLanguage = this.editorServices.mimeTypeService.getMimeTypeByLanguage;\n            this.editor = editorFactory({\n                host: document.getElementById('code-' + this._codeSnippetEditorMetaData.id),\n                model: new CodeEditor.Model({\n                    value: this._codeSnippetEditorMetaData.code,\n                    mimeType: getMimeTypeByLanguage({\n                        name: this._codeSnippetEditorMetaData.language,\n                        codemirror_mode: this._codeSnippetEditorMetaData.language,\n                    }),\n                }),\n            });\n            this.editor.model.value.changed.connect((args) => {\n                this._codeSnippetEditorMetaData.code = args.text.split('\\n');\n                if (!this.title.className.includes(EDITOR_DIRTY_CLASS)) {\n                    this.title.className += ` ${EDITOR_DIRTY_CLASS}`;\n                }\n                this.saved = false;\n            });\n        }\n        if (this.isVisible) {\n            this._hasRefreshedSinceAttach = true;\n            this.editor.refresh();\n        }\n    }\n    onAfterAttach(msg) {\n        super.onAfterAttach(msg);\n        this._hasRefreshedSinceAttach = false;\n        if (this.isVisible) {\n            this.update();\n        }\n        window.addEventListener('beforeunload', (e) => {\n            if (!this.saved) {\n                e.preventDefault();\n                e.returnValue = '';\n            }\n        });\n    }\n    onAfterShow(msg) {\n        if (!this._hasRefreshedSinceAttach) {\n            this.update();\n        }\n    }\n    /**\n     * Initial focus on the editor when it gets activated!\n     * @param msg\n     */\n    onActivateRequest(msg) {\n        this.editor.focus();\n    }\n    onCloseRequest(msg) {\n        if (!this.saved) {\n            showDialog({\n                title: 'Close without saving?',\n                body: (React.createElement(\"p\", null,\n                    ' ',\n                    `\"${this._codeSnippetEditorMetaData.name}\" has unsaved changes, close without saving?`,\n                    ' ')),\n                buttons: [\n                    Dialog.cancelButton(),\n                    Dialog.warnButton({ label: 'Discard' }),\n                    Dialog.okButton({ label: 'Save' }),\n                ],\n            }).then((response) => {\n                if (response.button.accept) {\n                    if (response.button.label === 'Discard') {\n                        this.dispose();\n                        super.onCloseRequest(msg);\n                    }\n                    else if (response.button.label === 'Save') {\n                        const name = document.querySelector(`.${CODE_SNIPPET_EDITOR}-${this._codeSnippetEditorMetaData.id} .${CODE_SNIPPET_EDITOR_NAME_INPUT}`).value;\n                        const description = document.querySelector(`.${CODE_SNIPPET_EDITOR}-${this._codeSnippetEditorMetaData.id} .${CODE_SNIPPET_EDITOR_DESC_INPUT}`).value;\n                        const language = document.querySelector(`.${CODE_SNIPPET_EDITOR}-${this._codeSnippetEditorMetaData.id} .${CODE_SNIPPET_EDITOR_LANG_INPUT}`).value;\n                        const validity = validateInputs(name, description, language);\n                        if (validity) {\n                            this.updateSnippet().then((value) => {\n                                if (value) {\n                                    this.dispose();\n                                    super.onCloseRequest(msg);\n                                }\n                            });\n                        }\n                    }\n                }\n            });\n        }\n        else {\n            this.dispose();\n            super.onCloseRequest(msg);\n        }\n    }\n    /**\n     * Visualize the editor more look like an editor\n     * @param event\n     */\n    activateCodeMirror(event) {\n        let target = event.target;\n        while (target && target.parentElement) {\n            if (target.classList.contains(CODE_SNIPPET_EDITOR_MIRROR)) {\n                break;\n            }\n            target = target.parentElement;\n        }\n        const editor = document.querySelector(`.${CODE_SNIPPET_EDITOR}-${this._codeSnippetEditorMetaData.id} #code-${this._codeSnippetEditorMetaData.id}`);\n        if (target.classList.contains(CODE_SNIPPET_EDITOR_MIRROR)) {\n            if (!editor.classList.contains('active')) {\n                editor.classList.add('active');\n            }\n        }\n    }\n    deactivateCodeMirror(editor) {\n        if (editor.classList.contains('active')) {\n            editor.classList.remove('active');\n        }\n    }\n    handleInputFieldChange(event) {\n        if (!this.title.className.includes(EDITOR_DIRTY_CLASS)) {\n            this.title.className += ` ${EDITOR_DIRTY_CLASS}`;\n        }\n        const target = event.target;\n        if (!target.classList.contains('FieldChanged')) {\n            target.classList.add('FieldChanged');\n        }\n        this.saved = false;\n    }\n    saveChange(event) {\n        const name = document.querySelector(`.${CODE_SNIPPET_EDITOR}-${this._codeSnippetEditorMetaData.id} .${CODE_SNIPPET_EDITOR_NAME_INPUT}`).value;\n        const description = document.querySelector(`.${CODE_SNIPPET_EDITOR}-${this._codeSnippetEditorMetaData.id} .${CODE_SNIPPET_EDITOR_DESC_INPUT}`).value;\n        const language = document.querySelector(`.${CODE_SNIPPET_EDITOR}-${this._codeSnippetEditorMetaData.id} .${CODE_SNIPPET_EDITOR_LANG_INPUT}`).value;\n        const validity = validateInputs(name, description, language);\n        if (validity) {\n            this.updateSnippet();\n        }\n    }\n    async updateSnippet() {\n        const name = document.querySelector(`.${CODE_SNIPPET_EDITOR}-${this._codeSnippetEditorMetaData.id} .${CODE_SNIPPET_EDITOR_NAME_INPUT}`).value;\n        const description = document.querySelector(`.${CODE_SNIPPET_EDITOR}-${this._codeSnippetEditorMetaData.id} .${CODE_SNIPPET_EDITOR_DESC_INPUT}`).value;\n        const language = document.querySelector(`.${CODE_SNIPPET_EDITOR}-${this._codeSnippetEditorMetaData.id} .${CODE_SNIPPET_EDITOR_LANG_INPUT}`).value;\n        this._codeSnippetEditorMetaData.name = name;\n        this._codeSnippetEditorMetaData.description = description;\n        this._codeSnippetEditorMetaData.language = language;\n        const newName = this._codeSnippetEditorMetaData.name;\n        const oldName = this.oldCodeSnippetName;\n        const newSnippet = {\n            name: this._codeSnippetEditorMetaData.name,\n            description: this._codeSnippetEditorMetaData.description,\n            language: this._codeSnippetEditorMetaData.language,\n            code: this._codeSnippetEditorMetaData.code,\n            id: this._codeSnippetEditorMetaData.id,\n            tags: this._codeSnippetEditorMetaData.tags,\n        };\n        this._codeSnippetEditorMetaData;\n        const isDuplicatName = this.contentsService.duplicateNameExists(newName);\n        // update new name as an old name\n        this.oldCodeSnippetName = this._codeSnippetEditorMetaData.name;\n        // add new snippet\n        if (this._codeSnippetEditorMetaData.fromScratch) {\n            if (isDuplicatName) {\n                const oldSnippet = this.contentsService.getSnippetByName(newName)[0];\n                await saveOverWriteFile(this.contentsService, oldSnippet, newSnippet);\n            }\n            else {\n                this.contentsService.addSnippet(newSnippet).then((res) => {\n                    if (!res) {\n                        console.log('Error in adding snippet');\n                        return false;\n                    }\n                });\n                showMessage('confirm');\n            }\n        }\n        // modify existing snippet\n        else {\n            if (newName !== oldName) {\n                if (isDuplicatName) {\n                    // overwrite\n                    const oldSnippet = this.contentsService.getSnippetByName(newName)[0];\n                    await saveOverWriteFile(this.contentsService, oldSnippet, newSnippet).then((res) => {\n                        if (res) {\n                            // get the id of snippet you are editting\n                            const removedSnippet = this.contentsService.getSnippetByName(oldName)[0];\n                            // delete the one you are editing\n                            this.contentsService.deleteSnippet(removedSnippet.id);\n                        }\n                        else {\n                            return false;\n                        }\n                    });\n                }\n            }\n            this.contentsService\n                .modifyExistingSnippet(oldName, newSnippet)\n                .then((res) => {\n                if (!res) {\n                    console.log('Error in modifying snippet');\n                    return false;\n                }\n            });\n        }\n        this.saved = true;\n        // remove the dirty state\n        this.title.className = this.title.className.replace(` ${EDITOR_DIRTY_CLASS}`, '');\n        // change label\n        this.title.label =\n            '[' +\n                this._codeSnippetEditorMetaData.language +\n                '] ' +\n                this._codeSnippetEditorMetaData.name;\n        if (!this._codeSnippetEditorMetaData.fromScratch) {\n            // update tracker\n            this.tracker.save(this);\n        }\n        // update the display in code snippet explorer\n        this.codeSnippetWidget.updateCodeSnippetWidget();\n        // close editor if it's from scratch\n        if (this._codeSnippetEditorMetaData.fromScratch) {\n            this.dispose();\n        }\n        return true;\n    }\n    handleChangeOnTag(tags) {\n        if (!this.title.className.includes(EDITOR_DIRTY_CLASS)) {\n            this.title.className += ` ${EDITOR_DIRTY_CLASS}`;\n        }\n        this._codeSnippetEditorMetaData.tags = tags\n            .filter((tag) => tag.clicked)\n            .map((tag) => tag.name);\n        this._codeSnippetEditorMetaData.allSnippetTags = tags.map((tag) => tag.name);\n        this.saved = false;\n    }\n    handleOnBlur(event) {\n        const target = event.target;\n        if (!target.classList.contains('touched')) {\n            target.classList.add('touched');\n        }\n    }\n    /**\n     * TODO: clean CSS style class - \"Use constant\"\n     */\n    renderCodeInput() {\n        return (React.createElement(\"section\", { className: CODE_SNIPPET_EDITOR_INPUTAREA_MIRROR, onMouseDown: this.activateCodeMirror },\n            React.createElement(\"div\", { className: CODE_SNIPPET_EDITOR_MIRROR, id: 'code-' + this._codeSnippetEditorMetaData.id.toString() })));\n    }\n    renderLanguages() {\n        SUPPORTED_LANGUAGES.sort();\n        return (React.createElement(\"div\", null,\n            React.createElement(\"input\", { className: CODE_SNIPPET_EDITOR_LANG_INPUT, list: \"languages\", name: \"language\", defaultValue: this._codeSnippetEditorMetaData.language, onChange: this.handleInputFieldChange, required: true }),\n            React.createElement(\"datalist\", { id: \"languages\" }, SUPPORTED_LANGUAGES.map((lang) => this.renderLanguageOptions(lang)))));\n    }\n    renderLanguageOptions(option) {\n        return React.createElement(\"option\", { key: option, value: option });\n    }\n    render() {\n        const fromScratch = this._codeSnippetEditorMetaData.fromScratch;\n        return (React.createElement(\"div\", { className: CODE_SNIPPET_EDITOR_INPUTAREA, onMouseDown: (event) => {\n                this.deactivateEditor(event);\n            } },\n            React.createElement(\"span\", { className: CODE_SNIPPET_EDITOR_TITLE }, fromScratch ? 'New Code Snippet' : 'Edit Code Snippet'),\n            React.createElement(\"section\", { className: CODE_SNIPPET_EDITOR_METADATA },\n                React.createElement(\"label\", { className: CODE_SNIPPET_EDITOR_LABEL }, \"Name (required)\"),\n                React.createElement(\"input\", { className: CODE_SNIPPET_EDITOR_NAME_INPUT, defaultValue: this._codeSnippetEditorMetaData.name, placeholder: 'Ex. starter code', type: \"text\", required: true, onMouseDown: (event) => this.activeFieldState(event), onChange: (event) => {\n                        this.handleInputFieldChange(event);\n                    }, onBlur: this.handleOnBlur }),\n                React.createElement(\"label\", { className: CODE_SNIPPET_EDITOR_LABEL }, \"Description (optional)\"),\n                React.createElement(\"input\", { className: CODE_SNIPPET_EDITOR_DESC_INPUT, defaultValue: this._codeSnippetEditorMetaData.description, placeholder: 'Description', type: \"text\", onMouseDown: (event) => this.activeFieldState(event), onChange: (event) => {\n                        this.handleInputFieldChange(event);\n                    }, onBlur: this.handleOnBlur }),\n                React.createElement(\"label\", { className: CODE_SNIPPET_EDITOR_LABEL }, \"Language (required)\"),\n                this.renderLanguages(),\n                React.createElement(\"label\", { className: CODE_SNIPPET_EDITOR_LABEL }, \"Tags\"),\n                React.createElement(CodeSnippetEditorTags, { allSnippetTags: this._codeSnippetEditorMetaData.allSnippetTags\n                        ? this._codeSnippetEditorMetaData.allSnippetTags.map((tag) => ({\n                            name: tag,\n                            clicked: this._codeSnippetEditorMetaData.tags &&\n                                this._codeSnippetEditorMetaData.tags.includes(tag)\n                                ? true\n                                : false,\n                        }))\n                        : [], langTags: this._codeSnippetEditorMetaData.allLangTags, handleChange: this.handleChangeOnTag })),\n            React.createElement(\"span\", { className: CODE_SNIPPET_EDITOR_LABEL }, \"Code\"),\n            this.renderCodeInput(),\n            React.createElement(Button, { className: \"saveBtn\", onClick: this.saveChange }, fromScratch ? 'Create & Close' : 'Save')));\n    }\n}\n","// Copyright (c) 2020, jupytercalpoly\n// Distributed under the terms of the BSD-3 Clause License.\nimport { checkIcon, addIcon } from '@jupyterlab/ui-components';\nimport React from 'react';\n/**\n * CSS STYLING\n */\nconst CODE_SNIPPET_EDITOR_TAG = 'jp-codeSnippet-editor-tag';\nconst CODE_SNIPPET_EDITOR_TAG_PLUS_ICON = 'jp-codeSnippet-editor-tag-plusIcon';\nconst CODE_SNIPPET_EDITOR_TAG_LIST = 'jp-codeSnippet-editor-tagList';\nexport class CodeSnippetEditorTags extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allSnippetTags: [],\n            plusIconClicked: false,\n        };\n        this.renderTags = this.renderTags.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n    }\n    componentDidMount() {\n        this.setState({\n            allSnippetTags: this.props.allSnippetTags,\n            plusIconClicked: false,\n        });\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps !== this.props) {\n            this.setState({\n                allSnippetTags: this.props.allSnippetTags,\n            });\n        }\n    }\n    handleClick(event) {\n        const target = event.target;\n        const clickedTag = target.innerText;\n        this.handleClickHelper(clickedTag);\n    }\n    handleOnChange() {\n        this.props.handleChange(this.state.allSnippetTags);\n    }\n    handleClickHelper(\n    // parent: HTMLElement,\n    clickedTag) {\n        this.setState((state) => ({\n            allSnippetTags: state.allSnippetTags.map((tag) => tag.name === clickedTag ? Object.assign(Object.assign({}, tag), { clicked: !tag.clicked }) : tag),\n        }), this.handleOnChange);\n    }\n    addTagOnClick(event) {\n        this.setState({ plusIconClicked: true });\n        const inputElement = event.target;\n        if (inputElement.value === 'Add Tag') {\n            inputElement.value = '';\n            inputElement.style.width = '62px';\n            inputElement.style.minWidth = '62px';\n        }\n    }\n    addTagOnKeyDown(event) {\n        const inputElement = event.target;\n        if (inputElement.value !== '' && event.key === 'Enter') {\n            if (this.state.allSnippetTags.find((tag) => tag.name === inputElement.value)) {\n                alert('Duplicate Tag Name!');\n                return;\n            }\n            if (this.props.langTags.includes(inputElement.value)) {\n                alert('This tag already exists in language tags!\\nIf you want to create this tag, lowercase the first letter.');\n                return;\n            }\n            const newTag = { name: inputElement.value, clicked: true };\n            this.setState((state) => ({\n                allSnippetTags: [...state.allSnippetTags, newTag],\n                plusIconClicked: false,\n            }), this.handleOnChange);\n        }\n    }\n    addTagOnBlur(event) {\n        const inputElement = event.target;\n        inputElement.value = 'Add Tag';\n        inputElement.style.width = '50px';\n        inputElement.style.minWidth = '50px';\n        inputElement.blur();\n        this.setState({ plusIconClicked: false });\n    }\n    renderTags() {\n        const hasTags = this.state.allSnippetTags;\n        const inputBox = this.state.plusIconClicked === true ? (React.createElement(\"ul\", { className: `${CODE_SNIPPET_EDITOR_TAG} tag unapplied-tag`, key: 'editor-new-tag' },\n            React.createElement(\"input\", { onClick: (event) => this.addTagOnClick(event), onKeyDown: (event) => this.addTagOnKeyDown(event), onBlur: (event) => this.addTagOnBlur(event), autoFocus: true }))) : (React.createElement(\"ul\", { className: `${CODE_SNIPPET_EDITOR_TAG} tag unapplied-tag` },\n            React.createElement(\"button\", { onClick: () => this.setState({ plusIconClicked: true }) }, \"Add Tag\"),\n            React.createElement(addIcon.react, { tag: \"span\", className: CODE_SNIPPET_EDITOR_TAG_PLUS_ICON, elementPosition: \"center\", height: \"16px\", width: \"16px\", marginLeft: \"2px\" })));\n        return (React.createElement(\"li\", { className: CODE_SNIPPET_EDITOR_TAG_LIST },\n            hasTags\n                ? this.state.allSnippetTags.map((tag, index) => (() => {\n                    if (!tag.clicked) {\n                        return (React.createElement(\"ul\", { className: `${CODE_SNIPPET_EDITOR_TAG} tag unapplied-tag`, id: 'editor' + '-' + tag.name + '-' + index, key: 'editor' + '-' + tag.name + '-' + index },\n                            React.createElement(\"button\", { onClick: this.handleClick }, tag.name)));\n                    }\n                    else {\n                        return (React.createElement(\"ul\", { className: `${CODE_SNIPPET_EDITOR_TAG} tag applied-tag`, id: 'editor' + '-' + tag.name + '-' + index, key: 'editor' + '-' + tag.name + '-' + index },\n                            React.createElement(\"button\", { onClick: this.handleClick }, tag.name),\n                            React.createElement(checkIcon.react, { tag: \"span\", elementPosition: \"center\", height: \"18px\", width: \"18px\", marginLeft: \"5px\", marginRight: \"-3px\" })));\n                    }\n                })())\n                : null,\n            inputBox));\n    }\n    render() {\n        return React.createElement(\"div\", null, this.renderTags());\n    }\n}\n","// Copyright (c) 2020, jupytercalpoly\n// Distributed under the terms of the BSD-3 Clause License.\nimport { InputGroup, checkIcon } from '@jupyterlab/ui-components';\nimport React from 'react';\nconst FILTER_ARROW_UP = 'jp-codeSnippet-filter-arrow-up';\nconst FILTER_OPTION = 'jp-codeSnippet-filter-option';\nconst FILTER_TAGS = 'jp-codeSnippet-filter-tags';\nconst FILTER_TAG = 'jp-codeSnippet-filter-tag';\nconst FILTER_CHECK = 'jp-codeSnippet-filter-check';\nconst FILTER_TITLE = 'jp-codeSnippet-filter-title';\nconst FILTER_TOOLS = 'jp-codeSnippet-filterTools';\nconst FILTER_SEARCHBAR = 'jp-codeSnippet-searchbar';\nconst FILTER_SEARCHWRAPPER = 'jp-codeSnippet-searchwrapper';\nconst FILTER_CLASS = 'jp-codeSnippet-filter';\nconst FILTER_BUTTON = 'jp-codeSnippet-filter-btn';\nexport class FilterTools extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleSearch = (event) => {\n            this.setState({ searchValue: event.target.value }, this.filterSnippets);\n        };\n        this.state = { show: false, selectedTags: [], searchValue: '' }; //--> selectedTags & selectedLangTags\n        this.createFilterBox = this.createFilterBox.bind(this);\n        this.renderFilterOption = this.renderFilterOption.bind(this);\n        this.renderTags = this.renderTags.bind(this);\n        this.renderAppliedTag = this.renderAppliedTag.bind(this);\n        this.renderUnappliedTag = this.renderUnappliedTag.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.filterSnippets = this.filterSnippets.bind(this);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps !== this.props) {\n            // get all the tags together in one list\n            const concatTags = this.props.snippetTags.concat(this.props.languageTags);\n            this.setState((state) => ({\n                selectedTags: state.selectedTags\n                    .filter((tag) => concatTags.includes(tag))\n                    .sort(),\n            }));\n        }\n    }\n    createFilterBox() {\n        const filterArrow = document.querySelector(`.${FILTER_ARROW_UP}`);\n        const filterOption = document.querySelector(`.${FILTER_OPTION}`);\n        filterArrow.classList.toggle('idle');\n        filterOption.classList.toggle('idle');\n    }\n    renderTags(tags, type) {\n        const selectedLanguageTags = this.state.selectedTags.filter((tag) => this.props.languageTags.includes(tag));\n        return (React.createElement(\"div\", { className: FILTER_TAGS }, tags.sort().map((tag, index) => {\n            // language tags\n            if (type === 'language' && this.props.languageTags.includes(tag)) {\n                if (this.state.selectedTags.includes(tag)) {\n                    return this.renderAppliedTag(tag, index.toString());\n                }\n                else {\n                    return this.renderUnappliedTag(tag, index.toString());\n                }\n            }\n            else if (\n            // snippet tags\n            type === 'snippet' &&\n                !this.props.languageTags.includes(tag)) {\n                if (selectedLanguageTags.length !== 0) {\n                    // if languages are selected, only display snippet tags that have snippets in those languages\n                    const langsMatch = this.props.tagDictionary\n                        .get(tag)\n                        .some((r) => selectedLanguageTags.includes(r));\n                    if (langsMatch) {\n                        if (this.state.selectedTags.includes(tag)) {\n                            return this.renderAppliedTag(tag, index.toString());\n                        }\n                        else {\n                            return this.renderUnappliedTag(tag, index.toString());\n                        }\n                    }\n                }\n                else {\n                    if (this.state.selectedTags.includes(tag)) {\n                        return this.renderAppliedTag(tag, index.toString());\n                    }\n                    else {\n                        return this.renderUnappliedTag(tag, index.toString());\n                    }\n                }\n            }\n        })));\n    }\n    renderAppliedTag(tag, index) {\n        return (React.createElement(\"div\", { className: `${FILTER_TAG} tag applied-tag`, id: 'filter' + '-' + tag + '-' + index, key: 'filter' + '-' + tag + '-' + index },\n            React.createElement(\"button\", { onClick: this.handleClick }, tag),\n            React.createElement(checkIcon.react, { className: FILTER_CHECK, tag: \"span\", elementPosition: \"center\", height: \"18px\", width: \"18px\", marginLeft: \"5px\", marginRight: \"-3px\" })));\n    }\n    renderUnappliedTag(tag, index) {\n        return (React.createElement(\"div\", { className: `${FILTER_TAG} tag unapplied-tag`, id: 'filter' + '-' + tag + '-' + index, key: 'filter' + '-' + tag + '-' + index },\n            React.createElement(\"button\", { onClick: this.handleClick }, tag)));\n    }\n    handleClick(event) {\n        const target = event.target;\n        const clickedTag = target.innerText;\n        const parent = target.parentElement;\n        this.setState((state) => ({\n            selectedTags: this.handleClickHelper(parent, state.selectedTags, clickedTag),\n        }), this.filterSnippets);\n    }\n    handleClickHelper(parent, currentTags, clickedTag) {\n        if (parent.classList.contains('unapplied-tag')) {\n            parent.classList.replace('unapplied-tag', 'applied-tag');\n            currentTags.splice(-1, 0, clickedTag);\n        }\n        else if (parent.classList.contains('applied-tag')) {\n            parent.classList.replace('applied-tag', 'unapplied-tag');\n            const idx = currentTags.indexOf(clickedTag);\n            currentTags.splice(idx, 1);\n        }\n        return currentTags.sort();\n    }\n    filterSnippets() {\n        this.props.onFilter(this.state.searchValue, this.state.selectedTags, this.state.selectedTags.filter((tag) => this.props.languageTags.includes(tag)));\n    }\n    renderFilterOption() {\n        // get all the tags together in one list\n        const concatTags = this.props.snippetTags.concat(this.props.languageTags);\n        return (React.createElement(\"div\", { className: `${FILTER_OPTION} idle` },\n            React.createElement(\"div\", { className: FILTER_TITLE },\n                React.createElement(\"span\", null, \"language tags\")),\n            this.renderTags(concatTags, 'language'),\n            React.createElement(\"div\", { className: FILTER_TITLE },\n                React.createElement(\"span\", null, \"snippet tags\")),\n            this.renderTags(concatTags, 'snippet')));\n    }\n    render() {\n        return (React.createElement(\"div\", { className: FILTER_TOOLS },\n            React.createElement(\"div\", { className: FILTER_SEARCHBAR },\n                React.createElement(InputGroup, { className: FILTER_SEARCHWRAPPER, type: \"text\", placeholder: \"SEARCH SNIPPETS\", onChange: this.handleSearch, rightIcon: \"ui-components:search\", value: this.state.searchValue })),\n            React.createElement(\"div\", { className: FILTER_CLASS },\n                React.createElement(\"button\", { className: FILTER_BUTTON, onClick: this.createFilterBox }, \"Filter By Tags\"),\n                React.createElement(\"div\", { className: `${FILTER_ARROW_UP} idle` }),\n                this.renderFilterOption())));\n    }\n}\n","// Copyright (c) 2020, jupytercalpoly\n// Distributed under the terms of the BSD-3 Clause License.\nimport { Dialog } from '@jupyterlab/apputils';\nimport { addIcon, checkIcon } from '@jupyterlab/ui-components';\nimport { Widget } from '@lumino/widgets';\nimport { CodeSnippetService } from './CodeSnippetService';\nimport { showMessage } from './CodeSnippetMessage';\nimport { SUPPORTED_LANGUAGES } from './CodeSnippetLanguages';\nimport { validateInputs, saveOverWriteFile } from './CodeSnippetUtilities';\n/**\n * The class name added to file dialogs.\n */\nconst FILE_DIALOG_CLASS = 'jp-codeSnippet-fileDialog';\n/**\n * CSS STYLING\n */\nconst CODE_SNIPPET_DIALOG_NAME_INPUT = 'jp-codeSnippet-dialog-name-input';\nconst CODE_SNIPPET_DIALOG_DESC_INPUT = 'jp-codeSnippet-dialog-desc-input';\nconst CODE_SNIPPET_DIALOG_LANG_INPUT = 'jp-codeSnippet-dialog-lang-input';\nconst CODE_SNIPPET_INPUTTAG_PLUS_ICON = 'jp-codeSnippet-inputTag-plusIcon';\nconst CODE_SNIPPET_INPUTTAG_LIST = 'jp-codeSnippet-inputTagList';\nconst CODE_SNIPPET_INPUT_TAG = 'jp-codeSnippet-inputTag';\nconst CODE_SNIPPET_INPUT_TAG_CHECK = 'jp-codeSnippet-inputTag-check';\nclass CodeSnippetDialog extends Dialog {\n    onAfterAttach(msg) {\n        const node = this.node;\n        node.addEventListener('keydown', this, false);\n        node.addEventListener('contextmenu', this, true);\n        node.addEventListener('click', this, true);\n        document.addEventListener('focus', this, true);\n        const body = this.node.querySelector('.jp-Dialog-body');\n        const el = body.querySelector(`.${CODE_SNIPPET_DIALOG_NAME_INPUT}`);\n        this.first = el;\n        el.focus();\n    }\n    onAfterDetach(msg) {\n        const node = this.node;\n        node.removeEventListener('keydown', this, false);\n        node.removeEventListener('contextmenu', this, true);\n        node.removeEventListener('click', this, true);\n        document.removeEventListener('focus', this, true);\n    }\n    _evtKeydown(event) {\n        switch (event.key) {\n            case 'Escape':\n                event.stopPropagation();\n                event.preventDefault();\n                this.reject();\n                break;\n            case 'Tab': {\n                const last_button = document.querySelector('.jp-mod-accept');\n                if (document.activeElement === last_button && !event.shiftKey) {\n                    event.stopPropagation();\n                    event.preventDefault();\n                    this.first.focus();\n                }\n                break;\n            }\n            case 'Enter':\n                event.stopPropagation();\n                event.preventDefault();\n                this.resolve();\n                break;\n            default:\n                break;\n        }\n    }\n}\nfunction showCodeSnippetDialog(options = {}) {\n    const dialog = new CodeSnippetDialog(options);\n    return dialog.launch();\n}\n/**\n * Save an input with a dialog. This is what actually displays everything.\n * Result.value is the value retrieved from .getValue(). ---> .getValue() returns an array of inputs.\n */\nexport function CodeSnippetInputDialog(codeSnippetWidget, code, language, idx) {\n    const tags = [];\n    const langTags = [];\n    const codeSnippetManager = CodeSnippetService.getCodeSnippetService();\n    const snippets = codeSnippetManager.snippets;\n    // get all active tags\n    for (const snippet of snippets) {\n        if (snippet.tags) {\n            for (const tag of snippet.tags) {\n                if (!tags.includes(tag)) {\n                    tags.push(tag);\n                }\n            }\n        }\n        if (!langTags.includes(snippet.language)) {\n            langTags.push(snippet.language);\n        }\n    }\n    const body = new InputHandler(tags, language, langTags);\n    return showInputDialog(codeSnippetWidget, tags, idx, codeSnippetManager, code, language, body);\n}\n/**\n * This function creates the actual input form and processes the inputs given.\n */\nexport function showInputDialog(codeSnippetWidget, tags, idx, codeSnippetManager, code, language, body) {\n    return showCodeSnippetDialog({\n        title: 'Save Code Snippet',\n        body: body,\n        buttons: [Dialog.cancelButton(), Dialog.okButton({ label: 'Save' })],\n    }).then((result) => {\n        if (!result.value) {\n            return null;\n        }\n        const nameInput = result.value[0];\n        const descriptionInput = result.value[1];\n        const languageInput = result.value[2];\n        if (!validateInputs(nameInput, descriptionInput, languageInput)) {\n            showInputDialog(codeSnippetWidget, tags, idx, codeSnippetManager, code, language, body);\n        }\n        else {\n            const tags = result.value.slice(3);\n            const newSnippet = {\n                name: nameInput.replace(' ', ''),\n                description: descriptionInput,\n                language: languageInput,\n                code: code,\n                id: idx,\n                tags: tags,\n            };\n            for (const snippet of codeSnippetManager.snippets) {\n                if (snippet.name === newSnippet.name) {\n                    saveOverWriteFile(codeSnippetManager, snippet, newSnippet).then((res) => {\n                        if (res) {\n                            codeSnippetWidget.renderCodeSnippetsSignal.emit(codeSnippetManager.snippets);\n                        }\n                    });\n                    return;\n                }\n            }\n            createNewSnippet(codeSnippetWidget, newSnippet, codeSnippetManager);\n        }\n    });\n}\nfunction createNewSnippet(codeSnippetWidget, newSnippet, codeSnippetManager) {\n    codeSnippetManager.addSnippet(newSnippet).then((res) => {\n        if (!res) {\n            console.log('Error in adding snippet');\n            return;\n        }\n    });\n    codeSnippetWidget.renderCodeSnippetsSignal.emit(codeSnippetManager.snippets);\n    showMessage('confirm');\n}\n/**\n * Test whether a name is a valid file name\n *\n * Disallows \"/\", \"\\\", and \":\" in file names, as well as names with zero length.\n */\nexport function isValidFileName(name) {\n    const validNameExp = /[/\\\\:]/;\n    return name.length > 0 && !validNameExp.test(name);\n}\n/**\n * A widget used to get input data.\n */\nclass InputHandler extends Widget {\n    /**\n     * Construct a new \"code snippet\" dialog.\n     * readonly inputNode: HTMLInputElement; <--- in Widget class\n     */\n    constructor(snippetTags, language, langTags) {\n        super({ node: Private.createInputNode(snippetTags, language, langTags) });\n        this.addClass(FILE_DIALOG_CLASS);\n    }\n    getValue() {\n        const inputs = [];\n        inputs.push(this.node.querySelector(`.${CODE_SNIPPET_DIALOG_NAME_INPUT}`).value, this.node.querySelector(`.${CODE_SNIPPET_DIALOG_DESC_INPUT}`).value, this.node.querySelector(`.${CODE_SNIPPET_DIALOG_LANG_INPUT}`).value);\n        inputs.push(...Private.selectedTags);\n        // reset selectedTags\n        Private.selectedTags = [];\n        return inputs;\n    }\n}\n/**\n * A namespace for private data.\n */\nclass Private {\n    static handleOnBlur(event) {\n        const target = event.target;\n        if (!target.classList.contains('touched')) {\n            target.classList.add('touched');\n        }\n    }\n    /**\n     * Create the node for a code snippet form handler. This is what's creating all of the elements to be displayed.\n     */\n    static createInputNode(snippetTags, language, langTags) {\n        Private.allSnippetTags = snippetTags;\n        Private.allLangTags = langTags;\n        const body = document.createElement('form');\n        const nameTitle = document.createElement('label');\n        nameTitle.textContent = 'Snippet Name (required)';\n        const name = document.createElement('input');\n        name.className = CODE_SNIPPET_DIALOG_NAME_INPUT;\n        name.required = true;\n        name.placeholder = 'Ex. starter code';\n        name.onblur = Private.handleOnBlur;\n        const descriptionTitle = document.createElement('label');\n        descriptionTitle.textContent = 'Description (optional)';\n        const description = document.createElement('input');\n        description.className = CODE_SNIPPET_DIALOG_DESC_INPUT;\n        description.placeholder = 'Description';\n        description.onblur = Private.handleOnBlur;\n        const languageTitle = document.createElement('label');\n        languageTitle.textContent = 'Language (required)';\n        const languageInput = document.createElement('input');\n        languageInput.className = CODE_SNIPPET_DIALOG_LANG_INPUT;\n        languageInput.setAttribute('list', 'languages');\n        // capitalize the first character\n        languageInput.value = language[0].toUpperCase() + language.slice(1);\n        languageInput.required = true;\n        const languageOption = document.createElement('datalist');\n        languageOption.id = 'languages';\n        languageOption.onblur = Private.handleOnBlur;\n        SUPPORTED_LANGUAGES.sort();\n        for (const supportedLanguage of SUPPORTED_LANGUAGES) {\n            const option = document.createElement('option');\n            option.value = supportedLanguage;\n            languageOption.appendChild(option);\n        }\n        const tagList = document.createElement('li');\n        tagList.classList.add(CODE_SNIPPET_INPUTTAG_LIST);\n        for (const tag of snippetTags) {\n            const tagElem = document.createElement('ul');\n            tagElem.className = `${CODE_SNIPPET_INPUT_TAG} tag unapplied-tag`;\n            const tagBtn = document.createElement('button');\n            tagBtn.innerText = tag;\n            tagBtn.onclick = Private.handleClick;\n            tagElem.appendChild(tagBtn);\n            tagList.appendChild(tagElem);\n        }\n        const addTagElem = document.createElement('ul');\n        addTagElem.className = `${CODE_SNIPPET_INPUT_TAG} tag unapplied-tag`;\n        const newTagName = document.createElement('button');\n        newTagName.innerText = 'Add Tag';\n        newTagName.style.cursor = 'pointer';\n        addTagElem.appendChild(newTagName);\n        const plusIcon = addIcon.element({\n            tag: 'span',\n            className: CODE_SNIPPET_INPUTTAG_PLUS_ICON,\n            elementPosition: 'center',\n            height: '16px',\n            width: '16px',\n            marginLeft: '2px',\n        });\n        newTagName.onclick = Private.addTag;\n        addTagElem.appendChild(plusIcon);\n        tagList.append(addTagElem);\n        body.appendChild(nameTitle);\n        body.appendChild(name);\n        body.appendChild(descriptionTitle);\n        body.appendChild(description);\n        body.appendChild(languageTitle);\n        body.appendChild(languageInput);\n        body.appendChild(languageOption);\n        body.appendChild(tagList);\n        return body;\n    }\n    // replace the newTagName to input and delete plusIcon and insertbefore current tag on keydown or blur (refer to cell tags)\n    static addTag(event) {\n        const target = event.target;\n        const plusIcon = document.querySelector('.jp-codeSnippet-inputTag-plusIcon');\n        plusIcon.remove();\n        const newTagName = document.createElement('input');\n        target.parentElement.replaceChild(newTagName, target);\n        newTagName.onkeydown = Private.addTagOnKeyDown;\n        newTagName.onblur = Private.addTagOnBlur;\n        newTagName.focus();\n        return false;\n    }\n    static addTagOnKeyDown(event) {\n        const inputElement = event.target;\n        if (inputElement.value !== '' && event.key === 'Enter') {\n            // duplicate tag\n            if (Private.allSnippetTags.includes(inputElement.value)) {\n                alert('Duplicate Tag Name!');\n                return;\n            }\n            if (Private.allLangTags.includes(inputElement.value)) {\n                alert('This tag already exists in language tags!\\nIf you want to create this tag, lowercase the first letter.');\n                return;\n            }\n            event.preventDefault();\n            // create new tag\n            const tagList = document.querySelector('.jp-codeSnippet-inputTagList');\n            const tagElem = document.createElement('ul');\n            tagElem.className = `${CODE_SNIPPET_INPUT_TAG} tag applied-tag`;\n            const tagBtn = document.createElement('button');\n            tagBtn.innerText = inputElement.value;\n            tagBtn.onclick = Private.handleClick;\n            tagElem.appendChild(tagBtn);\n            tagList.insertBefore(tagElem, inputElement.parentElement);\n            // add check mark when tag gets selected\n            const iconContainer = checkIcon.element({\n                className: CODE_SNIPPET_INPUT_TAG_CHECK,\n                tag: 'span',\n                elementPosition: 'center',\n                height: '18px',\n                width: '18px',\n                marginLeft: '5px',\n                marginRight: '-3px',\n            });\n            const color = getComputedStyle(document.documentElement).getPropertyValue('--jp-ui-font-color1');\n            tagBtn.style.color = color;\n            tagElem.appendChild(iconContainer);\n            // add it to the selected tags\n            Private.selectedTags.push(tagBtn.innerText);\n            Private.allSnippetTags.push(tagBtn.innerText);\n            // reset InputElement\n            inputElement.blur();\n            event.stopPropagation();\n        }\n        else if (event.key === 'Escape') {\n            inputElement.blur();\n            event.stopPropagation();\n        }\n    }\n    static addTagOnBlur(event) {\n        const inputElement = event.target;\n        // add plusIcon\n        const plusIcon = addIcon.element({\n            tag: 'span',\n            className: CODE_SNIPPET_INPUTTAG_PLUS_ICON,\n            elementPosition: 'center',\n            height: '16px',\n            width: '16px',\n            marginLeft: '2px',\n        });\n        // change input to span\n        const newTagName = document.createElement('button');\n        newTagName.innerText = 'Add Tag';\n        newTagName.style.cursor = 'pointer';\n        inputElement.parentElement.replaceChild(newTagName, inputElement);\n        newTagName.parentElement.appendChild(plusIcon);\n        newTagName.onclick = Private.addTag;\n    }\n    static handleClick(event) {\n        const target = event.target;\n        const parent = target.parentElement;\n        if (parent.classList.contains('unapplied-tag')) {\n            Private.selectedTags.push(target.innerText);\n            parent.classList.replace('unapplied-tag', 'applied-tag');\n            const iconContainer = checkIcon.element({\n                className: CODE_SNIPPET_INPUT_TAG_CHECK,\n                tag: 'span',\n                elementPosition: 'center',\n                height: '18px',\n                width: '18px',\n                marginLeft: '5px',\n                marginRight: '-3px',\n            });\n            const color = getComputedStyle(document.documentElement).getPropertyValue('--jp-ui-font-color1');\n            target.style.color = color;\n            if (parent.children.length === 1) {\n                parent.appendChild(iconContainer);\n            }\n        }\n        else if (parent.classList.contains('applied-tag')) {\n            const idx = Private.selectedTags.indexOf(target.innerText);\n            Private.selectedTags.splice(idx, 1);\n            parent.classList.replace('applied-tag', 'unapplied-tag');\n            const color = getComputedStyle(document.documentElement).getPropertyValue('--jp-ui-font-color2');\n            target.style.color = color;\n            if (parent.children.length !== 1) {\n                // remove check icon\n                parent.removeChild(parent.children.item(1));\n            }\n        }\n        return false;\n    }\n}\nPrivate.selectedTags = [];\n","// Copyright (c) 2020, jupytercalpoly\n// Distributed under the terms of the BSD-3 Clause License.\nimport { LabIcon } from '@jupyterlab/ui-components';\nimport babelSVGstr from '../style/icon/language_icons/babel.svg';\nimport cSVGstr from '../style/icon/language_icons/c.svg';\nimport clojureSVGstr from '../style/icon/language_icons/clojure.svg';\nimport coconutSVGstr from '../style/icon/language_icons/coconut.svg';\nimport coffeescriptSVGstr from '../style/icon/language_icons/coffeescript.svg';\nimport cppSVGstr from '../style/icon/language_icons/cpp.svg';\nimport csharpSVGstr from '../style/icon/language_icons/csharp.svg';\nimport erlangSVGstr from '../style/icon/language_icons/erlang.svg';\nimport forthSVGstr from '../style/icon/language_icons/forth.svg';\nimport fortranSVGstr from '../style/icon/language_icons/fortran.svg';\nimport fsharpSVGstr from '../style/icon/language_icons/fsharp.svg';\nimport goSVGstr from '../style/icon/language_icons/go.svg';\nimport groovySVGstr from '../style/icon/language_icons/groovy.svg';\nimport haskellSVGstr from '../style/icon/language_icons/haskell.svg';\nimport javaSVGstr from '../style/icon/language_icons/java.svg';\nimport javascriptSVGstr from '../style/icon/language_icons/javascript.svg';\nimport juliaSVGstr from '../style/icon/language_icons/julia.svg';\nimport kotlinSVGstr from '../style/icon/language_icons/kotlin.svg';\nimport lispSVGstr from '../style/icon/language_icons/lisp.svg';\nimport livescriptSVGstr from '../style/icon/language_icons/livescript.svg';\nimport luaSVGstr from '../style/icon/language_icons/lua.svg';\nimport matlabSVGstr from '../style/icon/language_icons/matlab.svg';\nimport nodejsSVGstr from '../style/icon/language_icons/nodejs.svg';\nimport ocamlSVGstr from '../style/icon/language_icons/ocaml.svg';\nimport perlSVGstr from '../style/icon/language_icons/perl.svg';\nimport phpSVGstr from '../style/icon/language_icons/php.svg';\nimport processingSVGstr from '../style/icon/language_icons/processing.svg';\nimport prologSVGstr from '../style/icon/language_icons/prolog.svg';\nimport purescriptSVGstr from '../style/icon/language_icons/purescript.svg';\nimport qsharpSVGstr from '../style/icon/language_icons/qsharp.svg';\nimport rubySVGstr from '../style/icon/language_icons/ruby.svg';\nimport rustSVGstr from '../style/icon/language_icons/rust.svg';\nimport sasSVGstr from '../style/icon/language_icons/sas.svg';\nimport sbtSVGstr from '../style/icon/language_icons/sbt.svg';\nimport scalaSVGstr from '../style/icon/language_icons/scala.svg';\nimport schemeSVGstr from '../style/icon/language_icons/scheme.svg';\nimport typescriptSVGstr from '../style/icon/language_icons/typescript.svg';\nimport markdownSVGstr from '../style/icon/language_icons/markdown.svg';\nimport powershellSVGstr from '../style/icon/language_icons/powershell.svg';\n/**\n * List of languages supported by JupyterLab\n */\nexport const SUPPORTED_LANGUAGES = [\n    'Python',\n    'Java',\n    'R',\n    'Julia',\n    'Matlab',\n    'Octave',\n    'Scheme',\n    'Processing',\n    'Scala',\n    'Groovy',\n    'Agda',\n    'Fortran',\n    'Haskell',\n    'Ruby',\n    'TypeScript',\n    'JavaScript',\n    'CoffeeScript',\n    'LiveScript',\n    'C#',\n    'F#',\n    'Go',\n    'Galileo',\n    'Gfm',\n    'Erlang',\n    'PARI/GP',\n    'Aldor',\n    'OCaml',\n    'Forth',\n    'Perl',\n    'PHP',\n    'Scilab',\n    'bash',\n    'zsh',\n    'Clojure',\n    'Hy',\n    'Lua',\n    'PureScript',\n    'Q',\n    'Cryptol',\n    'C++',\n    'Xonsh',\n    'Prolog',\n    'Common Lisp',\n    'Maxima',\n    'C',\n    'Kotlin',\n    'Pike',\n    'NodeJS',\n    'Singular',\n    'TaQL',\n    'Coconut',\n    'Babel',\n    'Clojurescript',\n    'sbt',\n    'Guile',\n    'SAS',\n    'Stata',\n    'Racekt',\n    'SQL',\n    'HiveQL',\n    'Rust',\n    'Rascal',\n    'Q#',\n    'Markdown',\n    'Powershell',\n];\n/**\n * Language icons\n */\nexport const babelIcon = new LabIcon({\n    name: 'custom-ui-components:babel',\n    svgstr: babelSVGstr,\n});\nexport const javaIcon = new LabIcon({\n    name: 'custom-ui-components:java',\n    svgstr: javaSVGstr,\n});\nexport const juliaIcon = new LabIcon({\n    name: 'custom-ui-components:julia',\n    svgstr: juliaSVGstr,\n});\nexport const matlabIcon = new LabIcon({\n    name: 'custom-ui-components:matlab',\n    svgstr: matlabSVGstr,\n});\nexport const schemeIcon = new LabIcon({\n    name: 'custom-ui-components:scheme',\n    svgstr: schemeSVGstr,\n});\nexport const processingIcon = new LabIcon({\n    name: 'custom-ui-components:processing',\n    svgstr: processingSVGstr,\n});\nexport const scalaIcon = new LabIcon({\n    name: 'custom-ui-components:scala',\n    svgstr: scalaSVGstr,\n});\nexport const groovyIcon = new LabIcon({\n    name: 'custom-ui-components:groovy',\n    svgstr: groovySVGstr,\n});\nexport const fortranIcon = new LabIcon({\n    name: 'custom-ui-components:fortran',\n    svgstr: fortranSVGstr,\n});\nexport const haskellIcon = new LabIcon({\n    name: 'custom-ui-components:haskell',\n    svgstr: haskellSVGstr,\n});\nexport const rubyIcon = new LabIcon({\n    name: 'custom-ui-components:ruby',\n    svgstr: rubySVGstr,\n});\nexport const typescriptIcon = new LabIcon({\n    name: 'custom-ui-components:typescript',\n    svgstr: typescriptSVGstr,\n});\nexport const javascriptIcon = new LabIcon({\n    name: 'custom-ui-components:javascript',\n    svgstr: javascriptSVGstr,\n});\nexport const coffeescriptIcon = new LabIcon({\n    name: 'custom-ui-components:coffeescript',\n    svgstr: coffeescriptSVGstr,\n});\nexport const livescriptIcon = new LabIcon({\n    name: 'custom-ui-components:livescript',\n    svgstr: livescriptSVGstr,\n});\nexport const csharpIcon = new LabIcon({\n    name: 'custom-ui-components:csharp',\n    svgstr: csharpSVGstr,\n});\nexport const fsharpIcon = new LabIcon({\n    name: 'custom-ui-components:fsharp',\n    svgstr: fsharpSVGstr,\n});\nexport const goIcon = new LabIcon({\n    name: 'custom-ui-components:go',\n    svgstr: goSVGstr,\n});\nexport const erlangIcon = new LabIcon({\n    name: 'custom-ui-components:erlang',\n    svgstr: erlangSVGstr,\n});\nexport const ocamlIcon = new LabIcon({\n    name: 'custom-ui-components:ocaml',\n    svgstr: ocamlSVGstr,\n});\nexport const forthIcon = new LabIcon({\n    name: 'custom-ui-components:forth',\n    svgstr: forthSVGstr,\n});\nexport const perlIcon = new LabIcon({\n    name: 'custom-ui-components:perl',\n    svgstr: perlSVGstr,\n});\nexport const phpIcon = new LabIcon({\n    name: 'custom-ui-components:php',\n    svgstr: phpSVGstr,\n});\nexport const clojureIcon = new LabIcon({\n    name: 'custom-ui-components:clojure',\n    svgstr: clojureSVGstr,\n});\nexport const luaIcon = new LabIcon({\n    name: 'custom-ui-components:lua',\n    svgstr: luaSVGstr,\n});\nexport const purescriptIcon = new LabIcon({\n    name: 'custom-ui-components:purescript',\n    svgstr: purescriptSVGstr,\n});\nexport const cppIcon = new LabIcon({\n    name: 'custom-ui-components:cpp',\n    svgstr: cppSVGstr,\n});\nexport const prologIcon = new LabIcon({\n    name: 'custom-ui-components:prolog',\n    svgstr: prologSVGstr,\n});\nexport const lispIcon = new LabIcon({\n    name: 'custom-ui-components:lisp',\n    svgstr: lispSVGstr,\n});\nexport const cIcon = new LabIcon({\n    name: 'custom-ui-components:c',\n    svgstr: cSVGstr,\n});\nexport const kotlinIcon = new LabIcon({\n    name: 'custom-ui-components:kotlin',\n    svgstr: kotlinSVGstr,\n});\nexport const nodejsIcon = new LabIcon({\n    name: 'custom-ui-components:nodejs',\n    svgstr: nodejsSVGstr,\n});\nexport const sasIcon = new LabIcon({\n    name: 'custom-ui-components:sas',\n    svgstr: sasSVGstr,\n});\nexport const coconutIcon = new LabIcon({\n    name: 'custom-ui-components:coconut',\n    svgstr: coconutSVGstr,\n});\nexport const sbtIcon = new LabIcon({\n    name: 'custom-ui-components:sbt',\n    svgstr: sbtSVGstr,\n});\nexport const rustIcon = new LabIcon({\n    name: 'custom-ui-components:rust',\n    svgstr: rustSVGstr,\n});\nexport const qsharpIcon = new LabIcon({\n    name: 'custom-ui-components:qsharp',\n    svgstr: qsharpSVGstr,\n});\nexport const markdownIcon = new LabIcon({\n    name: 'custom-ui-components:markdown',\n    svgstr: markdownSVGstr,\n});\nexport const powershellIcon = new LabIcon({\n    name: 'custom-ui-components:powershell',\n    svgstr: powershellSVGstr,\n});\n","// Copyright (c) 2020, jupytercalpoly\n// Distributed under the terms of the BSD-3 Clause License.\nimport { WidgetTracker, ReactWidget } from '@jupyterlab/apputils';\nimport { Widget, PanelLayout, Panel } from '@lumino/widgets';\nimport { MessageLoop } from '@lumino/messaging';\nimport { PromiseDelegate } from '@lumino/coreutils';\nimport { ArrayExt } from '@lumino/algorithm';\n/**\n * The class name for options box\n */\nconst OPTIONS_CLASS = 'jp-codeSnippet-options';\nconst OPTIONS_CONTENT = 'jp-codeSnippet-options-content';\nconst OPTIONS_BODY = 'jp-codeSnippet-options-body';\n/**\n * Create and show a code snippet options.\n *\n * @param options - The code snippet options setup options.\n *\n * @returns A promise that resolves with whether the code snippet options was accepted.\n */\nexport function showMoreOptions(options = {}) {\n    const optionsMessage = new OptionsMessage(options);\n    return optionsMessage.launch();\n}\n/**\n * A widget used to show options message.\n */\nexport class OptionsMessage extends Widget {\n    constructor(options = {}) {\n        super();\n        this.addClass(OPTIONS_CLASS);\n        const renderer = OptionsMessage.defaultRenderer;\n        this._host = options.host || document.body;\n        const layout = (this.layout = new PanelLayout());\n        const content = new Panel();\n        content.addClass(OPTIONS_CONTENT);\n        layout.addWidget(content);\n        const body = renderer.createBody(options.body);\n        content.addWidget(body);\n        if (OptionsMessage.tracker.size > 0) {\n            const previous = OptionsMessage.tracker.currentWidget;\n            previous.reject();\n            OptionsMessage.tracker.dispose();\n        }\n        void OptionsMessage.tracker.add(this);\n    }\n    /**\n     * Launch the code snippet options as a modal window.\n     *\n     * @returns a promise that resolves with the result of the code snippet options.\n     */\n    launch() {\n        // Return the existing code snippet options if already open.\n        if (this._promise) {\n            return this._promise.promise;\n        }\n        const promise = (this._promise = new PromiseDelegate());\n        const promises = Promise.all(Private.launchQueue);\n        Private.launchQueue.push(this._promise.promise);\n        return promises.then(() => {\n            Widget.attach(this, this._host);\n            return promise.promise;\n        });\n    }\n    /**\n     * Handle the DOM events for the directory listing.\n     *\n     * @param event - The DOM event sent to the widget.\n     *\n     * #### Notes\n     * This method implements the DOM `EventListener` interface and is\n     * called in response to events on the panel's DOM node. It should\n     * not be called directly by user code.\n     */\n    handleEvent(event) {\n        switch (event.type) {\n            case 'click':\n                this._evtClick(event);\n                break;\n            case 'contextmenu':\n                this._evtClick(event);\n                break;\n            default:\n                break;\n        }\n    }\n    /**\n     * Handle the `'click'` event for a code snippet options button.\n     *\n     * @param event - The DOM event sent to the widget\n     */\n    _evtClick(event) {\n        const content = this.node.getElementsByClassName(OPTIONS_CONTENT)[0];\n        if (!content.contains(event.target)) {\n            event.stopPropagation();\n            event.preventDefault();\n            this.reject();\n        }\n    }\n    /**\n     * Reject the current code snippet options with a default reject value.\n     *\n     * #### Notes\n     * Will be a no-op if the code snippet options is not shown.\n     */\n    reject() {\n        if (!this._promise) {\n            return;\n        }\n        this._resolve();\n    }\n    /**\n     * Resolve a button item.\n     */\n    _resolve() {\n        // Prevent loopback.\n        const promise = this._promise;\n        if (!promise) {\n            this.dispose();\n            return;\n        }\n        this._promise = null;\n        ArrayExt.removeFirstOf(Private.launchQueue, promise.promise);\n        this.dispose();\n        promise.resolve();\n    }\n    /**\n     * Dispose of the resources used by the code snippet options.\n     */\n    dispose() {\n        const promise = this._promise;\n        if (promise) {\n            this._promise = null;\n            promise.reject(void 0);\n            ArrayExt.removeFirstOf(Private.launchQueue, promise.promise);\n        }\n        super.dispose();\n    }\n    /**\n     *  A message handler invoked on an `'after-attach'` message.\n     */\n    onAfterAttach(msg) {\n        const node = this.node;\n        node.addEventListener('click', this, true);\n        node.addEventListener('contextmenu', this, true);\n    }\n    /**\n     *  A message handler invoked on an `'after-detach'` message.\n     */\n    onAfterDetach(msg) {\n        const node = this.node;\n        node.removeEventListener('click', this, true);\n        node.removeEventListener('contextmenu', this, true);\n    }\n}\n(function (OptionsMessage) {\n    class Renderer {\n        /**\n         * Create the body of the code snippet options.\n         *\n         * @param value - The input value for the body.\n         *\n         * @returns A widget for the body.\n         */\n        createBody(value) {\n            let body;\n            if (typeof value === 'string') {\n                body = new Widget({ node: document.createElement('span') });\n                body.node.textContent = value;\n            }\n            else if (value instanceof Widget) {\n                body = value;\n            }\n            else {\n                body = ReactWidget.create(value);\n                // Immediately update the body even though it has not yet attached in\n                // order to trigger a render of the DOM nodes from the React element.\n                MessageLoop.sendMessage(body, Widget.Msg.UpdateRequest);\n            }\n            body.addClass(OPTIONS_BODY);\n            return body;\n        }\n    }\n    OptionsMessage.Renderer = Renderer;\n    /**\n     * The default renderer instance.\n     */\n    OptionsMessage.defaultRenderer = new Renderer();\n    /**\n     * The code snippet options widget tracker.\n     */\n    OptionsMessage.tracker = new WidgetTracker({\n        namespace: '@jupyterlab/code_snippet:OptionsWidget',\n    });\n})(OptionsMessage || (OptionsMessage = {}));\n/**\n * The namespace for module private data.\n */\nvar Private;\n(function (Private) {\n    /**\n     * The queue for launching code snippet optionss.\n     */\n    Private.launchQueue = [];\n})(Private || (Private = {}));\n","// Copyright (c) 2020, jupytercalpoly\n// Distributed under the terms of the BSD-3 Clause License.\n// import { WidgetTracker, ReactWidget } from '@jupyterlab/apputils';\nimport { Dialog } from '@jupyterlab/apputils';\nimport { Widget } from '@lumino/widgets';\nimport checkSVGstr from '../style/icon/jupyter_checkmark.svg';\n/**\n * The class name for message\n */\n// const CONFIRM_CLASS = 'jp-codeSnippet-confirm';\nconst CONFIRM_CONTENT = 'jp-codeSnippet-Message-content';\nconst CONFIRM_BODY = 'jp-codeSnippet-Message-body';\nconst CODE_SNIPPET_CONFIRM_TEXT = 'jp-codeSnippet-confirm-text';\n/**\n * Create and show a dialog.\n *\n * @param options - The dialog setup options.\n *\n * @returns A promise that resolves with whether the dialog was accepted.\n */\nexport function showMessage(type) {\n    const confirmMessage = new CodeSnippetMessage({\n        body: new MessageHandler(type),\n        buttons: [],\n    });\n    return confirmMessage.launch();\n}\n/**\n * A widget used to show message.\n */\nexport class CodeSnippetMessage extends Dialog {\n    constructor(options = {}) {\n        super(options);\n        this.children().next().addClass(CONFIRM_CONTENT);\n    }\n    onAfterAttach(msg) {\n        const node = this.node;\n        node.addEventListener('click', this, true);\n        document.addEventListener('keydown', this, false);\n    }\n    /**\n     *  A message handler invoked on an `'after-detach'` message.\n     */\n    onAfterDetach(msg) {\n        const node = this.node;\n        node.removeEventListener('click', this, true);\n        document.removeEventListener('keydown', this, false);\n    }\n    handleEvent(event) {\n        switch (event.type) {\n            case 'keydown':\n                this._evtKeydown(event);\n                break;\n            case 'click':\n                this._evtClick(event);\n                break;\n        }\n    }\n    _evtKeydown(event) {\n        // Check for escape key\n        switch (event.key) {\n            case 'Escape':\n                event.stopPropagation();\n                event.preventDefault();\n                this.reject();\n                break;\n        }\n    }\n}\nclass MessageHandler extends Widget {\n    constructor(type) {\n        super({ node: Private.createMessageNode(type) });\n        this.addClass(CONFIRM_BODY);\n    }\n}\n/**\n * The namespace for module private data.\n */\nvar Private;\n(function (Private) {\n    // create a confirm message when new snippet is created successfully\n    function createMessageNode(type) {\n        const body = document.createElement('div');\n        body.innerHTML = checkSVGstr;\n        const messageContainer = document.createElement('div');\n        messageContainer.className = CODE_SNIPPET_CONFIRM_TEXT;\n        const message = document.createElement('text');\n        if (type === 'confirm') {\n            message.textContent = 'Saved as Snippet!';\n        }\n        else if (type === 'copy') {\n            message.textContent = 'Saved to Clipboard!';\n        }\n        else if (type === 'export') {\n            message.textContent = 'Exported the Snippet!';\n        }\n        messageContainer.appendChild(message);\n        body.append(messageContainer);\n        return body;\n    }\n    Private.createMessageNode = createMessageNode;\n})(Private || (Private = {}));\n","// Copyright (c) 2020, jupytercalpoly\n// Distributed under the terms of the BSD-3 Clause License.\nimport { WidgetTracker, ReactWidget } from '@jupyterlab/apputils';\nimport { CodeEditor } from '@jupyterlab/codeeditor';\nimport { Widget, PanelLayout, Panel } from '@lumino/widgets';\nimport { MessageLoop } from '@lumino/messaging';\nimport { PromiseDelegate } from '@lumino/coreutils';\nimport { ArrayExt } from '@lumino/algorithm';\nimport { CodeSnippetService } from './CodeSnippetService';\n/**\n * The class name for preview box.\n */\nconst PREVIEW_CLASS = 'jp-codeSnippet-preview';\nconst PREVIEW_CONTENT = 'jp-codeSnippet-preview-content';\nconst PREVIEW_BODY = 'jp-codeSnippet-preview-body';\n/**\n * Create and show a preview.\n *\n * @param options - The preview setup options.\n *\n */\nexport function showPreview(options = {}, editorServices) {\n    //Insert check method to see if the preview is already open\n    const preview = new Preview(options, editorServices);\n    if (preview.ready === false) {\n        return;\n    }\n    return preview.launch();\n}\n/**\n * A widget used to show preview\n */\nexport class Preview extends Widget {\n    constructor(options = {}, editorServices) {\n        super();\n        this.ready = true;\n        this._title = options.title;\n        this._id = options.id;\n        this.codeSnippet = options.codeSnippet;\n        this.editorServices = editorServices;\n        this.codeSnippetService = CodeSnippetService.getCodeSnippetService();\n        this.addClass(PREVIEW_CLASS);\n        const layout = (this.layout = new PanelLayout());\n        const content = new Panel();\n        content.addClass(PREVIEW_CONTENT);\n        content.id = PREVIEW_CONTENT + this._id;\n        layout.addWidget(content);\n        if (Preview.tracker.size > 0) {\n            const previous = Preview.tracker.currentWidget;\n            previous.reject();\n            Preview.tracker.dispose();\n        }\n        if (this.ready === true) {\n            void Preview.tracker.add(this);\n        }\n    }\n    /**\n     * Launch the preview as a modal window.\n     */\n    launch() {\n        // Return the existing preview if already open.\n        if (this._promise) {\n            return this._promise.promise;\n        }\n        const promise = (this._promise = new PromiseDelegate());\n        const promises = Promise.all(Private.launchQueue);\n        Private.launchQueue.push(this._promise.promise);\n        return promises.then(() => {\n            Widget.attach(this, document.getElementById('jp-main-dock-panel'));\n            return promise.promise;\n        });\n    }\n    /**\n     * Reject the current preview with a default reject value.\n     *\n     * #### Notes\n     * Will be a no-op if the preview is not shown.\n     */\n    reject() {\n        if (!this._promise) {\n            return;\n        }\n        this._resolve();\n    }\n    /**\n     * Resolve a button item.\n     */\n    _resolve() {\n        // Prevent loopback.\n        const promise = this._promise;\n        if (!promise) {\n            this.dispose();\n            return;\n        }\n        this._promise = null;\n        ArrayExt.removeFirstOf(Private.launchQueue, promise.promise);\n        this.dispose();\n        promise.resolve();\n    }\n    /**\n     * Dispose of the resources used by the preview.\n     */\n    dispose() {\n        const promise = this._promise;\n        if (promise) {\n            this._promise = null;\n            promise.reject(void 0);\n            ArrayExt.removeFirstOf(Private.launchQueue, promise.promise);\n        }\n        super.dispose();\n    }\n    /**\n     *  A message handler invoked on an `'after-attach'` message.\n     */\n    onAfterAttach(msg) {\n        super.onAfterAttach(msg);\n        this._hasRefreshedSinceAttach = false;\n        if (this.isVisible) {\n            this.update();\n        }\n    }\n    onAfterShow(msg) {\n        if (!this._hasRefreshedSinceAttach) {\n            this.update();\n        }\n    }\n    onUpdateRequest(msg) {\n        super.onUpdateRequest(msg);\n        if (!this.editor && document.getElementById(PREVIEW_CONTENT + this._id)) {\n            const editorFactory = this.editorServices.factoryService.newInlineEditor;\n            const getMimeTypeByLanguage = this.editorServices.mimeTypeService.getMimeTypeByLanguage;\n            let previewFontSize = this.codeSnippetService.settings.get('snippetPreviewFontSize').composite;\n            if (this.codeSnippetService.settings.get('snippetPreviewFontSize').user !==\n                undefined) {\n                previewFontSize = this.codeSnippetService.settings.get('snippetPreviewFontSize').user;\n            }\n            this.editor = editorFactory({\n                host: document.getElementById(PREVIEW_CONTENT + this._id),\n                config: { readOnly: true, fontSize: previewFontSize },\n                model: new CodeEditor.Model({\n                    value: this.codeSnippet.code,\n                    mimeType: getMimeTypeByLanguage({\n                        name: this.codeSnippet.language,\n                        codemirror_mode: this.codeSnippet.language,\n                    }),\n                }),\n            });\n        }\n        if (this.isVisible) {\n            this._hasRefreshedSinceAttach = true;\n            this.editor.refresh();\n        }\n    }\n}\n(function (Preview) {\n    class Renderer {\n        /**\n         * Create the body of the preview.\n         *\n         * @param value - The input value for the body.\n         *\n         * @returns A widget for the body.\n         */\n        createBody(value) {\n            let body;\n            if (typeof value === 'string') {\n                body = new Widget({ node: document.createElement('span') });\n                body.node.textContent = value;\n            }\n            else if (value instanceof Widget) {\n                body = value;\n            }\n            else {\n                body = ReactWidget.create(value);\n                // Immediately update the body even though it has not yet attached in\n                // order to trigger a render of the DOM nodes from the React element.\n                MessageLoop.sendMessage(body, Widget.Msg.UpdateRequest);\n            }\n            body.addClass(PREVIEW_BODY);\n            return body;\n        }\n    }\n    Preview.Renderer = Renderer;\n    /**\n     * The default renderer instance.\n     */\n    Preview.defaultRenderer = new Renderer();\n    /**\n     * The preview widget tracker.\n     */\n    Preview.tracker = new WidgetTracker({\n        namespace: '@jupyterlab/code_snippet:preview',\n    });\n})(Preview || (Preview = {}));\n/**\n * The namespace for module private data.\n */\nvar Private;\n(function (Private) {\n    /**\n     * The queue for launching previews.\n     */\n    Private.launchQueue = [];\n})(Private || (Private = {}));\n","import { JSONExt } from '@lumino/coreutils';\nimport { CodeSnippetWidget } from './CodeSnippetWidget';\nexport class CodeSnippetService {\n    constructor(settings, app) {\n        this.settingManager = settings;\n        // when user changes the snippets using settingsEditor\n        this.settingManager.changed.connect(async (plugin) => {\n            const newCodeSnippetList = plugin.get('snippets').user;\n            if (!JSONExt.deepEqual(newCodeSnippetList, this.codeSnippetList)) {\n                this.codeSnippetList = this.convertToICodeSnippetList(newCodeSnippetList);\n                const leftWidgets = app.shell.widgets('left').iter();\n                let current = leftWidgets.next();\n                while (current) {\n                    if (current instanceof CodeSnippetWidget) {\n                        current.updateCodeSnippetWidget();\n                        break;\n                    }\n                    current = leftWidgets.next();\n                }\n                // order code snippet and sync it with setting\n                this.orderSnippets();\n                await plugin\n                    .set('snippets', this.codeSnippetList)\n                    .catch((e) => {\n                    console.log('Error in syncing orders of snippets with those in settings');\n                    console.log(e);\n                });\n            }\n        });\n        // load user's saved snippets\n        if (this.settingManager.get('snippets').user) {\n            const userSnippets = this.convertToICodeSnippetList(this.settingManager.get('snippets').user);\n            this.codeSnippetList = userSnippets;\n        }\n        // set default preview font size\n        if (this.settingManager.get('snippetPreviewFontSize').user === undefined) {\n            this.settingManager.set('snippetPreviewFontSize', this.settingManager.default('snippetPreviewFontSize'));\n        }\n    }\n    convertToICodeSnippetList(snippets) {\n        const snippetList = [];\n        snippets.forEach((snippet) => {\n            const newSnippet = snippet;\n            snippetList.push(newSnippet);\n        });\n        return snippetList;\n    }\n    static init(settings, app) {\n        if (!this.codeSnippetService) {\n            this.codeSnippetService = new CodeSnippetService(settings, app);\n        }\n    }\n    static getCodeSnippetService() {\n        return this.codeSnippetService;\n    }\n    get settings() {\n        return this.settingManager;\n    }\n    get snippets() {\n        return this.codeSnippetList;\n    }\n    getSnippetByName(snippetName) {\n        return this.codeSnippetList.filter((snippet) => snippet.name.toLowerCase() === snippetName.toLowerCase());\n    }\n    async addSnippet(snippet) {\n        const id = snippet.id;\n        this.codeSnippetList.splice(id, 0, snippet);\n        const numSnippets = this.codeSnippetList.length;\n        // update id's of snippets.\n        let i = id + 1;\n        for (; i < numSnippets; i++) {\n            this.codeSnippetList[i].id += 1;\n        }\n        await this.settingManager\n            .set('snippets', this.codeSnippetList)\n            .catch((_) => {\n            return false;\n        });\n        return true;\n    }\n    async deleteSnippet(id) {\n        let numSnippets = this.codeSnippetList.length;\n        // should never satisfy this condition\n        if (id >= numSnippets) {\n            console.log('error in codeSnippetService');\n        }\n        if (id === numSnippets - 1) {\n            this.codeSnippetList.pop();\n        }\n        else {\n            this.codeSnippetList.splice(id, 1);\n            numSnippets = this.codeSnippetList.length;\n            let i = id;\n            for (; i < numSnippets; i++) {\n                this.codeSnippetList[i].id -= 1;\n            }\n        }\n        await this.settingManager\n            .set('snippets', this.codeSnippetList)\n            .catch((_) => {\n            return false;\n        });\n        return true;\n    }\n    async renameSnippet(oldName, newName) {\n        for (const snippet of this.codeSnippetList) {\n            if (snippet.name === oldName) {\n                snippet.name = newName;\n                break;\n            }\n        }\n        await this.settingManager\n            .set('snippets', this.codeSnippetList)\n            .catch((_) => {\n            return false;\n        });\n        return true;\n    }\n    duplicateNameExists(newName) {\n        for (const snippet of this.codeSnippetList) {\n            if (snippet.name.toLowerCase() === newName.toLowerCase()) {\n                return true;\n            }\n        }\n        return false;\n    }\n    async modifyExistingSnippet(oldName, newSnippet) {\n        for (const snippet of this.codeSnippetList) {\n            if (snippet.name.toLowerCase() === oldName.toLowerCase()) {\n                this.codeSnippetList.splice(snippet.id, 1, newSnippet);\n                break;\n            }\n        }\n        await this.settingManager\n            .set('snippets', this.codeSnippetList)\n            .catch((_) => {\n            return false;\n        });\n        return true;\n    }\n    async moveSnippet(fromIdx, toIdx) {\n        if (toIdx > fromIdx) {\n            toIdx = toIdx - 1;\n        }\n        if (toIdx === fromIdx) {\n            return;\n        }\n        const snippetToMove = this.codeSnippetList[fromIdx];\n        this.deleteSnippet(fromIdx).then((res) => {\n            if (!res) {\n                console.log('Error in moving snippet(delete)');\n                return false;\n            }\n        });\n        snippetToMove.id = toIdx;\n        this.addSnippet(snippetToMove).then((res) => {\n            if (!res) {\n                console.log('Error in moving snippet(add)');\n                return false;\n            }\n        });\n        await this.settingManager\n            .set('snippets', this.codeSnippetList)\n            .catch((_) => {\n            return false;\n        });\n        return true;\n    }\n    // order snippets just in case when it gets shared between users\n    async orderSnippets() {\n        this.codeSnippetList.sort((a, b) => a.id - b.id);\n        this.codeSnippetList.forEach((snippet, i) => (snippet.id = i));\n        await this.settingManager\n            .set('snippets', this.codeSnippetList)\n            .catch((_) => {\n            return false;\n        });\n        return true;\n    }\n}\n","import { showDialog, Dialog } from '@jupyterlab/apputils';\nimport { SUPPORTED_LANGUAGES } from './CodeSnippetLanguages';\n/**\n * Test whether user typed in all required inputs.\n */\nexport function validateInputs(name, description, language) {\n    let status = true;\n    let message = '';\n    if (name === '') {\n        message += 'Name must be filled out\\n';\n        status = false;\n    }\n    if (language === '') {\n        message += 'Language must be filled out';\n        status = false;\n    }\n    if (!SUPPORTED_LANGUAGES.includes(language)) {\n        message += 'Language must be one of the options';\n        status = false;\n    }\n    if (status === false) {\n        alert(message);\n    }\n    return status;\n}\n/**\n * Rename a file, warning for overwriting another.\n */\nexport async function saveOverWriteFile(codeSnippetManager, oldSnippet, newSnippet) {\n    const newName = newSnippet.name;\n    return await shouldOverwrite(newName).then((res) => {\n        if (res) {\n            newSnippet.id = oldSnippet.id;\n            codeSnippetManager.deleteSnippet(oldSnippet.id).then((res) => {\n                if (!res) {\n                    console.log('Error in overwriting a snippet (delete)');\n                    return false;\n                }\n            });\n            codeSnippetManager.addSnippet(newSnippet).then((res) => {\n                if (!res) {\n                    console.log('Error in overwriting a snippet (add)');\n                    return false;\n                }\n            });\n            return true;\n        }\n    });\n}\n/**\n * Ask the user whether to overwrite a file.\n */\nasync function shouldOverwrite(newName) {\n    const options = {\n        title: 'Overwrite code snippet?',\n        body: `\"${newName}\" already exists, overwrite?`,\n        buttons: [Dialog.cancelButton(), Dialog.warnButton({ label: 'Overwrite' })],\n    };\n    return showDialog(options).then((result) => {\n        return result.button.accept;\n    });\n}\n","// Copyright (c) 2020, jupytercalpoly\n// Distributed under the terms of the BSD-3 Clause License.\n// Some lines of code are from Elyra Code Snippet.\n/*\n * Copyright 2018-2020 IBM Corporation\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions a* limitations under the License.\n */\nimport { ReactWidget, UseSignal } from '@jupyterlab/apputils';\nimport { Signal } from '@lumino/signaling';\nimport { CodeSnippetService } from './CodeSnippetService';\nimport { CodeSnippetDisplay } from './CodeSnippetDisplay';\nimport { CodeSnippetInputDialog } from './CodeSnippetInputDialog';\nimport React from 'react';\n/**\n * A class used to indicate a snippet item.\n */\nconst CODE_SNIPPET_ITEM = 'jp-codeSnippet-item';\n/**\n * The mimetype used for Jupyter cell data.\n */\nconst JUPYTER_CELL_MIME = 'application/vnd.jupyter.cells';\n/**\n * A class used to indicate a drop target.\n */\nconst DROP_TARGET_CLASS = 'jp-codeSnippet-dropTarget';\nconst CODE_SNIPPET_EDITOR = 'jp-codeSnippet-editor';\nconst CODE_SNIPPET_DRAG_HOVER = 'jp-codeSnippet-drag-hover';\nconst commands = {\n    OPEN_CODE_SNIPPET_EDITOR: `${CODE_SNIPPET_EDITOR}:open`,\n};\n/**\n * A widget for Code Snippets.\n */\nexport class CodeSnippetWidget extends ReactWidget {\n    constructor(getCurrentWidget, app, editorServices) {\n        super();\n        this.app = app;\n        this.editorServices = editorServices;\n        this.getCurrentWidget = getCurrentWidget;\n        this.renderCodeSnippetsSignal = new Signal(this);\n        this.codeSnippetManager = CodeSnippetService.getCodeSnippetService();\n        this.moveCodeSnippet = this.moveCodeSnippet.bind(this);\n        this.openCodeSnippetEditor = this.openCodeSnippetEditor.bind(this);\n        this.updateCodeSnippetWidget = this.updateCodeSnippetWidget.bind(this);\n        this.node.setAttribute('data-lm-dragscroll', 'true');\n    }\n    updateCodeSnippetWidget() {\n        if (this.codeSnippetManager) {\n            const newSnippets = this.codeSnippetManager.snippets;\n            newSnippets && this.renderCodeSnippetsSignal.emit(newSnippets);\n        }\n    }\n    onAfterShow(msg) {\n        this.updateCodeSnippetWidget();\n    }\n    openCodeSnippetEditor(args) {\n        this.app.commands.execute(commands.OPEN_CODE_SNIPPET_EDITOR, args);\n    }\n    /**\n     * Handle the DOM events for the widget.\n     *\n     * @param event - The DOM event sent to the widget.\n     *\n     * #### Notes\n     * This method implements the DOM `EventListener` interface and is\n     * called in response to events on the notebook panel's node. It should\n     * not be called directly by user code.\n     */\n    handleEvent(event) {\n        switch (event.type) {\n            case 'lm-dragenter':\n                this._evtDragEnter(event);\n                break;\n            case 'lm-dragleave':\n                this._evtDragLeave(event);\n                break;\n            case 'lm-dragover':\n                this._evtDragOver(event);\n                break;\n            case 'lm-drop':\n                this._evtDrop(event);\n                break;\n            default:\n                break;\n        }\n    }\n    /**\n     * A message handler invoked on an `'after-attach'` message.\n     * @param msg\n     */\n    onAfterAttach(msg) {\n        super.onAfterAttach(msg);\n        const node = this.node;\n        node.addEventListener('lm-dragenter', this);\n        node.addEventListener('lm-dragleave', this);\n        node.addEventListener('lm-dragover', this);\n        node.addEventListener('lm-drop', this);\n    }\n    /**\n     * Handle `before-detach` messages for the widget.\n     * @param msg\n     */\n    onBeforeDetach(msg) {\n        const node = this.node;\n        node.removeEventListener('lm-dragenter', this);\n        node.removeEventListener('lm-dragleave', this);\n        node.removeEventListener('lm-dragover', this);\n        node.removeEventListener('lm-drop', this);\n    }\n    /**\n     * Find the snippet containing the target html element.\n     *\n     * #### Notes\n     * Returns undefined if the cell is not found.\n     */\n    _findSnippet(node) {\n        // Trace up the DOM hierarchy to find the root cell node.\n        // Then find the corresponding child and select it.\n        let n = node;\n        while (n && n !== this.node) {\n            if (n.classList.contains(CODE_SNIPPET_ITEM)) {\n                return n;\n            }\n            n = n.parentElement;\n        }\n        return undefined;\n    }\n    /**\n     * Handle the `'lm-dragenter'` event for the widget.\n     */\n    _evtDragEnter(event) {\n        if (!event.mimeData.hasData(JUPYTER_CELL_MIME)) {\n            return;\n        }\n        event.preventDefault();\n        event.stopPropagation();\n        const target = event.target;\n        if (!event.mimeData.hasData('snippet/id')) {\n            const snippetId = target.id.slice(CODE_SNIPPET_DRAG_HOVER.length);\n            event.mimeData.setData('snippet/id', parseInt(snippetId));\n        }\n        const snippet = this._findSnippet(target);\n        if (snippet === undefined) {\n            return;\n        }\n        const snippetNode = snippet;\n        snippetNode.classList.add(DROP_TARGET_CLASS);\n    }\n    /**\n     * Handle the `'lm-dragleave'` event for the widget.\n     */\n    _evtDragLeave(event) {\n        if (!event.mimeData.hasData(JUPYTER_CELL_MIME)) {\n            return;\n        }\n        event.preventDefault();\n        event.stopPropagation();\n        const elements = this.node.getElementsByClassName(DROP_TARGET_CLASS);\n        if (elements.length) {\n            elements[0].classList.remove(DROP_TARGET_CLASS);\n        }\n    }\n    /**\n     * Handle the `'lm-dragover'` event for the widget.\n     */\n    _evtDragOver(event) {\n        const data = this.findCellData(event.mimeData);\n        if (data === undefined) {\n            return;\n        }\n        event.preventDefault();\n        event.stopPropagation();\n        event.dropAction = event.proposedAction;\n        const elements = this.node.getElementsByClassName(DROP_TARGET_CLASS);\n        if (elements.length) {\n            elements[0].classList.remove(DROP_TARGET_CLASS);\n        }\n        const target = event.target;\n        const snippet = this._findSnippet(target);\n        if (snippet === undefined) {\n            return;\n        }\n        const snippetNode = snippet;\n        snippetNode.classList.add(DROP_TARGET_CLASS);\n    }\n    findCellData(mime) {\n        const code = mime.getData('text/plain');\n        return code;\n    }\n    /**\n     * Handle the `'lm-drop'` event for the widget.\n     */\n    async _evtDrop(event) {\n        const data = this.findCellData(event.mimeData);\n        if (data === undefined) {\n            return;\n        }\n        event.preventDefault();\n        event.stopPropagation();\n        if (event.proposedAction === 'none') {\n            event.dropAction = 'none';\n            return;\n        }\n        let target = event.target;\n        while (target && target.parentElement) {\n            if (target.classList.contains(DROP_TARGET_CLASS)) {\n                target.classList.remove(DROP_TARGET_CLASS);\n                break;\n            }\n            target = target.parentElement;\n        }\n        const snippet = this._findSnippet(target);\n        // if target is CodeSnippetWidget, then snippet is undefined\n        let idx;\n        if (snippet !== undefined) {\n            idx = parseInt(snippet.id.slice(CODE_SNIPPET_ITEM.length));\n        }\n        else {\n            idx = this.codeSnippetManager.snippets.length;\n        }\n        /**\n         * moving snippets inside the snippet panel\n         */\n        const source = event.source;\n        if (source instanceof CodeSnippetDisplay) {\n            event.dropAction = 'move';\n            if (event.mimeData.hasData('snippet/id')) {\n                const srcIdx = event.mimeData.getData('snippet/id');\n                this.moveCodeSnippet(srcIdx, idx);\n            }\n        }\n        else {\n            const notebook = event.mimeData.getData('internal:cells')[0].parent;\n            const language = notebook.model.defaultKernelLanguage;\n            // Handle the case where we are copying cells\n            event.dropAction = 'copy';\n            CodeSnippetInputDialog(this, data, language, idx);\n        }\n        // Reorder snippet just to make sure id's are in order.\n        this.codeSnippetManager.orderSnippets().then((res) => {\n            if (!res) {\n                console.log('Error in ordering snippets');\n                return;\n            }\n        });\n    }\n    // move code snippet within code snippet explorer\n    moveCodeSnippet(srcIdx, targetIdx) {\n        this.codeSnippetManager\n            .moveSnippet(srcIdx, targetIdx)\n            .then((res) => {\n            if (!res) {\n                console.log('Error in moving snippet');\n                return;\n            }\n        });\n        const newSnippets = this.codeSnippetManager.snippets;\n        this.renderCodeSnippetsSignal.emit(newSnippets);\n    }\n    render() {\n        return (React.createElement(UseSignal, { signal: this.renderCodeSnippetsSignal, initialArgs: [] }, (_, codeSnippets) => (React.createElement(\"div\", null,\n            React.createElement(CodeSnippetDisplay, { codeSnippets: codeSnippets, codeSnippetManager: this.codeSnippetManager, app: this.app, getCurrentWidget: this.getCurrentWidget, openCodeSnippetEditor: this.openCodeSnippetEditor, editorServices: this.editorServices, updateCodeSnippetWidget: this.updateCodeSnippetWidget })))));\n    }\n}\n","// Copyright (c) 2020, jupytercalpoly\n// Distributed under the terms of the BSD-3 Clause License.\n// Some lines of code are from Elyra Code Snippet.\n/*\n * Copyright 2018-2020 IBM Corporation\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions a* limitations under the License.\n */\nimport { ILayoutRestorer, } from '@jupyterlab/application';\nimport { ICommandPalette, WidgetTracker } from '@jupyterlab/apputils';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { IEditorServices } from '@jupyterlab/codeeditor';\nimport { LabIcon } from '@jupyterlab/ui-components';\nimport { find } from '@lumino/algorithm';\nimport editorIconSVGstr from '../style/icon/jupyter_snippeteditoricon.svg';\nimport codeSnippetIconSVGstr from '../style/icon/jupyter_snippeticon.svg';\nimport { CodeSnippetInputDialog } from './CodeSnippetInputDialog';\nimport { CodeSnippetWidget } from './CodeSnippetWidget';\nimport { CodeSnippetEditor, } from './CodeSnippetEditor';\nimport { CodeSnippetService } from './CodeSnippetService';\nimport { NotebookPanel } from '@jupyterlab/notebook';\nimport { DocumentWidget } from '@jupyterlab/docregistry';\n// Code Snippet Constants\nconst CODE_SNIPPET_EXTENSION_ID = 'code-snippet-extension';\nconst CODE_SNIPPET_SETTING_ID = 'jupyterlab-code-snippets:snippets';\n/**\n * Snippet Editor Icon\n */\nconst editorIcon = new LabIcon({\n    name: 'custom-ui-components:codeSnippetEditorIcon',\n    svgstr: editorIconSVGstr,\n});\n/**\n * Snippet Icon\n */\nconst codeSnippetIcon = new LabIcon({\n    name: 'custom-ui-components:codeSnippetIcon',\n    svgstr: codeSnippetIconSVGstr,\n});\n/**\n * Initialization data for the code_snippets extension.\n */\nconst code_snippet_extension = {\n    id: CODE_SNIPPET_EXTENSION_ID,\n    autoStart: true,\n    requires: [ICommandPalette, ILayoutRestorer, IEditorServices],\n    activate: activateCodeSnippet,\n};\nfunction activateCodeSnippet(app, palette, restorer, editorServices) {\n    console.log('JupyterLab extension jupyterlab-code-snippets is activated!');\n    const getCurrentWidget = () => {\n        return app.shell.currentWidget;\n    };\n    const codeSnippetWidget = new CodeSnippetWidget(getCurrentWidget, app, editorServices);\n    codeSnippetWidget.id = CODE_SNIPPET_EXTENSION_ID;\n    codeSnippetWidget.title.icon = codeSnippetIcon;\n    codeSnippetWidget.title.caption = 'Code Snippet Explorer';\n    restorer.add(codeSnippetWidget, CODE_SNIPPET_EXTENSION_ID);\n    // Rank has been chosen somewhat arbitrarily to give priority to the running\n    // sessions widget in the sidebar.\n    app.shell.add(codeSnippetWidget, 'left', { rank: 900 });\n    // open code Snippet Editor\n    const openCodeSnippetEditor = (args) => {\n        // codeSnippetEditors are in the main area\n        const widgetId = `jp-codeSnippet-editor-${args.id}`;\n        // when the editor is already open\n        const openEditor = find(app.shell.widgets('main'), (widget, _) => {\n            return widget.id === widgetId;\n        });\n        if (openEditor) {\n            app.shell.activateById(widgetId);\n            return;\n        }\n        const codeSnippetEditor = new CodeSnippetEditor(editorServices, tracker, codeSnippetWidget, args);\n        codeSnippetEditor.id = widgetId;\n        codeSnippetEditor.addClass(widgetId);\n        codeSnippetEditor.title.label =\n            args.name === ''\n                ? 'New Code Snippet'\n                : '[' + args.language + '] ' + args.name;\n        codeSnippetEditor.title.closable = true;\n        codeSnippetEditor.title.icon = editorIcon;\n        if (!tracker.has(codeSnippetEditor)) {\n            tracker.add(codeSnippetEditor);\n        }\n        if (!codeSnippetEditor.isAttached) {\n            app.shell.add(codeSnippetEditor, 'main', {\n                mode: 'tab-after',\n            });\n        }\n        // Activate the code Snippet Editor\n        app.shell.activateById(codeSnippetEditor.id);\n    };\n    const editorSaveCommand = 'jp-codeSnippet-editor:save';\n    app.commands.addCommand(editorSaveCommand, {\n        execute: () => {\n            const editor = tracker.currentWidget;\n            editor.updateSnippet();\n        },\n    });\n    // Add keybinding to save\n    app.commands.addKeyBinding({\n        command: editorSaveCommand,\n        args: {},\n        keys: ['Accel S'],\n        selector: '.jp-codeSnippet-editor',\n    });\n    const editorCommand = 'jp-codeSnippet-editor:open';\n    app.commands.addCommand(editorCommand, {\n        execute: (args) => {\n            openCodeSnippetEditor(args);\n        },\n    });\n    // Add an application command\n    const saveCommand = 'codeSnippet:save-as-snippet';\n    const toggled = false;\n    app.commands.addCommand(saveCommand, {\n        label: 'Save As Code Snippet',\n        isEnabled: () => true,\n        isVisible: () => true,\n        isToggled: () => toggled,\n        iconClass: 'some-css-icon-class',\n        execute: () => {\n            let language = '';\n            // get the language of document or notebook\n            if (app.shell.currentWidget instanceof NotebookPanel) {\n                language = app.shell.currentWidget.sessionContext\n                    .kernelPreference.language;\n            }\n            else if (app.shell.currentWidget instanceof DocumentWidget) {\n                language = app.shell.currentWidget.context.model\n                    .defaultKernelLanguage;\n            }\n            const highlightedCode = getSelectedText();\n            if (highlightedCode === '') {\n                //if user just right-clicks cell(s) to save\n                const curr = document.getElementsByClassName('jp-Cell jp-mod-selected');\n                let code = '';\n                // changed i = 1 to i = 0.\n                for (let i = 0; i < curr.length; i++) {\n                    //loop through each cell\n                    const text = curr[i];\n                    const cellInputWrappers = text.getElementsByClassName('jp-Cell-inputWrapper');\n                    for (const cellInputWrapper of cellInputWrappers) {\n                        const codeLines = cellInputWrapper.querySelectorAll('.CodeMirror-line');\n                        for (const codeLine of codeLines) {\n                            let codeLineText = codeLine.textContent;\n                            if (codeLineText.charCodeAt(0) === 8203) {\n                                //check if first char in line is invalid\n                                codeLineText = ''; //replace invalid line with empty string\n                            }\n                            code += codeLineText + '\\n';\n                        }\n                    }\n                }\n                CodeSnippetInputDialog(codeSnippetWidget, code, language, codeSnippetWidget.codeSnippetManager.snippets.length);\n            }\n            else {\n                CodeSnippetInputDialog(codeSnippetWidget, highlightedCode, language, codeSnippetWidget.codeSnippetManager.snippets.length);\n            }\n        },\n    });\n    // Put the saveCommand above in context menu\n    app.contextMenu.addItem({\n        type: 'separator',\n        selector: '.jp-Notebook',\n        rank: 13,\n    });\n    app.contextMenu.addItem({\n        command: saveCommand,\n        selector: '.jp-Notebook',\n        rank: 14,\n    });\n    app.contextMenu.addItem({\n        type: 'separator',\n        selector: '.jp-Notebook',\n        rank: 15,\n    });\n    // Put the saveCommand in non-notebook file context menu\n    app.contextMenu.addItem({\n        type: 'separator',\n        selector: '.jp-FileEditor',\n        rank: 7,\n    });\n    app.contextMenu.addItem({\n        command: saveCommand,\n        selector: '.jp-FileEditor',\n        rank: 8,\n    });\n    app.contextMenu.addItem({\n        type: 'separator',\n        selector: '.jp-FileEditor',\n        rank: 9,\n    });\n    // Track and restore the widget state\n    const tracker = new WidgetTracker({\n        namespace: 'codeSnippetEditor',\n    });\n    restorer.restore(tracker, {\n        command: editorCommand,\n        args: (widget) => {\n            const editorMetadata = widget.codeSnippetEditorMetadata;\n            return {\n                name: editorMetadata.name,\n                description: editorMetadata.description,\n                language: editorMetadata.language,\n                code: editorMetadata.code,\n                id: editorMetadata.id,\n                tags: editorMetadata.tags,\n                allSnippetTags: editorMetadata.allSnippetTags,\n                allLangTags: editorMetadata.allLangTags,\n                fromScratch: editorMetadata.fromScratch,\n            };\n        },\n        name: (widget) => {\n            return widget.id;\n        },\n    });\n}\nconst codeSnippetExtensionSetting = {\n    id: CODE_SNIPPET_SETTING_ID,\n    autoStart: true,\n    requires: [ISettingRegistry],\n    activate: (app, settingRegistry) => {\n        void settingRegistry\n            .load(CODE_SNIPPET_SETTING_ID)\n            .then((settings) => {\n            CodeSnippetService.init(settings, app);\n            console.log('JupyterLab extension jupyterlab-code-snippets setting is activated!');\n        })\n            .catch((e) => console.log(e));\n    },\n};\nfunction getSelectedText() {\n    let selectedText;\n    // window.getSelection\n    if (window.getSelection) {\n        selectedText = window.getSelection();\n    }\n    // document.getSelection\n    else if (document.getSelection) {\n        selectedText = document.getSelection();\n    }\n    return selectedText.toString();\n}\nexport default [code_snippet_extension, codeSnippetExtensionSetting];\n","export default \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<path d=\\\"M10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM8 15L3 10L4.41 8.59L8 12.17L15.59 4.58L17 6L8 15Z\\\" fill=\\\"#388E3C\\\"/>\\n</svg>\\n\";","export default \"<svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<path d=\\\"M6 10C4.9 10 4 10.9 4 12C4 13.1 4.9 14 6 14C7.1 14 8 13.1 8 12C8 10.9 7.1 10 6 10ZM18 10C16.9 10 16 10.9 16 12C16 13.1 16.9 14 18 14C19.1 14 20 13.1 20 12C20 10.9 19.1 10 18 10ZM12 10C10.9 10 10 10.9 10 12C10 13.1 10.9 14 12 14C13.1 14 14 13.1 14 12C14 10.9 13.1 10 12 10Z\\\" fill=\\\"#616161\\\"/>\\n</svg>\\n\";","export default \"<svg width=\\\"13\\\" height=\\\"13\\\" viewBox=\\\"0 0 13 13\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<rect x=\\\"0.5\\\" y=\\\"0.5\\\" width=\\\"12\\\" height=\\\"12\\\" fill=\\\"white\\\" stroke=\\\"#0097A7\\\"/>\\n<path d=\\\"M6.79894 3.5L7.45729 3.63333L6.20106 9.5L5.54271 9.36667L6.79894 3.5ZM9.04942 6.5L7.84357 5.30333V4.36L10 6.5L7.84357 8.63667V7.69333L9.04942 6.5ZM3 6.5L5.15643 4.36V5.30333L3.95058 6.5L5.15643 7.69333V8.63667L3 6.5Z\\\" fill=\\\"#0097A7\\\"/>\\n</svg>\\n\";","export default \"<svg width=\\\"22\\\" height=\\\"18\\\" viewBox=\\\"0 0 22 18\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<path class=\\\"jp-icon3\\\" d=\\\"M11.89 0L13.85 0.4L10.11 18L8.14996 17.6L11.89 0ZM18.59 9L15 5.41V2.58L21.42 9L15 15.41V12.58L18.59 9ZM0.579956 9L6.99996 2.58V5.41L3.40996 9L6.99996 12.58V15.41L0.579956 9Z\\\" fill=\\\"#616161\\\"/>\\n</svg>\\n\";","export default \"<svg version=\\\"1.1\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"m18.23 11.21c-.03-.16-.47-.71-1.32-1.65-.02-.19.29-.45.9-.8l1.74-1.55c.39-.5.62-1.28.69-2.38l-.02-.26c-.07-.78-.63-1.4-1.69-1.89-.63-.42-1.76-.65-3.38-.68-1.35.11-3.11.59-5.28 1.43-.6.43-1.28.86-2.04 1.28l.01.14.21-.08c.08-.01.13.03.14.11l.13-.07.07-.01.01.06c0 .07-.47.44-1.76 1.35l-.06.12c-.31.02-.61.25-.91.67l.08.12.25-.09.18.24c.32-.33.66-.62 1.03-.87.19.05.29.11.44.16 1.02-.75 2.03-1.3 3.04-1.64l.01.14c-.2.27-.32.42-.38.42l.1.23c.01.19-2.55 7-6.66 14.44l.08.19c.35-.08.58-.17.75-.26l.01.13.4-.03-.67 1.76.14.06c.57-.64 1-1.29 1.3-1.88 1.67-.49 2.94-.97 3.82-1.44.88-.08 1.56-.31 2.02-.7l.92-.47c1.27-.98 2.22-1.67 2.87-2.08 1.33-.98 2.2-1.93 2.6-2.85l.23-1.37m-3.46 2.31-1.77 1.39c-1.29.85-2 1.3-2.09 1.3-2.07 1.13-3.36 1.72-3.86 1.76l-.05.01c.04-.23.96-2.12 2.75-5.67.78-.06 2.02-.43 3.71-1.1l.41-.03c.85-.08 1.49.09 1.91.49l.03.26c-.31.9-.67 1.44-1.04 1.59m1.09-5.78c-.18.22-.68.59-1.5 1.11-.27.03-1.27.42-3.01 1.18l-.28-.05-.01-.12c-.02-.25.09-.57.34-.95.13-.7.28-1.12.44-1.2l1.45-3.28c-.02-.22.29-.35.93-.46l.21-.02.01.18 1.16-.16c1.15-.1 1.75.14 1.8.7l.13-.02-.03-.32.15-.02c.35.19.52.4.54.68.02.18-.08.41-.29.68-.09.01-.14-.06-.15-.18l-.14.01-.03.4c-.58.87-1.01 1.31-1.27 1.34z\\\" style=\\\"fill:#fdd835\\\"/></svg>\\n\";","export default \"<svg version=\\\"1.1\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"m16.45 15.97.42 2.44c-.26.14-.68.27-1.24.39-.57.13-1.24.2-2.01.2-2.21-.04-3.87-.7-4.98-1.96-1.14-1.27-1.68-2.88-1.68-4.83.04-2.31.72-4.08 2.04-5.32 1.28-1.25 2.92-1.89 4.9-1.89.75 0 1.4.07 1.94.19s.94.25 1.2.4l-.6 2.49-1.04-.34c-.4-.1-.87-.15-1.4-.15-1.15-.01-2.11.36-2.86 1.1-.76.73-1.14 1.85-1.18 3.34.01 1.36.37 2.42 1.08 3.2.71.77 1.7 1.17 2.99 1.18l1.33-.12c.43-.08.79-.19 1.09-.32z\\\" style=\\\"fill:#0277bd\\\"/></svg>\\n\";","export default \"<svg version=\\\"1.1\\\" viewBox=\\\"0 0 256 256\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><g transform=\\\"matrix(.94843 0 0 .94843 6.4961 6.3946)\\\"><g><path d=\\\"m123.32 130.3c-1.15 2.492-2.419 5.292-3.733 8.272-4.645 10.524-9.789 23.33-11.668 31.534-.675 2.922-1.093 6.543-1.085 10.558 0 1.588.085 3.257.22 4.957 6.567 2.413 13.66 3.74 21.067 3.753 6.743-.013 13.221-1.127 19.284-3.143-1.425-1.303-2.785-2.692-4.023-4.257-8.22-10.482-12.806-25.844-20.062-51.674\\\" style=\\\"fill:#64dd17\\\"/><path d=\\\"m92.97 78.225c-15.699 11.064-25.972 29.312-26.011 49.992.039 20.371 10.003 38.383 25.307 49.493 3.754-15.637 13.164-29.955 27.275-58.655-.838-2.302-1.793-4.822-2.862-7.469-3.909-9.806-9.551-21.194-14.586-26.351-2.567-2.694-5.682-5.022-9.123-7.01\\\" style=\\\"fill:#64dd17\\\"/><path d=\\\"m181.39 198.37c-8.1-1.015-14.785-2.24-20.633-4.303-9.836 4.884-20.913 7.643-32.642 7.643-40.584 0-73.483-32.894-73.488-73.49 0-22.027 9.704-41.773 25.056-55.24-4.106-.992-8.388-1.571-12.762-1.563-21.562.203-44.323 12.136-53.799 44.363-.886 4.691-.675 8.238-.675 12.442 0 63.885 51.791 115.68 115.67 115.68 39.122 0 73.682-19.439 94.611-49.169-11.32 2.821-22.206 4.17-31.528 4.199-3.494 0-6.774-.187-9.811-.558\\\" style=\\\"fill:#7cb342\\\"/><path d=\\\"m159.66 175.95c.714.354 2.333.932 4.586 1.571 15.157-11.127 25.007-29.05 25.046-49.307h-.006c-.057-33.771-27.386-61.096-61.165-61.163-6.714.013-13.164 1.121-19.203 3.122 12.419 14.156 18.391 34.386 24.168 56.515.003.01.008.018.01.026.011.018 1.848 6.145 5.002 14.274 3.132 8.118 7.594 18.168 12.46 25.492 3.195 4.908 6.709 8.435 9.102 9.47\\\" style=\\\"fill:#29b6f6\\\"/><path d=\\\"m128.12 12.541c-38.744 0-73.016 19.073-94.008 48.318 10.925-6.842 22.08-9.31 31.815-9.222 13.446.039 24.017 4.208 29.089 7.06 1.225.706 2.388 1.466 3.527 2.247 9.05-3.986 19.05-6.215 29.574-6.215 40.589.005 73.493 32.899 73.499 73.488h-.006c0 20.464-8.37 38.967-21.863 52.291 3.312.371 6.844.602 10.451.584 12.811.006 26.658-2.821 37.039-11.552 6.769-5.702 12.44-14.051 15.585-26.569.615-4.835.969-9.75.969-14.752 0-63.882-51.786-115.68-115.67-115.68\\\" style=\\\"fill:#1e88e5\\\"/></g></g></svg>\\n\";","export default \"<svg version=\\\"1.1\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"m8.0417 3.0359c-.28774.078252-.56654.16598-.73703.23713-.52668.21982-.98314.49155-1.3848.82444-.12441.10311-.24788.19883-.27468.21042-.12652.054729-.70093.65437-1.0071 1.0516-1.7319 2.2465-2.4417 5.5125-1.8599 8.565.075453.39591.33846 1.362.46441 1.7055.76461 2.0854 2.1369 3.7186 3.9283 4.6731 1.4125.75259 3.0843 1.0604 4.8224.88717.34798-.03467.52376-.06278 1.0844-.16574.23343-.04287 1.3817-.38454 1.6589-.49424 2.3921-.94675 4.3656-2.5822 5.5722-4.6185.50665-.85507.79584-1.6685 1.0291-2.8814.36994-1.9236-.5021-4.2624-2.3238-6.2294-2.6435-2.8542-6.788-4.4585-10.181-3.9422-.20701.031508-.50408.098905-.79182.17716zm.4205 1.5069c.27995-.075961.57525-.13864.81289-.1667.65238-.077031 1.3037-.069092 1.9943.023737 3.131.42089 6.308 2.4879 7.8054 5.0768.49823.8614.78835 1.7899.80342 2.5787.01211.63417-.129 1.1793-.43165 1.6782-.15489.25532-.3045.43314-.54842.6473-.61288.53812-1.4549.87659-2.5016 1.0051-.54773.06723-.91934.20565-1.2289.46014-.06823.05609-.64296.58818-1.2792 1.1823-1.2482 1.1656-1.2374 1.1562-1.4202 1.1033-.04719-.01365-.11537-.05265-.15105-.08639-.12965-.12259-.12528-.1612.07962-1.2241.1048-.5436.18866-1.0528.18768-1.132-.0034-.27051-.11283-.54687-.29759-.75093-.11288-.12462-.29934-.24365-.54652-.34914-2.3593-1.0069-4.3434-2.7757-5.2958-4.7217-.2041-.41706-.29285-.65253-.41172-1.0883-.28952-1.0613-.22-1.9129.21878-2.683.32221-.56549.77766-.96396 1.4876-1.3018.17803-.084725.44303-.17557.72299-.25153z\\\" style=\\\"fill:#8d6e63;stroke-width:.023397\\\"/></svg>\\n\";","export default \"<svg version=\\\"1.1\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<path d=\\\"m2 21h18v-2h-18m18-11h-2v-3h2m0-2h-16v10a4 4 0 0 0 4 4h6a4 4 0 0 0 4 -4v-3h2a2 2 0 0 0 2 -2v-3c0-1.11-.9-2-2-2z\\\" fill=\\\"#42a5f5\\\"/>\\n</svg>\";","export default \"<svg version=\\\"1.1\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"m10 15.97.41 2.44c-.26.14-.68.27-1.24.39-.57.13-1.24.2-2.01.2-2.21-.04-3.87-.7-4.98-1.96-1.12-1.27-1.68-2.88-1.68-4.83.05-2.31.72-4.08 2-5.32 1.32-1.25 2.96-1.89 4.94-1.89.75 0 1.4.07 1.94.19s.94.25 1.2.4l-.58 2.49-1.06-.34c-.4-.1-.86-.15-1.39-.15-1.16-.01-2.12.36-2.87 1.1-.76.73-1.15 1.85-1.18 3.34 0 1.36.37 2.42 1.08 3.2.71.77 1.71 1.17 2.99 1.18l1.33-.12c.43-.08.79-.19 1.1-.32m.5-4.97h2v-2h2v2h2v2h-2v2h-2v-2h-2v-2m7 0h2v-2h2v2h2v2h-2v2h-2v-2h-2z\\\" style=\\\"fill:#0277bd\\\"/></svg>\\n\";","export default \"<svg version=\\\"1.1\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<path d=\\\"m11.5 15.97l.41 2.44c-.26.14-.68.27-1.24.39-.57.13-1.24.2-2.01.2-2.21-.04-3.87-.7-4.98-1.96-1.12-1.27-1.68-2.88-1.68-4.83.05-2.31.72-4.08 2-5.32 1.32-1.25 2.96-1.89 4.94-1.89.75 0 1.4.07 1.94.19s.94.25 1.2.4l-.58 2.49-1.06-.34c-.4-.1-.86-.15-1.39-.15-1.16-.01-2.12.36-2.87 1.1-.76.73-1.15 1.85-1.18 3.34 0 1.36.37 2.42 1.08 3.2.71.77 1.71 1.17 2.99 1.18l1.33-.12c.43-.08.79-.19 1.1-.32m2.39 3.03l.61-4h-1.5l.34-2h1.5l.32-2h-1.5l.34-2h1.5l.61-4h2l-.61 4h1l.61-4h2l-.61 4h1.5l-.34 2h-1.5l-.32 2h1.5l-.34 2h-1.5l-.61 4h-2l.61-4h-1l-.61 4h-2m2.95-6h1l.32-2h-1l-.32 2z\\\" fill=\\\"#0277bd\\\"/>\\n</svg>\";","export default \"<svg version=\\\"1.1\\\" viewBox=\\\"0 0 30 30\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<g transform=\\\"translate(0,-267)\\\">\\n<path d=\\\"m5.2074 271.33c-.047558.0515-.096794.10075-.14366.15316-2.3762 2.6622-3.5642 6.2773-3.5642 10.846 0 4.4183 1.1557 7.8618 3.4591 10.339h19.415c2.5529-1.1508 4.1269-3.43 4.1269-3.43l-3.1468-2.52-1.4538 1.382c-.8666.77235-.84504.93111-2.3146 1.7796-1.4956.67375-3.0405.96588-4.6339.96588-2.5159 0-4.4233-.90829-5.7232-2.0586-1.2859-1.1503-1.9849-4.5111-2.0967-6.6803l17.458.0672-.18252-1.4722s-.84698-7.1283-2.5413-9.3717zm8.7593.84595c1.5655 0 3.2206.53467 3.9614 1.4714.7408.93668.93123 1.667.97316 3.5239h-9.7914c.11182-1.9555.43618-2.8104 1.3727-3.6978.93649-.88737 2.0305-1.2975 3.4841-1.2975z\\\" fill=\\\"#f44336\\\"/>\\n</g>\\n</svg>\";","export default \"<svg width=\\\"256\\\" height=\\\"256\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 67.733 67.733\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:osb=\\\"http://www.openswatchbook.org/uri/2009/osb\\\">\\n <path d=\\\"m10.321 12.006c-0.21038 0-0.37976 0.1735-0.37976 0.3892v12.63c0 0.2157 0.16938 0.38961 0.37976 0.38961h16.925c0.21038 0 0.37976-0.17391 0.37976-0.38961v-12.63c0-0.2157-0.16938-0.3892-0.37976-0.3892zm30.167 0c-0.21038 0-0.37976 0.1735-0.37976 0.3892v12.63c0 0.2157 0.16938 0.38961 0.37976 0.38961h16.925c0.21038 0 0.37976-0.17391 0.37976-0.38961v-12.63c0-0.2157-0.16938-0.3892-0.37976-0.3892zm-30.167 22.322c-0.21038 0-0.37976 0.1735-0.37976 0.3892v12.63c0 0.2157 0.16938 0.38961 0.37976 0.38961h16.925c0.21038 0 0.37976-0.17391 0.37976-0.38961v-12.63c0-0.2157-0.16938-0.3892-0.37976-0.3892zm30.167 0c-0.21038 0-0.37976 0.1735-0.37976 0.3892v12.63c0 0.2157 0.16938 0.38961 0.37976 0.38961h4.0525v4.3514h-4.0308c-0.20757 0-0.37483 0.16726-0.37483 0.37483v2.8898c0 0.20757 0.16726 0.37442 0.37483 0.37442h8.3029c0.20758 0 0.37442-0.16685 0.37442-0.37442v-4.135h3.7976c0.20757 0 0.37442-0.16726 0.37442-0.37483v-3.1062h4.0542c0.21038 0 0.37976-0.17391 0.37976-0.38961v-12.63c0-0.2157-0.16938-0.3892-0.37976-0.3892z\\\" fill=\\\"#ef5350\\\"/>\\n</svg>\";","export default \"<svg id=\\\"svg\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><g transform=\\\"translate(3.2316e-7 1.1732e-6)\\\" style=\\\"fill:#ff7043\\\" aria-label=\\\"F\\\"><path d=\\\"m12.564 5.0924h-.61515q-.17224-.64796-.72177-1.3861-.54133-.73818-1.0417-.812-.25426-.032808-.60695-.049212-.34448-.016404-.78739-.016404h-1.9521v4.6751h1.3369q.60695 0 .94323-.12303.33628-.13123.57414-.3937.16404-.18044.29527-.55774.13943-.38549.18044-.8202h.62335v4.5685h-.62335q-.024606-.36089-.17224-.8202-.13943-.45931-.30347-.66436-.24606-.30347-.62335-.4101-.36909-.11483-.89402-.11483h-1.3369v4.0108q0 .27067.10663.48392.10663.21325.37729.34448.12303.05741.53313.13943.4101.08202.62335.09022v.58234h-5.0442v-.58234q.24606-.0164.65616-.04921.4101-.04101.53313-.09842.24606-.10663.35269-.31168.11483-.21325.11483-.50852v-8.3988q0-.27067-.090222-.47572-.090222-.21325-.37729-.34448-.22145-.10663-.59874-.18865-.36909-.08202-.59054-.098424v-.58234h9.1288z\\\" style=\\\"fill:#ff7043;stroke-width:1.1453\\\"/></g></svg>\\n\";","export default \"<svg width=\\\"533.33\\\" height=\\\"533.33\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 500 500\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<g transform=\\\"translate(.3386 -.59284)\\\">\\n<path d=\\\"m235.91 36.659-213.94 213.94 213.94 213.94v-84.361l-129.7-129.7 129.7-129.7z\\\" fill=\\\"#378bba\\\"/>\\n<path d=\\\"m235.91 156.61-93.622 93.62 93.622 93.622z\\\" fill=\\\"#378bba\\\"/>\\n<path d=\\\"m263.42 36.64 213.94 213.94-213.94 213.94v-84.361l129.7-129.7-129.7-129.7z\\\" fill=\\\"#30b9db\\\"/>\\n</g>\\n</svg>\";","export default \"<svg version=\\\"1.1\\\" viewBox=\\\"0 0 300 300\\\" xml:space=\\\"preserve\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><style type=\\\"text/css\\\">\\n\\t.st0{fill:#2DBCAF;}\\n\\t.st1{fill:#5DC9E1;}\\n\\t.st2{fill:#FDDD00;}\\n\\t.st3{fill:#CE3262;}\\n\\t.st4{fill:#00ACD7;}\\n\\t.st5{fill:#FFFFFF;}\\n</style><g transform=\\\"matrix(1.4595 0 0 1.4595 -35.938 -9.1601)\\\" style=\\\"fill:#00acc1\\\"><g style=\\\"fill:#00acc1\\\"><g style=\\\"fill:#00acc1\\\"><g style=\\\"fill:#00acc1\\\"><path class=\\\"st4\\\" d=\\\"m40.2 101.1c-.4 0-.5-.2-.3-.5l2.1-2.7c.2-.3.7-.5 1.1-.5h35.7c.4 0 .5.3.3.6l-1.7 2.6c-.2.3-.7.6-1 .6z\\\" style=\\\"fill:#00acc1\\\"/></g></g></g><g style=\\\"fill:#00acc1\\\"><g style=\\\"fill:#00acc1\\\"><g style=\\\"fill:#00acc1\\\"><path class=\\\"st4\\\" d=\\\"m25.1 110.3c-.4 0-.5-.2-.3-.5l2.1-2.7c.2-.3.7-.5 1.1-.5h45.6c.4 0 .6.3.5.6l-.8 2.4c-.1.4-.5.6-.9.6z\\\" style=\\\"fill:#00acc1\\\"/></g></g></g><g style=\\\"fill:#00acc1\\\"><g style=\\\"fill:#00acc1\\\"><g style=\\\"fill:#00acc1\\\"><path class=\\\"st4\\\" d=\\\"m49.3 119.5c-.4 0-.5-.3-.3-.6l1.4-2.5c.2-.3.6-.6 1-.6h20c.4 0 .6.3.6.7l-.2 2.4c0 .4-.4.7-.7.7z\\\" style=\\\"fill:#00acc1\\\"/></g></g></g><g style=\\\"fill:#00acc1\\\"><g id=\\\"CXHf1q_3_\\\" style=\\\"fill:#00acc1\\\"><g style=\\\"fill:#00acc1\\\"><g style=\\\"fill:#00acc1\\\"><path class=\\\"st4\\\" d=\\\"m153.1 99.3c-6.3 1.6-10.6 2.8-16.8 4.4-1.5.4-1.6.5-2.9-1-1.5-1.7-2.6-2.8-4.7-3.8-6.3-3.1-12.4-2.2-18.1 1.5-6.8 4.4-10.3 10.9-10.2 19 .1 8 5.6 14.6 13.5 15.7 6.8.9 12.5-1.5 17-6.6.9-1.1 1.7-2.3 2.7-3.7h-19.3c-2.1 0-2.6-1.3-1.9-3 1.3-3.1 3.7-8.3 5.1-10.9.3-.6 1-1.6 2.5-1.6h36.4c-.2 2.7-.2 5.4-.6 8.1-1.1 7.2-3.8 13.8-8.2 19.6-7.2 9.5-16.6 15.4-28.5 17-9.8 1.3-18.9-.6-26.9-6.6-7.4-5.6-11.6-13-12.7-22.2-1.3-10.9 1.9-20.7 8.5-29.3 7.1-9.3 16.5-15.2 28-17.3 9.4-1.7 18.4-.6 26.5 4.9 5.3 3.5 9.1 8.3 11.6 14.1.6.9.2 1.4-1 1.7z\\\" style=\\\"fill:#00acc1\\\"/></g><g style=\\\"fill:#00acc1\\\"><path class=\\\"st4\\\" d=\\\"m186.2 154.6c-9.1-.2-17.4-2.8-24.4-8.8-5.9-5.1-9.6-11.6-10.8-19.3-1.8-11.3 1.3-21.3 8.1-30.2 7.3-9.6 16.1-14.6 28-16.7 10.2-1.8 19.8-.8 28.5 5.1 7.9 5.4 12.8 12.7 14.1 22.3 1.7 13.5-2.2 24.5-11.5 33.9-6.6 6.7-14.7 10.9-24 12.8-2.7.5-5.4.6-8 .9zm23.8-40.4c-.1-1.3-.1-2.3-.3-3.3-1.8-9.9-10.9-15.5-20.4-13.3-9.3 2.1-15.3 8-17.5 17.4-1.8 7.8 2 15.7 9.2 18.9 5.5 2.4 11 2.1 16.3-.6 7.9-4.1 12.2-10.5 12.7-19.1z\\\" style=\\\"fill:#00acc1\\\"/></g></g></g></g></g></svg>\\n\";","export default \"<svg version=\\\"1.1\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<path d=\\\"m12 1.8809a10.119 10.119 0 0 0 -10.119 10.119 10.119 10.119 0 0 0 10.119 10.119 10.119 10.119 0 0 0 10.119 -10.119 10.119 10.119 0 0 0 -10.119 -10.119zm1.2539 2.4219c.90983 0 1.6469.2609 2.2129.7793.57129.51839.85742 1.1885.85742 2.0137 0 .88867-.31893 1.6725-.95898 2.3496-.64006.67708-1.3765 1.0156-2.207 1.0156-.48665 0-.89022-.11938-1.2129-.35742-.31738-.23804-.47656-.53174-.47656-.88086 0-.21159.05998-.39852.18164-.5625.12695-.16398.27352-.24609.4375-.24609.15869 0 .23828.092204.23828.27734 0 .16398.05998.29093.18164.38086.12166.089925.26123.13477.41992.13477.42318 0 .8287-.28866 1.2148-.86523.39144-.58187.58789-1.2021.58789-1.8633 0-.46549-.15161-.84383-.45312-1.1348-.30151-.29622-.68994-.44531-1.166-.44531-.71411 0-1.4063.31836-2.0781.95312-.6665.63477-1.2116 1.4691-1.6348 2.5059-.41789 1.0315-.62695 2.0143-.62695 2.9453 0 .85693.18441 1.5391.55469 2.0469.37028.50252.86296.75391 1.4766.75391 1.0368 0 2.0278-.73397 2.9746-2.1992l1.4922-.21289c.18514-.02645.27734.01839.27734.13476 0 .0529-.07202.27962-.21484.68164-.14282.40202-.33732 1.0741-.58594 2.0156.8199-.47607 1.4547-1.0035 1.9043-1.5801v.91406c-.3597.41789-1.0469.88843-2.0625 1.4121-.21159 1.4071-.68156 2.4928-1.4062 3.2598-.72469.7723-1.5388 1.1602-2.4434 1.1602-.43376 0-.77482-.10173-1.0234-.30274-.24333-.20101-.36523-.47762-.36523-.83203 0-.98389.95565-1.9395 2.8652-2.8652.20101-.71411.39551-1.3564.58594-1.9277-.33325.48136-.81641.90706-1.4512 1.2773-.63476.37028-1.2247.55469-1.7695.55469-.88867 0-1.6283-.38338-2.2207-1.1504-.58716-.7723-.88086-1.7481-.88086-2.9277 0-1.2431.3335-2.4204 1-3.5313.6665-1.1161 1.5406-2.0073 2.625-2.6738 1.0844-.67179 2.1348-1.0078 3.1504-1.0078zm-1.2227 12.188c-1.3753.68766-2.0625 1.3647-2.0625 2.0312 0 .35441.16927.5332.50781.5332.6665 0 1.1844-.85588 1.5547-2.5645z\\\" fill=\\\"#26c6da\\\"/>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"300\\\" height=\\\"300\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 300.00001 300\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n <g stroke-width=\\\"2.4224\\\">\\n  <path d=\\\"m23.928 240.5 59.94-89.852-59.94-89.855h44.955l59.94 89.855-59.94 89.852z\\\" fill=\\\"#ef5350\\\"/>\\n  <path d=\\\"m83.869 240.5 59.94-89.852-59.94-89.855h44.955l119.88 179.71h-44.95l-37.46-56.156-37.468 56.156z\\\" fill=\\\"#ffa726\\\"/>\\n  <path d=\\\"m228.72 188.08-19.98-29.953h69.93v29.956h-49.95zm-29.97-44.924-19.98-29.953h99.901v29.953z\\\" fill=\\\"#ffee58\\\"/>\\n </g>\\n</svg>\";","export default \"<svg version=\\\"1.1\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<path d=\\\"m2 21h18v-2h-18m18-11h-2v-3h2m0-2h-16v10a4 4 0 0 0 4 4h6a4 4 0 0 0 4 -4v-3h2a2 2 0 0 0 2 -2v-3c0-1.11-.9-2-2-2z\\\" fill=\\\"#f44336\\\"/>\\n</svg>\";","export default \"<svg version=\\\"1.1\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<path d=\\\"m3 3h18v18h-18v-18m4.73 15.04c.4.85 1.19 1.55 2.54 1.55 1.5 0 2.53-.8 2.53-2.55v-5.78h-1.7v5.74c0 .86-.35 1.08-.9 1.08-.58 0-.82-.4-1.09-.87l-1.38.83m5.98-.18c.5.98 1.51 1.73 3.09 1.73 1.6 0 2.8-.83 2.8-2.36 0-1.41-.81-2.04-2.25-2.66l-.42-.18c-.73-.31-1.04-.52-1.04-1.02 0-.41.31-.73.81-.73.48 0 .8.21 1.09.73l1.31-.87c-.55-.96-1.33-1.33-2.4-1.33-1.51 0-2.48.96-2.48 2.23 0 1.38.81 2.03 2.03 2.55l.42.18c.78.34 1.24.55 1.24 1.13 0 .48-.45.83-1.15.83-.83 0-1.31-.43-1.67-1.03l-1.38.8z\\\" fill=\\\"#ffca28\\\"/>\\n</svg>\";","export default \"<svg version=\\\"1.1\\\" viewBox=\\\"0 0 50 50\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<g transform=\\\"translate(0,-247)\\\">\\n<g transform=\\\"translate(.21075 -.010315)\\\">\\n<circle cx=\\\"13.497\\\" cy=\\\"281.63\\\" r=\\\"9.5549\\\" fill=\\\"#bc342d\\\"/>\\n<circle cx=\\\"36.081\\\" cy=\\\"281.63\\\" r=\\\"9.5549\\\" fill=\\\"#864e9f\\\"/>\\n<circle cx=\\\"24.722\\\" cy=\\\"262.39\\\" r=\\\"9.5549\\\" fill=\\\"#328a22\\\"/>\\n</g>\\n</g>\\n</svg>\";","export default \"<svg version=\\\"1.1\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n<defs>\\n<linearGradient id=\\\"linearGradient4183\\\" x1=\\\"1.7253\\\" x2=\\\"22.185\\\" y1=\\\"22.67\\\" y2=\\\"1.9823\\\" gradientTransform=\\\"matrix(.89324 0 0 .89324 1.3055 1.1285)\\\" gradientUnits=\\\"userSpaceOnUse\\\">\\n<stop stop-color=\\\"#0296d8\\\" offset=\\\"0\\\"/>\\n<stop stop-color=\\\"#8371d9\\\" offset=\\\"1\\\"/>\\n</linearGradient>\\n<linearGradient id=\\\"linearGradient4206\\\" x1=\\\"1.8691\\\" x2=\\\"22.798\\\" y1=\\\"22.382\\\" y2=\\\"3.3774\\\" gradientTransform=\\\"matrix(.89324 0 0 .89324 1.323 1.1285)\\\" gradientUnits=\\\"userSpaceOnUse\\\">\\n<stop stop-color=\\\"#cb55c0\\\" offset=\\\"0\\\"/>\\n<stop stop-color=\\\"#f28e0e\\\" offset=\\\"1\\\"/>\\n</linearGradient>\\n</defs>\\n<path d=\\\"m2.9751 2.976v18.048h18.05v-.02966l-4.4784-4.5116-4.4802-4.5151 4.4802-4.5151 4.4435-4.4767z\\\" fill=\\\"url(#linearGradient4183)\\\"/>\\n<path d=\\\"m12.223 2.976-9.2307 9.2307v8.8173h.083741l9.0319-9.0319-.02443-.02443 4.4802-4.5151 4.4435-4.4767h-8.7841z\\\" fill=\\\"url(#linearGradient4206)\\\"/>\\n</svg>\";","export default \"<svg width=\\\"24\\\" height=\\\"24\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n <path d=\\\"m12 2c-5.5166 3e-7 -10 4.4834-10 10s4.4834 10 10 10 10-4.4834 10-10-4.4834-10-10-10zm0 1.6191c4.6321 3e-7 8.3809 3.7488 8.3809 8.3809 0 3.3074-1.9159 6.1557-4.6953 7.5195-0.05691 0.0062-0.1128 0.017435-0.16992 0.021485-0.10582 0.0076-0.21226 0.009735-0.31836 0.009765-0.1499-2e-5 -0.30007-0.006514-0.44922-0.021484-0.14912-0.01496-0.29843-0.03859-0.44531-0.068359-0.14691-0.02976-0.29235-0.065096-0.43555-0.10938-0.14316-0.044309-0.28189-0.09786-0.41992-0.15625-0.13807-0.058379-0.2747-0.12149-0.40625-0.19336-0.13151-0.07184-0.25913-0.15173-0.38281-0.23633-0.1237-0.08467-0.24084-0.17489-0.35547-0.27148-0.11466-0.09657-0.22563-0.19715-0.33008-0.30469-0.10444-0.1075-0.20368-0.22244-0.29688-0.33984-0.09314-0.11741-0.18077-0.23911-0.26172-0.36523-0.080987-0.12613-0.15467-0.25508-0.22266-0.38867-0.06799-0.13356-0.12928-0.27243-0.18359-0.41211-0.054337-0.13971-0.10247-0.2794-0.14258-0.42383-0.04007-0.14445-0.072216-0.29173-0.097656-0.43945-0.02548-0.14769-0.044067-0.29581-0.054687-0.44531-0.0076-0.10582-0.011689-0.21226-0.011719-0.31836 1.9e-5 -0.1499 0.006464-0.30007 0.021484-0.44922 0.01496-0.14912 0.040543-0.29843 0.070313-0.44531 0.02976-0.14691 0.065095-0.29235 0.10938-0.43555 0.04431-0.14322 0.095907-0.2838 0.1543-0.42187 0.05838-0.13802 0.12345-0.2728 0.19531-0.4043 0.07183-0.13156 0.15173-0.25908 0.23633-0.38281 0.08466-0.1237 0.1749-0.24278 0.27148-0.35742 0.04786-0.05679 0.096841-0.11378 0.14453-0.16406s0.096681-0.10337 0.14453-0.16016c0.09659-0.11463 0.18682-0.23567 0.27148-0.35938 0.084604-0.12374 0.16253-0.25125 0.23438-0.38281 0.071868-0.1315 0.13888-0.26628 0.19726-0.4043 0.05838-0.13808 0.10803-0.27866 0.15234-0.42188 0.04429-0.14321 0.081558-0.28864 0.11133-0.43555 0.02977-0.14688 0.053409-0.29619 0.068359-0.44531 0.01498-0.14915 0.021465-0.29932 0.021485-0.44922-2.6e-5 -0.10609-0.004229-0.21058-0.011719-0.31641-0.0106-0.1495-0.029207-0.29958-0.054688-0.44727-0.025449-0.14773-0.057584-0.29305-0.097656-0.4375-0.040117-0.14443-0.08629-0.28802-0.14062-0.42773-0.054316-0.13969-0.11756-0.2766-0.18555-0.41016-0.067991-0.13359-0.14168-0.2645-0.22266-0.39062-0.080951-0.12612-0.16858-0.24782-0.26172-0.36523-0.093187-0.11739-0.19244-0.22844-0.29688-0.33594-0.10445-0.10754-0.21346-0.21202-0.32812-0.30859-0.11463-0.09659-0.23371-0.18682-0.35742-0.27148-0.12369-0.084603-0.2513-0.16058-0.38281-0.23242-0.13155-0.071871-0.26818-0.13889-0.40625-0.19727-0.13803-0.058379-0.27675-0.10803-0.41992-0.15234-0.1432-0.044284-0.28864-0.083515-0.43555-0.11328-0.14688-0.029767-0.29619-0.051448-0.44531-0.066406-0.14915-0.014986-0.29932-0.023418-0.44922-0.023438-0.078538 1.88e-5 -0.15596 0.0056309-0.23438 0.0097657 1.0982-0.52798 2.324-0.83203 3.625-0.83203zm1.5312 2.7852c0.72596 0.99434 1.3381 1.8137 1.4707 2.916 0.17547 1.459-1.6175 5.1557-2.334 6.2187h1.4648c0.51679-0.80134 1.6526-3.2498 1.9863-4.2656 0.38311 0.69597 1.2971 3.367 1.5039 4.2656h1.334c-0.50631-1.9586-1.5148-5.0413-3.9531-9.0918 0 3e-7 -0.98948-0.042969-1.4727-0.042969zm-8.5234 2.0566h1.334c0.2068 0.8986 1.1208 3.5697 1.5039 4.2656 0.3337-1.0158 1.4695-3.4643 1.9863-4.2656h1.4648c-0.7165 1.063-2.5095 4.7598-2.334 6.2188 0.1326 1.1023 0.74474 1.9217 1.4707 2.916-0.48318 0-1.4727-0.042969-1.4727-0.042969-2.4383-4.0505-3.4468-7.1332-3.9531-9.0918z\\\" fill=\\\"#ef5350\\\"/>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"40mm\\\" height=\\\"40mm\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 40 40\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n <g transform=\\\"translate(0,-257)\\\" fill=\\\"#317eac\\\">\\n  <rect x=\\\"5.4186\\\" y=\\\"260.18\\\" width=\\\"3.6853\\\" height=\\\"34.207\\\"/>\\n  <rect transform=\\\"rotate(90)\\\" x=\\\"288.2\\\" y=\\\"-37.074\\\" width=\\\"3.6853\\\" height=\\\"34.207\\\"/>\\n  <rect transform=\\\"rotate(45)\\\" x=\\\"208.79\\\" y=\\\"166.91\\\" width=\\\"2.8348\\\" height=\\\"34.207\\\"/>\\n  <rect x=\\\"10.73\\\" y=\\\"262.47\\\" width=\\\"2.8348\\\" height=\\\"22.08\\\"/>\\n  <rect x=\\\"15.36\\\" y=\\\"262.52\\\" width=\\\"2.8348\\\" height=\\\"17.382\\\"/>\\n  <rect x=\\\"19.99\\\" y=\\\"262.47\\\" width=\\\"2.8348\\\" height=\\\"12.802\\\"/>\\n  <rect x=\\\"24.526\\\" y=\\\"262.49\\\" width=\\\"2.8348\\\" height=\\\"8.2544\\\"/>\\n  <rect x=\\\"28.783\\\" y=\\\"262.46\\\" width=\\\"2.8348\\\" height=\\\"5.1972\\\"/>\\n  <rect transform=\\\"matrix(0,-1,-1,0,0,0)\\\" x=\\\"-286.54\\\" y=\\\"-34.801\\\" width=\\\"2.8348\\\" height=\\\"22.08\\\"/>\\n  <rect transform=\\\"matrix(0,-1,-1,0,0,0)\\\" x=\\\"-281.91\\\" y=\\\"-34.753\\\" width=\\\"2.8348\\\" height=\\\"17.382\\\"/>\\n  <rect transform=\\\"matrix(0,-1,-1,0,0,0)\\\" x=\\\"-277.28\\\" y=\\\"-34.801\\\" width=\\\"2.8348\\\" height=\\\"12.802\\\"/>\\n  <rect transform=\\\"matrix(0,-1,-1,0,0,0)\\\" x=\\\"-272.75\\\" y=\\\"-34.781\\\" width=\\\"2.8348\\\" height=\\\"8.2544\\\"/>\\n  <rect transform=\\\"matrix(0,-1,-1,0,0,0)\\\" x=\\\"-268.49\\\" y=\\\"-34.809\\\" width=\\\"2.8348\\\" height=\\\"5.1972\\\"/>\\n </g>\\n</svg>\";","export default \"<svg version=\\\"1.1\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<g transform=\\\"translate(-.20339 -.1017)\\\">\\n<circle cx=\\\"12.203\\\" cy=\\\"12.102\\\" r=\\\"10.322\\\" fill=\\\"none\\\" stroke=\\\"#42a5f5\\\"/>\\n<path d=\\\"m12.33 5.7461a6.4831 6.3814 0 0 0 -6.4824 6.3809 6.4831 6.3814 0 0 0 6.4824 6.3809 6.4831 6.3814 0 0 0 6.4844 -6.3809 6.4831 6.3814 0 0 0 -6.4844 -6.3809zm1.8594 1.916a2.329 2.2925 0 0 1 2.3301 2.293 2.329 2.2925 0 0 1 -2.3301 2.291 2.329 2.2925 0 0 1 -2.3281 -2.291 2.329 2.2925 0 0 1 2.3281 -2.293z\\\" fill=\\\"#42a5f5\\\" fill-rule=\\\"evenodd\\\"/>\\n<ellipse cx=\\\"19.631\\\" cy=\\\"4.6154\\\" rx=\\\"2.329\\\" ry=\\\"2.2925\\\" fill=\\\"#42a5f5\\\" fill-rule=\\\"evenodd\\\"/>\\n</g>\\n</svg>\";","export default \"<svg viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M2.25 15.75v-8h2l3 3 3-3h2v8h-2v-5.17l-3 3-3-3v5.17h-2m14-8h3v4h2.5l-4 4.5-4-4.5h2.5z\\\" fill=\\\"#42a5f5\\\"/></svg>\";","export default \"<svg version=\\\"1.1\\\" viewBox=\\\"0 0 720 720\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<title>Layer 1</title>\\n<g fill-rule=\\\"evenodd\\\">\\n<path d=\\\"m209.25 329.98-156.88 57.656 121.32 85.822 96.752-95.805-61.197-47.674z\\\" fill=\\\"#4db6ac\\\"/>\\n<path d=\\\"m480.19 71.446c-13.123 1.784-9.5653 1.013-28.4 16.091-18.009 14.417-69.925 100.35-97.674 129.26-24.688 25.721-34.46 12.199-60.102 33.661-25.68 21.494-65.273 64.464-65.273 64.464l63.978 47.319 101.43-139.48c23.948-32.932 23.693-37.266 36.743-71.821 6.3846-16.906 17.76-29.899 27.756-45.808 12.488-19.874 30.186-34.855 21.543-33.68z\\\" fill=\\\"#00897b\\\"/>\\n<path d=\\\"m478.21 69.796c-31.267-.18821-62.068 137.25-115.56 242.69-54.543 107.52-162.24 176.82-162.24 176.82 18.157 8.2431 34.682 4.9095 54.236 23.395 13.375 16.164 52.091 95.975 75.174 146.12 0 0 18.965-10.297 42.994-27.694 24.03-17.398 53.124-41.897 73.384-70.301 26.884-37.692 47.897-61.042 65.703-75.271s32.404-19.336 46.459-20.54c50.237-4.3047 124.58 85.792 124.58 85.792s-155.67-480.71-204.74-481.01z\\\" fill=\\\"#ffb74d\\\"/>\\n</g>\\n</svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path fill=\\\"#8bc34a\\\" d=\\\"m12 1.85c-.27 0-.55.07-.78.2l-7.44 4.3c-.48.28-.78.8-.78 1.36v8.58c0 .56.3 1.08.78 1.36l1.95 1.12c.95.46 1.27.47 1.71.47 1.4 0 2.21-.85 2.21-2.33v-8.47c0-.12-.1-.22-.22-.22h-.93c-.13 0-.23.1-.23.22v8.47c0 .66-.68 1.31-1.77.76l-2.05-1.17c-.07-.05-.11-.13-.11-.21v-8.58c0-.09.04-.17.11-.21l7.44-4.29c.06-.04.16-.04.22 0l7.44 4.29c.07.04.11.12.11.21v8.58c0 .08-.04.16-.11.21l-7.44 4.29c-.06.04-.16.04-.23 0l-1.88-1.14c-.08-.03-.16-.04-.21-.01-.53.3-.63.36-1.12.51-.12.04-.31.11.07.32l2.48 1.47c.24.14.5.21.78.21s.54-.07.78-.21l7.44-4.29c.48-.28.78-.8.78-1.36v-8.58c0-.56-.3-1.08-.78-1.36l-7.44-4.3c-.23-.13-.5-.2-.78-.2m2 6.15c-2.12 0-3.39.89-3.39 2.39 0 1.61 1.26 2.08 3.3 2.28 2.43.24 2.62.6 2.62 1.08 0 .83-.67 1.18-2.23 1.18-1.98 0-2.4-.49-2.55-1.47-.02-.1-.11-.18-.22-.18h-.96c-.12 0-.21.09-.21.22 0 1.24.68 2.74 3.94 2.74 2.35 0 3.7-.93 3.7-2.55 0-1.61-1.08-2.03-3.37-2.34-2.31-.3-2.54-.46-2.54-1 0-.45.2-1.05 1.91-1.05 1.5 0 2.09.33 2.32 1.36.02.1.11.17.21.17h.97c.05 0 .11-.02.15-.07.04-.04.07-.1.05-.16-.14-1.78-1.32-2.6-3.7-2.6z\\\"/>\\n</svg>\";","export default \"<svg viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><defs><linearGradient id=\\\"prefix__a\\\" x1=\\\"-666.97\\\" x2=\\\"-666.97\\\" y1=\\\"142.12\\\" y2=\\\"142.12\\\" gradientTransform=\\\"translate(103.96 1.86) scale(.13619)\\\" gradientUnits=\\\"userSpaceOnUse\\\"><stop stop-color=\\\"#F29100\\\" offset=\\\"0\\\"/><stop stop-color=\\\"#EC670F\\\" offset=\\\"1\\\"/></linearGradient></defs><path d=\\\"M12.019 15.021l.003-.008c-.005-.021-.006-.026-.003.008z\\\" fill=\\\"none\\\"/><path d=\\\"M4.51 3.273a2.523 2.523 0 00-2.524 2.523V11.3c.361-.13.88-.898 1.043-1.085.285-.327.337-.743.478-1.006.323-.597.379-1.009 1.113-1.009.342 0 .478.08.71.39.16.216.438.615.568.882.15.307.396.724.503.808.08.062.16.11.233.137.119.044.218-.037.297-.1.102-.082.145-.247.24-.467.135-.317.283-.697.367-.83.146-.23.195-.501.352-.633.232-.195.535-.208.618-.225.466-.092.677.225.907.43.15.133.355.403.5.765.114.283.26.544.32.707.059.158.203.41.289.713.077.275.286.486.365.616 0 0 .121.34.858.65.16.067.482.176.674.246.32.116.63.101 1.025.054.281 0 .434-.408.562-.734.075-.193.148-.745.197-.902.048-.153-.064-.27.031-.405.112-.156.178-.164.242-.368.138-.436.936-.458 1.384-.458.374 0 .327.363.96.239.364-.072.714.046 1.1.149.324.086.63.184.812.398.119.139.412.834.113.863.029.035.05.099.104.134-.067.262-.357.075-.518.041-.217-.045-.37.007-.583.101-.363.162-.894.143-1.21.407-.27.223-.269.721-.394 1 0 0-.348.895-1.106 1.443-.194.14-.574.477-1.4.605-.372.057-.719.062-1.1.043-.186-.009-.362-.018-.549-.02-.11-.002-.48-.013-.461.022l-.041.103.024.138c.015.083.019.149.022.225.006.157-.013.32-.005.478.017.328.138.627.154.958.017.368.199.758.375 1.059.067.114.169.128.213.269.052.161.003.333.028.505.1.668.292 1.366.592 1.97a.16.16 0 00.008.014c.371-.062.743-.196 1.226-.267.885-.132 2.115-.064 2.906-.138 2-.188 3.085.82 4.882.407V5.796a2.523 2.523 0 00-2.523-2.523zm-.907 11.144c-.015 0-.03 0-.046.003-.159.025-.313.08-.412.24-.08.13-.108.355-.164.505-.064.175-.176.338-.274.505-.18.305-.504.581-.644.879-.028.06-.053.13-.076.2v3.402c.163.028.333.062.524.113 1.407.375 1.75.407 3.13.25l.13-.018c.105-.22.187-.968.255-1.2.054-.178.127-.32.155-.5.026-.173-.003-.337-.017-.493-.04-.393.285-.533.44-.87.14-.304.22-.651.336-.963.11-.298.284-.721.579-.872-.036-.041-.617-.06-.772-.076a5.064 5.064 0 01-.5-.07c-.314-.064-.656-.126-.965-.2a10.15 10.15 0 01-.947-.328c-.298-.138-.503-.497-.732-.507zm5.737.83c-.74.149-.97.876-1.32 1.451-.192.319-.396.59-.548.928-.14.312-.128.657-.368.924a2.55 2.55 0 00-.528.922c-.023.067-.088.776-.158.943l1.101-.078c1.026.07.73.464 2.332.378l2.529-.078a7.127 7.127 0 00-.228-.588c-.07-.147-.16-.434-.218-.56a3.536 3.536 0 00-.309-.526c-.184-.215-.227-.23-.28-.503-.095-.473-.344-1.33-.637-1.923-.151-.306-.403-.562-.634-.784-.2-.195-.655-.522-.734-.505z\\\" fill=\\\"#ff9800\\\"/></svg>\\n\";","export default \"<svg version=\\\"1.1\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<path d=\\\"m12.5 14c-1 0-3 1-3 2 0 2 3 2 3 2v-1a1 1 0 0 1 -1 -1 1 1 0 0 1 1 -1v-1m0 5s-4-.5-4-2.5c0-3 3-3.75 4-3.75v-1.25c-1 0-5 1.5-5 4.5 0 4 5 4 5 4v-1m-1.93-11.97 1.19.53c.43-2.44 1.58-4.06 1.58-4.06-.43 1.03-.71 1.88-.89 2.55 1.21-2.5 3.66-4.05 3.66-4.05-1.18 1.18-2.05 2.46-2.64 3.53 1.58-1.68 3.77-2.78 3.77-2.78-2.69 1.72-3.9 4.45-4.2 5.21l.55.08c0 .52 0 1 .25 1.38.76 1.89 4.66 2.05 4.66 6.58s-4.03 6-6.17 6-6.83-.97-6.83-6 4.95-5.07 5.83-7.08c.12-.38-.76-1.89-.76-1.89z\\\" fill=\\\"#9575cd\\\"/>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.1//EN\\\" \\\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\\\"><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" version=\\\"1.1\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M12,18.08C5.37,18.08 0,15.36 0,12C0,8.64 5.37,5.92 12,5.92C18.63,5.92 24,8.64 24,12C24,15.36 18.63,18.08 12,18.08M6.81,10.13C7.35,10.13 7.72,10.23 7.9,10.44C8.08,10.64 8.12,11 8.03,11.47C7.93,12 7.74,12.34 7.45,12.56C7.17,12.78 6.74,12.89 6.16,12.89H5.29L5.82,10.13H6.81M3.31,15.68H4.75L5.09,13.93H6.32C6.86,13.93 7.3,13.87 7.65,13.76C8,13.64 8.32,13.45 8.61,13.18C8.85,12.96 9.04,12.72 9.19,12.45C9.34,12.19 9.45,11.89 9.5,11.57C9.66,10.79 9.55,10.18 9.17,9.75C8.78,9.31 8.18,9.1 7.35,9.1H4.59L3.31,15.68M10.56,7.35L9.28,13.93H10.7L11.44,10.16H12.58C12.94,10.16 13.18,10.22 13.29,10.34C13.4,10.46 13.42,10.68 13.36,11L12.79,13.93H14.24L14.83,10.86C14.96,10.24 14.86,9.79 14.56,9.5C14.26,9.23 13.71,9.1 12.91,9.1H11.64L12,7.35H10.56M18,10.13C18.55,10.13 18.91,10.23 19.09,10.44C19.27,10.64 19.31,11 19.22,11.47C19.12,12 18.93,12.34 18.65,12.56C18.36,12.78 17.93,12.89 17.35,12.89H16.5L17,10.13H18M14.5,15.68H15.94L16.28,13.93H17.5C18.05,13.93 18.5,13.87 18.85,13.76C19.2,13.64 19.5,13.45 19.8,13.18C20.04,12.96 20.24,12.72 20.38,12.45C20.53,12.19 20.64,11.89 20.7,11.57C20.85,10.79 20.74,10.18 20.36,9.75C20,9.31 19.37,9.1 18.54,9.1H15.79L14.5,15.68Z\\\" fill=\\\"#1E88E5\\\" /></svg>\\n\";","export default \"<svg viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M21.783 4.039c.488 0 .796.398.667.885l-3.145 14.151c-.11.488-.587.886-1.075.886H2.218c-.487 0-.796-.398-.666-.886l3.144-14.15c.11-.488.587-.886 1.075-.886h16.012M15.812 15.98h-3.98a.832.832 0 0 0-.827.836c0 .467.369.845.826.845h3.981a.845.845 0 0 0 .846-.845.843.843 0 0 0-.846-.836m-10.001.278a.867.867 0 0 0-.209 1.214.884.884 0 0 0 1.234.23c7.315-5.146 7.364-5.205 7.414-5.235a.844.844 0 0 0 .279-.597.903.903 0 0 0-.16-.558L9.473 6.06a.863.863 0 0 0-1.244-.03.868.868 0 0 0-.05 1.234l4.13 4.418z\\\" style=\\\"fill:#03a9f4;stroke-width:.99517\\\"/></svg>\";","export default \"<svg version=\\\"1.1\\\" viewBox=\\\"0 0 300 300\\\" xml:space=\\\"preserve\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><style type=\\\"text/css\\\">\\n\\t.st0{display:none;fill:#4CAF50;}\\n\\t.st1{fill:#263238;}\\n\\t.st2{fill:#FFFFFF;}\\n</style><g transform=\\\"matrix(13.507 0 0 13.507 -18.982 -9.1065)\\\" style=\\\"fill:#cfd8dc\\\"><path class=\\\"st2\\\" d=\\\"m6.7 8.6h2.1 2.3v11.1c.7.1 1.4.2 2.1.3v1.2h-6.4v-1.3c.7-.1 1.4-.2 2.1-.3v-9.6c-.3 0-.7 0-1.1-.1s-.7-.1-1-.2c0-.3-.1-.7-.1-1.1z\\\" style=\\\"fill:#cfd8dc\\\"/><path class=\\\"st2\\\" d=\\\"m11.3 5.7v-2.8c.4-.1.9-.3 1.5-.4.5-.1 1.3-.2 2.2-.1.5.1 1.1.2 1.7.6.2.2.7.6 1 1.3.5 1.1.1 2.2-.1 2.6-.6 1.4-2 1.9-2.2 2 .4.1 1 .2 1.6.7 1.1.9 1.2 2.1 1.3 2.4.2 1.7-1.1 2.9-1.3 3.2-.8.8-1.6 1-2.1 1.2-.8.3-1.6.3-2.1.3v-1.6h.9c.4-.1 1.1-.2 1.8-.7.2-.2.8-.7.8-1.7 0-.2.1-1.1-.6-1.8-.4-.4-.8-.5-1.4-.7s-1.2-.2-1.5-.2v-1.4c.3 0 .7-.1 1.2-.3s1-.3 1.4-.8c.2-.2.8-.9.7-1.9 0-.2-.1-.8-.6-1.2-.5-.5-1.2-.5-1.6-.5-.6 0-1.1.2-1.3.3-.1.5-.1 1.1-.2 1.6-.3-.1-.7-.1-1.1-.1z\\\" style=\\\"fill:#cfd8dc\\\"/></g></svg>\";","export default \"<svg version=\\\"1.1\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"m12 15.385c.47397.71096 1.1088 1.295 1.862 1.6928l-1.862 1.862-1.862-1.862c.75327-.3978 1.3965-.9818 1.862-1.6928m4.2319-4.0626a1.6928 1.6928 0 0 0-1.6928 1.6928 1.6928 1.6928 0 0 0 1.6928 1.6928 1.6928 1.6928 0 0 0 1.6928-1.6928c0-.93948-.76174-1.6928-1.6928-1.6928m-8.4638 0a1.6928 1.6928 0 0 0-1.6928 1.6928 1.6928 1.6928 0 0 0 1.6928 1.6928 1.6928 1.6928 0 0 0 1.6928-1.6928c0-.93948-.76174-1.6928-1.6928-1.6928m8.4638-2.1159a3.3855 3.3855 0 0 1 3.3855 3.3855 3.3855 3.3855 0 0 1-3.3855 3.3855 3.3855 3.3855 0 0 1-3.3855-3.3855 3.3855 3.3855 0 0 1 3.3855-3.3855m-8.4638 0a3.3855 3.3855 0 0 1 3.3855 3.3855 3.3855 3.3855 0 0 1-3.3855 3.3855 3.3855 3.3855 0 0 1-3.3855-3.3855 3.3855 3.3855 0 0 1 3.3855-3.3855m-4.0287-6.5171c1.4896 3.1316.41472 5.4676-.584 7.7867-.3047.6771-.46551 1.3796-.46551 2.1159a5.0783 5.0783 0 0 0 5.0783 5.0783c.17774-.0085.35548-.01693.53322-.04232l2.5053 2.5053 1.1934 1.1765 1.1934-1.1765 2.5053-2.5053c.17774.02539.35548.03385.53322.04232a5.0783 5.0783 0 0 0 5.0783-5.0783c0-.73635-.16081-1.4388-.46551-2.1159-.99872-2.3191-2.0736-4.6551-.584-7.7867-2.2344 1.7435-5.4168 3.1231-8.2606 3.1316-2.8438-.00846-6.0262-1.3881-8.2606-3.1316z\\\" style=\\\"fill:#ef5350;stroke-width:.84638\\\"/></svg>\\n\";","export default \"<svg width=\\\"100\\\" height=\\\"100\\\" enable-background=\\\"new 0 0 821.326 907.827\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 100 99.999997\\\" xml:space=\\\"preserve\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><g transform=\\\"translate(.1933 -.1)\\\" fill=\\\"#42a5f5\\\"><path d=\\\"m98.079 38.548-18.858-18.868-5.0864 5.0876 16.313 16.322-16.313 16.321 5.0864 5.0864 18.858-18.861c.67928-.68168 1.0547-1.5874 1.0547-2.5491-.003-.96174-.37659-1.8627-1.0547-2.5396\\\" clip-path=\\\"url(#SVGID_2_)\\\" stroke-width=\\\"1.1917\\\"/><path d=\\\"m25.483 42.794-5.0888-5.0888-18.865 18.863c-.67691.67691-1.0511 1.5826-1.0487 2.5444 0 .96174.37182 1.8639 1.0487 2.542l18.865 18.865 5.0888-5.0864-16.321-16.321z\\\" clip-path=\\\"url(#SVGID_2_)\\\" stroke-width=\\\"1.1917\\\"/><polygon transform=\\\"matrix(1.1917 0 0 1.1917 -306.84 -629.05)\\\" points=\\\"316.68 557.77 310.22 551.74 281.84 551.74 288.3 557.77\\\" clip-path=\\\"url(#SVGID_2_)\\\"/><polygon transform=\\\"matrix(1.1917 0 0 1.1917 -306.84 -629.05)\\\" points=\\\"310.22 572.9 316.68 566.86 288.3 566.86 281.84 572.9\\\" clip-path=\\\"url(#SVGID_2_)\\\"/><polygon transform=\\\"matrix(1.1917 0 0 1.1917 -306.84 -629.05)\\\" points=\\\"316.68 588.02 310.22 581.98 281.84 581.98 288.3 588.02\\\" clip-path=\\\"url(#SVGID_2_)\\\"/></g></svg>\\n\";","export default \"<svg version=\\\"1.1\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><g transform=\\\"translate(.40625)\\\"><g transform=\\\"translate(-.6031 .86453)\\\"><g transform=\\\"translate(.066291)\\\"><g transform=\\\"translate(-.13258)\\\" style=\\\"fill:#fbc02d\\\" aria-label=\\\"Q\\\"><path d=\\\"m12.201 15.549c.89923-1.1011 1.4681-2.9363 1.4681-4.7347 0-1.9636-.69736-3.8539-1.8719-5.1201-1.1562-1.2479-2.661-1.8535-4.5696-1.8535s-3.4134.60561-4.5696 1.8535c-1.1745 1.2663-1.8719 3.1565-1.8719 5.1568 0 2.0003.69736 3.8906 1.8719 5.1568 1.1562 1.2479 2.6793 1.8535 4.5696 1.8535 1.3764 0 2.4041-.27528 3.4685-.91758l1.5782 1.4865 1.3947-1.4865zm-3.3951-3.2115-1.3947 1.4865 1.4131 1.3397c-.42209.22022-1.0277.34868-1.6149.34868-2.2022 0-3.6703-1.8535-3.6703-4.6613 0-2.8078 1.4681-4.6613 3.6887-4.6613 2.2389 0 3.6887 1.8352 3.6887 4.6797 0 1.1011-.20187 2.0921-.60561 2.8996z\\\" style=\\\"fill:#fbc02d;stroke-width:1.3639\\\"/></g><path d=\\\"m17.719 3.8633-.61133 4h-1.5l-.33984 2h1.5l-.32031 2h-1.5l-.33984 2h1.5l-.60938 4h2l.60938-4h1l-.60938 4h2l.60938-4h1.5l.33984-2h-1.5l.32031-2h1.5l.33984-2h-1.5l.61133-4h-2l-.61133 4h-1l.61133-4zm1.0488 6h1l-.32031 2h-1z\\\" style=\\\"fill:#fbc02d\\\"/></g></g></g></svg>\\n\";","export default \"<svg version=\\\"1.1\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"m18.041 3.1767c2.2391.38208 2.8789 1.9193 2.8434 3.5275v-.035542l-1.0129 13.266-13.133.89744h.00889c-1.0929-.044427-3.5187-.15105-3.6342-3.5453l1.2173-2.2214 2.4613 5.74 2.097-6.7707-.044427.0089.017771-.01777 6.8507 2.1858-1.7682-6.9129 6.5308-.40873-5.1447-4.2117 2.7101-1.5105v.00889m-14.928 14.075v.01777-.01777m3.803-10.378c2.6301-2.6212 6.0333-4.1673 7.3394-2.8434 1.2973 1.3062-.071083 4.5227-2.7012 7.1351-2.6656 2.6123-6.0155 4.2473-7.3216 2.9322-1.3062-1.3239.035542-4.6116 2.6745-7.2239z\\\" style=\\\"fill:#f44336;stroke-width:.88855\\\"/></svg>\\n\";","export default \"<svg version=\\\"1.1\\\" viewBox=\\\"0 0 144 144\\\" viewbox=\\\"0 0 144 144\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<path d=\\\"m68.252 26.207a3.5614 3.5614 0 0 1 7.1228 0 3.5614 3.5614 0 0 1 -7.1228 0m-42.486 32.245a3.5614 3.5614 0 0 1 7.1228 0 3.5614 3.5614 0 0 1 -7.1228 0m84.97.16616a3.5614 3.5614 0 0 1 7.1228 0 3.5614 3.5614 0 0 1 -7.1228 0m-74.661 4.8792c1.6386-.72764 2.3788-2.6481 1.6512-4.2902l-1.5802-3.5729h6.2141v28.01h-12.537a43.847 43.847 0 0 1 -1.4197 -16.738zm25.994.68867v-8.2561h14.798c.7643 0 5.3971.88347 5.3971 4.3475 0 2.8762-3.5534 3.9075-6.4754 3.9075zm-20.203 44.452a3.5614 3.5614 0 0 1 7.1228 0 3.5614 3.5614 0 0 1 -7.1228 0m52.769.16615a3.5614 3.5614 0 0 1 7.1228 0 3.5614 3.5614 0 0 1 -7.1228 0m1.1012-8.0762c-1.7543-.37585-3.48.74025-3.8559 2.498l-1.7876 8.342a43.847 43.847 0 0 1 -36.566 -.17532l-1.7864-8.342c-.37585-1.7555-2.1015-2.8739-3.8547-2.4969l-7.3646 1.5813a43.847 43.847 0 0 1 -3.8078 -4.4884h35.834c.40564 0 .67607-.0733.67607-.44231v-12.676c0-.36897-.27043-.44231-.67607-.44231h-10.48v-8.0349h11.335c1.0347 0 5.5323.29564 6.9704 6.0445.45033 1.7681 1.4392 7.5193 2.1153 9.3607.67378 2.0649 3.417 6.19 6.3402 6.19h18.501a43.847 43.847 0 0 1 -4.061 4.7004zm19.898-33.468a43.847 43.847 0 0 1 .0928 7.6121h-4.4987c-.45031 0-.63138.29564-.63138.7368v2.066c0 4.8631-2.7421 5.9208-5.145 6.1901-2.2883.25782-4.8253-.95796-5.1381-2.3582-1.3499-7.5926-3.5992-9.214-7.1514-12.016 4.4082-2.7994 8.9952-6.9291 8.9952-12.457 0-5.9689-4.0919-9.7285-6.881-11.572-3.9132-2.5794-8.2458-3.0962-9.4146-3.0962h-46.526a43.847 43.847 0 0 1 24.531 -13.845l5.4842 5.7535c1.2398 1.2983 3.2933 1.3464 4.5904.10542l6.1362-5.8692a43.847 43.847 0 0 1 30.017 21.379l-4.2008 9.4879c-.72534 1.642.0149 3.5625 1.6524 4.2902zm10.477.15355-.14324-1.4667 4.3268-4.0358c.88005-.82045.55117-2.4717-.57407-2.8911l-5.5312-2.0683-.43314-1.4278 3.4502-4.7921c.70356-.974.0572-2.529-1.1276-2.7238l-5.8325-.94879-.70128-1.3097 2.451-5.3799c.50189-1.0955-.43087-2.4969-1.6363-2.451l-5.9196.20626-.93504-1.1344 1.3602-5.7661c.27502-1.1711-.91326-2.3605-2.0843-2.0855l-5.7649 1.359-1.1367-.93504.20741-5.9196c.0459-1.1986-1.3567-2.1348-2.4499-1.6375l-5.3788 2.4522-1.3097-.70242-.95108-5.8337c-.19251-1.1825-1.7486-1.8288-2.7226-1.1275l-4.7955 3.4502-1.4255-.432-2.0683-5.5323c-.41939-1.1275-2.0718-1.4518-2.8899-.57638l-4.0358 4.3303-1.4667-.14323-3.1168-5.0361c-.63023-1.0198-2.3181-1.0198-2.9461 0l-3.1168 5.0361-1.4679.14323-4.0369-4.3303c-.81816-.87545-2.4705-.55117-2.8899.57638l-2.0683 5.5323-1.4266.432-4.7944-3.4502c-.974-.70357-2.5313-.055-2.7238 1.1275l-.95108 5.8337-1.3097.70242-5.3788-2.4522c-1.0932-.4996-2.4957.43887-2.4499 1.6375l.20626 5.9196-1.1367.93504-5.7649-1.359c-1.1711-.27272-2.3605.91441-2.0855 2.0855l1.3579 5.7661-.93275 1.1344-5.9196-.20626c-1.194-.03438-2.1348 1.3556-1.6375 2.451l2.4522 5.3799-.70242 1.3097-5.8325.94879c-1.1848.19251-1.8265 1.7498-1.1275 2.7238l3.4502 4.7921-.43314 1.4278-5.5323 2.0683c-1.123.41939-1.4518 2.0706-.57409 2.8911l4.328 4.0358-.14324 1.4667-5.035 3.1168c-1.0198.63023-1.0198 2.3181 0 2.9461l5.035 3.1168.14324 1.4667-4.328 4.0369c-.87774.81816-.54888 2.4682.57409 2.8899l5.5323 2.0683.43314 1.4278-3.4502 4.7932c-.70128.97629-.05614 2.5324 1.1287 2.7226l5.8314.9488.70242 1.312-2.4522 5.3776c-.4996 1.0932.44346 2.4992 1.6375 2.451l5.9173-.2074.93504 1.1367-1.3579 5.7672c-.27501 1.1688.91441 2.3559 2.0855 2.0809l5.7649-1.3579 1.1367.93275-.20626 5.9208c-.04584 1.1986 1.3567 2.1359 2.4499 1.6363l5.3788-2.451 1.3097.70241.95108 5.8303c.19251 1.1871 1.7498 1.8288 2.7238 1.1298l4.7921-3.4525 1.4278.43428 2.0683 5.53c.41939 1.123 2.0718 1.4541 2.8899.57409l4.0369-4.328 1.4679.14667 3.1168 5.035c.62794 1.0152 2.3158 1.0176 2.9461 0l3.1168-5.035 1.4667-.14667 4.0358 4.328c.81816.88003 2.4705.54888 2.8899-.57409l2.0683-5.53 1.4278-.43428 4.7932 3.4525c.974.69899 2.5301.0551 2.7226-1.1298l.95108-5.8303 1.3097-.70241 5.3788 2.451c1.0932.49961 2.4934-.43544 2.4499-1.6363l-.20627-5.9208 1.1356-.93275 5.7649 1.3579c1.1711.27501 2.3594-.91212 2.0844-2.0809l-1.3579-5.7672.93275-1.1367 5.9196.2074c1.194.0482 2.1382-1.3579 1.6363-2.451l-2.4511-5.3776.70129-1.312 5.8325-.9488c1.1871-.19021 1.8311-1.7463 1.1275-2.7226l-3.4502-4.7932.43314-1.4278 5.5312-2.0683c1.1253-.42168 1.4541-2.0718.5741-2.8899l-4.3268-4.0369.14322-1.4667 5.035-3.1168c1.0198-.62794 1.021-2.3158.00092-2.9461z\\\" fill=\\\"#ff7043\\\" stroke-width=\\\"1.1459\\\"/>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) by Marsupilami -->\\n<svg\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   version=\\\"1.0\\\"\\n   width=\\\"1024\\\"\\n   height=\\\"420\\\"\\n   viewBox=\\\"0 0 129.24898 53.067852\\\"\\n   id=\\\"svg2320\\\">\\n  <defs\\n     id=\\\"defs2322\\\" />\\n  <g\\n     transform=\\\"translate(-310.37551,-505.82825)\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       d=\\\"M 18.46875,0 C 16.638866,-0.041377236 14.748438,0.1725 12.8125,0.65625 C 3.86,2.8925 -6.16125,14.40875 4.78125,27.6875 L 11.3125,35.59375 L 13.15625,37.84375 C 14.39375,39.315 16.41875,39.28875 17.90625,38.0625 C 19.40125,36.829998 19.82625,34.80875 18.59375,33.3125 C 18.592173,33.310397 18.071121,32.679752 17.84375,32.40625 L 17.875,32.40625 C 17.402936,31.838361 17.300473,31.743127 16.8125,31.15625 C 14.448752,28.313409 11.75,25.03125 11.75,25.03125 C 6.9987503,19.265 9.11875,12.14125 15.5625,8.09375 C 21.24,4.5275001 31.65875,5.80125 35.25,11.65625 C 32.988202,4.9805465 26.398246,0.17930136 18.46875,0 z M 19.78125,13.9375 C 18.937031,13.90875 18.055625,14.230625 17.3125,14.84375 C 15.815001,16.0775 15.39375,18.10125 16.625,19.59375 C 16.627499,19.597501 16.77625,19.7825 17.03125,20.09375 C 19.863614,23.496657 23.625,28.0625 23.625,28.0625 C 28.3775,33.82875 26.25625,40.92125 19.8125,44.96875 C 14.136251,48.53375 3.71625,47.2575 0.125,41.40625 C 2.90875,49.618751 12.23875,54.9875 22.5625,52.40625 C 31.5175,50.166248 41.53625,38.6825 30.59375,25.40625 L 22.9375,16.15625 L 22.0625,15.0625 C 21.44375,14.326875 20.625469,13.96625 19.78125,13.9375 z \\\"\\n       transform=\\\"translate(310.37551,505.82825)\\\"\\n       style=\\\"fill:#007cc2;fill-opacity:1;fill-rule:nonzero;stroke:none\\\"\\n       id=\\\"path2440\\\" />\\n    <path\\n       d=\\\"M 53.53125,6.3125 C 47.8625,6.3125 41.374998,9.2362506 41.375,16.28125 C 41.375,22.9875 46.708752,24.869999 52,26.15625 C 57.355,27.4425 62.656249,28.187498 62.65625,32.65625 C 62.65625,37.05875 58.121251,37.875002 54.78125,37.875 C 50.3725,37.875 46.218751,36.27125 46.03125,31.125 L 40.6875,31.125 C 41,39.79375 47.161249,42.968749 54.46875,42.96875 C 61.085,42.96875 68.343749,40.27125 68.34375,31.9375 C 68.34375,25.16375 63.041251,23.25625 57.6875,21.96875 C 52.7125,20.6825 47.031249,20.00625 47.03125,15.875 C 47.03125,12.3525 50.75625,11.40625 53.96875,11.40625 C 57.49875,11.40625 61.151251,12.810001 61.53125,17.28125 L 66.875,17.28125 C 66.435,8.74625 60.712498,6.3125001 53.53125,6.3125 z M 84.40625,6.3125 C 77.159998,6.3125001 70.90625,9.3625 70.59375,18.03125 L 75.9375,18.03125 C 76.190003,12.883749 79.5275,11.40625 84.0625,11.40625 C 87.466253,11.40625 91.3125,12.20625 91.3125,17.21875 C 91.312501,21.553749 86.2975,21.155 80.375,22.375 C 74.833751,23.526251 69.34375,25.23 69.34375,33.15625 C 69.343748,40.133748 74.20125,42.96875 80.125,42.96875 C 84.656249,42.968749 88.6025,41.255 91.5625,37.53125 C 91.562499,41.322498 93.3525,42.96875 96.125,42.96875 C 97.823751,42.968749 98.9925,42.60875 99.9375,42 L 99.9375,37.53125 C 99.244997,37.802498 98.7525,37.875 98.3125,37.875 C 96.612501,37.875002 96.625,36.68 96.625,33.96875 L 96.625,15.9375 C 96.624998,7.7424996 90.265,6.3125 84.40625,6.3125 z M 112.40625,6.3125 C 106.7375,6.3125 100.25,9.2362506 100.25,16.28125 C 100.25,22.9875 105.61625,24.869999 110.90625,26.15625 C 116.2625,27.4425 121.5625,28.187498 121.5625,32.65625 C 121.5625,37.05875 117.02625,37.875002 113.6875,37.875 C 109.2775,37.875 105.125,36.27125 104.9375,31.125 L 99.5625,31.125 C 99.87625,39.79375 106.06875,42.968749 113.375,42.96875 C 119.9875,42.96875 127.21875,40.27125 127.21875,31.9375 C 127.21875,25.16375 121.91625,23.25625 116.5625,21.96875 C 111.58875,20.6825 105.9375,20.00625 105.9375,15.875 C 105.9375,12.3525 109.63125,11.40625 112.84375,11.40625 C 116.37,11.40625 120.025,12.810001 120.40625,17.28125 L 125.78125,17.28125 C 125.3425,8.74625 119.59,6.3125001 112.40625,6.3125 z M 91.25,24.0625 L 91.25,29.96875 C 91.25,33.1525 88.36875,37.875 81.3125,37.875 C 78.040002,37.875002 75,36.51375 75,32.71875 C 75.000003,28.452501 78.0375,27.115 81.5625,26.4375 C 85.15375,25.761251 89.1725,25.6875 91.25,24.0625 z M 38.21875,39.40625 C 37.088748,39.406249 36.125,40.28375 36.125,41.46875 C 36.125001,42.658749 37.08875,43.53125 38.21875,43.53125 C 39.338748,43.53125 40.28125,42.65875 40.28125,41.46875 C 40.281252,40.283749 39.33875,39.40625 38.21875,39.40625 z M 127.15625,39.40625 C 126.0225,39.406249 125.0625,40.285 125.0625,41.46875 C 125.0625,42.66 126.0225,43.53125 127.15625,43.53125 C 128.275,43.53125 129.25,42.66 129.25,41.46875 C 129.25,40.285 128.275,39.40625 127.15625,39.40625 z M 38.21875,39.75 C 39.146248,39.750002 39.875,40.49 39.875,41.46875 C 39.875,42.456249 39.14625,43.1875 38.21875,43.1875 C 37.273748,43.187501 36.53125,42.45625 36.53125,41.46875 C 36.53125,40.489999 37.27375,39.75 38.21875,39.75 z M 127.15625,39.75 C 128.08375,39.750002 128.84375,40.49125 128.84375,41.46875 C 128.84375,42.4575 128.08375,43.1875 127.15625,43.1875 C 126.21,43.187499 125.5,42.4575 125.5,41.46875 C 125.5,40.49125 126.21,39.75 127.15625,39.75 z M 37.40625,40.28125 L 37.40625,42.65625 L 37.78125,42.65625 L 37.78125,41.625 L 38.1875,41.625 L 38.8125,42.65625 L 39.21875,42.65625 L 38.53125,41.59375 C 38.88375,41.553751 39.15625,41.395 39.15625,40.96875 C 39.156251,40.49875 38.8775,40.28125 38.3125,40.28125 L 37.40625,40.28125 z M 126.375,40.28125 L 126.375,42.65625 L 126.71875,42.65625 L 126.71875,41.625 L 127.15625,41.625 L 127.78125,42.65625 L 128.1875,42.65625 L 127.5,41.59375 C 127.84625,41.554998 128.125,41.395 128.125,40.96875 C 128.125,40.49875 127.8425,40.28125 127.28125,40.28125 L 126.375,40.28125 z M 37.78125,40.59375 L 38.28125,40.59375 C 38.528749,40.593749 38.78125,40.6425 38.78125,40.9375 C 38.78125,41.300001 38.5275,41.3125 38.21875,41.3125 L 37.78125,41.3125 L 37.78125,40.59375 z M 126.71875,40.59375 L 127.21875,40.59375 C 127.47125,40.593749 127.75,40.64125 127.75,40.9375 C 127.75,41.300001 127.4625,41.3125 127.15625,41.3125 L 126.71875,41.3125 L 126.71875,40.59375 z \\\"\\n       transform=\\\"translate(310.37551,505.82825)\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none\\\"\\n       id=\\\"path2448\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"300\\\" height=\\\"300\\\" enable-background=\\\"new 0 0 370 160\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 300 300\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n <g transform=\\\"translate(0,140)\\\">\\n  <path d=\\\"m105.46 69.517c-7.8746 0-13.452-7.5213-13.452-15.37v-0.32702c0-7.8484 5.5778-13.735 13.452-13.735h164.05c1.4765-4.9052 2.6249-11.446 3.2811-17.986h-137.81c-7.8746 0-14.273-6.0498-14.273-13.898 0-7.8484 6.3981-13.898 14.273-13.898h137.31c-0.82027-6.5403-1.9686-13.081-3.7732-17.986h-104.01c-7.8746 0-14.273-6.0498-14.273-13.898 0-7.8484 6.3981-13.898 14.273-13.898h91.87c-21.327-37.607-60.864-61.315-106.14-61.315-67.918 0-123.04 54.448-123.04 122.3 0 67.856 55.122 123.28 123.04 123.28 46.591 0 87.112-25.507 107.95-63.114h-152.73z\\\" fill=\\\"#0277bd\\\" stroke-width=\\\"1.6378\\\"/>\\n </g>\\n</svg>\";","export default \"<svg enable-background=\\\"new 0 0 256 256\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 256 256\\\" xml:space=\\\"preserve\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><g transform=\\\"translate(-6.1456 .2445)\\\" fill=\\\"#f44336\\\" fill-rule=\\\"evenodd\\\"><rect transform=\\\"matrix(.98931 -.14586 0 1 0 0)\\\" x=\\\"60.251\\\" y=\\\"59.435\\\" width=\\\"150.71\\\" height=\\\"49.488\\\"/><rect transform=\\\"matrix(.98931 -.14586 0 1 0 0)\\\" x=\\\"60.237\\\" y=\\\"122.87\\\" width=\\\"150.71\\\" height=\\\"49.488\\\"/><rect transform=\\\"matrix(.98931 -.14586 0 1 0 0)\\\" x=\\\"60.231\\\" y=\\\"186.14\\\" width=\\\"150.71\\\" height=\\\"49.488\\\"/><rect transform=\\\"rotate(17.923)\\\" x=\\\"87.528\\\" y=\\\"67.767\\\" width=\\\"100.48\\\" height=\\\"9.2044\\\"/><rect transform=\\\"rotate(17.923)\\\" x=\\\"126.41\\\" y=\\\"23.362\\\" width=\\\"100.48\\\" height=\\\"9.2044\\\"/><rect transform=\\\"rotate(17.923)\\\" x=\\\"107.03\\\" y=\\\"128.07\\\" width=\\\"100.48\\\" height=\\\"9.2044\\\"/><rect transform=\\\"rotate(17.923)\\\" x=\\\"145.89\\\" y=\\\"83.566\\\" width=\\\"100.48\\\" height=\\\"9.2044\\\"/></g></svg>\\n\";","export default \"<svg version=\\\"1.1\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"m5.1102 21.186 4.7769-13.883-.94161-2.1933h-1.5387v-2.2966h2.2966c.48229 0 .89568.29856 1.0679.72343l6.5798 15.353h1.5387v2.2966h-2.2966c-.49377 0-.90716-.31004-1.0679-.73492l-4.2947-10.002-3.6861 10.737z\\\" style=\\\"fill:#f44336;stroke-width:1.1483\\\"/></svg>\\n\";","export default \"\\n<svg clip-rule=\\\"evenodd\\\" fill-rule=\\\"evenodd\\\" stroke-linejoin=\\\"round\\\" stroke-miterlimit=\\\"1.414\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 500 500\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<path d=\\\"m46 46v408h408v-408h-408zm310.02 198.17v.00586c3.9124.01226 8.3586.21357 11.703.57617 13.619 1.4734 24.225 7.349 33.248 18.416 4.4934 5.5129 6.0307 7.9253 5.7031 8.957-.21108.66564-3.294 2.874-13.096 9.3809-9.6287 6.3921-12.731 8.3066-13.451 8.3066-.73045 0-2.2517-1.5657-4.4453-4.5723-4.2244-5.7892-8.5373-8.4314-15.205-9.3125-7.1704-.9496-13.602 1.3105-16.752 5.8887-2.6923 3.9112-3.099 10.206-.95899 14.779 2.4792 5.2976 6.9671 8.2262 24.166 15.768 19.836 8.6975 29.888 14.651 37.209 22.039 7.8838 7.9563 11.878 17.143 13.105 30.137.59907 6.3332-.13284 13.84-1.9453 19.943-4.4447 14.961-16.439 25.916-34.02 31.072-4.8597 1.4248-9.3818 2.276-13.855 2.6035-6.8282.50274-16.603.22572-22.486-.63086-14.884-2.1677-31.686-10.829-40.064-20.65-4.1128-4.8205-9.3633-12.754-9.3633-14.15 0-.67351.33372-1.0557 1.6562-1.8965 3.9213-2.4911 26.394-15.338 26.83-15.338.26345 0 1.4373 1.3838 2.6074 3.0742 2.6512 3.8278 9.17 10.407 12.484 12.602 2.7074 1.7928 6.1691 3.2327 10.279 4.2715 2.3539.5868 3.6002.69141 8.7363.69141 5.2475-.00176 6.3243-.0901 8.6719-.72071 6.2096-1.6713 11.057-5.1293 13.111-9.3535.90039-1.8254.91797-2.0533.91797-6.4805v-4.5898l-1.1035-2.1894c-2.6734-5.3067-8.4338-8.9474-26.645-16.836-8.3655-3.6237-18.611-8.733-22.611-11.275-9.1282-5.801-15.455-12.433-19.607-20.551-4.13-8.073-4.7459-11.078-4.7559-23.217-.01017-9.5024-.02592-9.3858 1.9414-15.451 1.785-5.5038 5.439-11.652 9.4727-15.939 8.0511-8.5582 19.813-14.058 32.406-15.152 1.6108-.15244 3.768-.21208 6.1152-.20508zm-108.36 1.877h.00391c24.253.01227 38.156.0962 38.379.23633.42036.2603.47265 2.3708.47265 15.842v15.541l-24.201.08789-24.201.08789v68.713c0 37.793-.07654 68.938-.18164 69.213-.17115.46249-2.0325.49805-17.779.49805h-17.588l-.18164-.71094c-.11745-.39011-.20308-31.536-.20508-69.213l-.00586-68.504-24.201-.08594-24.201-.08789v-15.357c0-12.18.08414-15.442.4082-15.766.333-.34334 12.684-.43187 65.902-.48437 10.261-.01034 19.495-.01477 27.58-.00977z\\\" fill=\\\"#0288d1\\\"/>\\n</svg>\";"],"names":[],"sourceRoot":""}